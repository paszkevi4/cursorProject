{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/appReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","redux/firebase/chargesFB.js","components/HomePage/Charges.js","redux/firebase/incomeFB.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","incomesReducer","incomes","income","initialized","appReducer","reducers","combineReducers","app","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","window","minWidth","iconSelect","color","nameSelect","iconPicker","chargeConfirm","zIndex","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","connect","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","totalIncome","handlePeriodChange","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","addEditItem","gap","gapPercent","length","confirm","temp","handleClickAlert","handleCloseDialog","e","target","innerText","handleChange","event","id","value","keyCode","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","pickerBlock","TextField","datePicker","label","fullWidth","onChange","error","autoFocus","select","selected","map","el","i","MenuItem","key","docId","onKeyUp","moneyInput","input","DialogActions","Button","onClick","Snackbar","autoHideDuration","severity","HomeTable","icon","Block","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","seconds","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","collection","add","catch","Charges","filtered","setFiltered","selectVal","milliseconds","time","setTime","getTime","filter","arr","getClassNamesFor","undefined","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","find","innerEl","doc","delete","ctegory","set","createIncome","Incomes","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","useEffect","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","updateIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","showIncomes","showCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","toLocaleDateString","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","elOut","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataLine","labels","datasets","lineTension","backgroundColor","borderColor","hoverBorderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","summary","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","startDataBar","hoverBackgroundColor","barPercentage","startDataDoughnut","startForecast","round","options","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","addEditCategoryHandler","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","setCurrentCategory","createChargeCategory","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","initializeAppThunk","onSnapshot","ss","docs","chargeCats","incomeCats","Promise","all","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.26e0352c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\n// type updateUserNameACType = {\n//   type: typeof UPDATE_USER_NAME;\n//   newUserName: string;\n// };\n\n// type updatePhoneNumberACType = {\n//   type: typeof UPDATE_PHONE_NUMBER;\n//   newPhoneNumber: any;\n// };\n\n// type toggleWarningACType = {\n//   type: typeof TOGGLE_WARNING;\n//   showWarning: boolean;\n// };\n\n// type setLimitACType = {\n//   type: typeof SET_MONEY_LIMIT;\n//   newLimit: number;\n// };\n\n// type actionType =\n//   | updateUserACType\n//   | updateUserNameACType\n//   | updatePhoneNumberACType\n//   | toggleWarningACType\n//   | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<chargeCategoryType>;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\nexport const setChargeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charge-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<incomeCategoryType>;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (\n  categories: Array<incomeCategoryType>,\n): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\n// export const createIncomeCategoryAC = (\n//   category: incomeCategoryType,\n// ): createIncomeCategoryACType => ({\n//   type: CREATE_CATEGORY,\n//   category,\n// });\n\n// export const updateIncomeCategoryAC = (\n//   index: number,\n//   category: incomeCategoryType,\n// ): updateIncomeCategoryACType => ({\n//   type: UPDATE_CATEGORY,\n//   category,\n//   index,\n// });\n\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n//   type: DELETE_CATEGORY,\n//   index,\n// });\n\nexport const setIncomeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('income-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomeCategoriesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_CHARGES = 'FETCH_CHARGES';\nconst CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchChargeACType = {\n  type: typeof FETCH_CHARGES;\n  charges: Array<chargeType>;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case FETCH_CHARGES:\n      return [...action.charges];\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\n  type: FETCH_CHARGES,\n  charges,\n});\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\n// THUNK\n\nexport const setChargesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charges1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargesAC(\n          ss.docs.map((el: any) => {\n            const charge = el.data();\n            return { ...charge, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_INCOMES = 'FETCH_INCOMES';\nconst CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchIncomesACType = {\n  type: typeof FETCH_INCOMES;\n  incomes: Array<incomeType>;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = fetchIncomesACType | createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 7, 23),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  // { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 8, 18),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case FETCH_INCOMES:\n      return [...action.incomes];\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\n  type: FETCH_INCOMES,\n  incomes,\n});\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport const fetchIncomesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('incomes1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomesAC(\n          ss.docs.map((el: any) => {\n            const income = el.data();\n            return { ...income, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomesReducer;\n","import { setSettingsThunk } from './settingsReducer';\nimport { setChargeCategoriesThunk } from './chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from './incomeCategoriesReducer';\nimport { setChargesThunk } from './chargesReducer';\nimport { fetchIncomesThunk } from './incomesReducer';\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\ntype setInitializedACType = {\n  type: typeof SET_INITIALIZED;\n};\n\nlet initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action: setInitializedACType) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setInitializedAC = (): setInitializedACType => {\n  return { type: SET_INITIALIZED };\n};\n\nexport const initializeAppThunk = () => (dispatch: any) => {\n  const settings = dispatch(setSettingsThunk());\n  const charges = dispatch(setChargesThunk());\n  const incomes = dispatch(fetchIncomesThunk());\n  const chargeCats = dispatch(setChargeCategoriesThunk());\n  const incomeCats = dispatch(setIncomeCategoriesThunk());\n  Promise.all([settings, charges, incomes, chargeCats, incomeCats]).then(() => {\n    dispatch(setInitializedAC());\n  });\n};\n\nexport default appReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport appReducer from './appReducer';\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  app: appReducer,\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List, makeStyles } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className='logo'>\n        <img src={logo} alt=\"logo\"/>\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName='active'>\n          <div className='link-container'>\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName='active'>\n          <div className='link-container'>\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName='active'>\n          <div className='link-container'>\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName='active'>\n          <div className='link-container'>\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const ModalStyles = {\n  window: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  iconPicker: {\n    color: \"grey\",\n  },\n  chargeConfirm:{\n    zIndex: '999999999'\n  }\n};\n\nexport const TabsAreaStyles = {\n  sectionToggle: {\n    display: \"flex\",\n    marginBottom: \"20px\",\n  },\n  toggleButton: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n  },\n  toggleButtonActive: {\n    borderBottom: \"1px solid cornflowerblue\",\n  },\n};\n\nexport const CategoryStyles = {\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n};\n\nexport const TableStyles = {\n  table: {\n    minWidth: 300,\n  },\n  tableWrapper:{\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\n    borderRadius: '25px'\n  },\n  tableHead: {\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n};\n\nexport const ChartsStyles = {\n  root: {\n    marginLeft: \"3%\",\n    width: \"150px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { ModalStyles } from \"../Styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n  total,\n  totalIncome,\n  handlePeriodChange,\n  ...props\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(currentTable.currentCategory);\n  const [description, setDescription] = useState(\n    currentTable.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n  const [money, setMoney] = useState(currentTable.currentMoney);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney(\"\");\n  };\n\n  const addEditItem = () => {\n    const gap = total - +money;\n    const gapPercent = ((total - +money) / totalIncome) * 100;\n    if (category && money > 0 && money && date.length === 10) {\n      if (\n        props.showWarning &&\n        (gap <= props.moneyLimit || gapPercent < props.percentLimit)\n      ) {\n        const isSure = window.confirm(\"Are you sure?\");\n        if (isSure) {\n          const temp = {\n            category: category,\n            description: description,\n            date: new Date(date),\n            money: +money,\n          };\n          updateCharge(temp);\n          handleClose();\n          resetInputs();\n          handleClickAlert();\n          handlePeriodChange();\n        }\n        return null;\n      } else {\n        updateCharge({\n          //   name: chargeCategories[category].name,\n          //   icon: chargeCategories[category].icon,\n          category: category,\n          description: description,\n          date: new Date(date),\n          money: +money,\n        });\n        handleClose();\n        resetInputs();\n        handleClickAlert();\n        handlePeriodChange();\n      }\n    }\n    handlePeriodChange();\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditItem();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"selectName\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else {\n      setCategory(event.target.value);\n    }\n  };\n\n  const handleClickAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              autoFocus\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name*\"\n              selected={name}\n              value={category}\n              onChange={handleChange}\n              error={category.length < 1 ? true : false}\n              fullWidth\n            >\n              {[\n                chargeCategories.map((el, i) => (\n                  <MenuItem\n                    key={i}\n                    value={el.docId}\n                    className={classes.nameSelect}\n                  >\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money*\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              error={money <= 0 ? true : false}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={4000}\n        onClose={handleCloseAlert}\n      >\n        <Alert onClose={handleCloseAlert} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    showWarning: state.settings.showWarning,\n    moneyLimit: state.settings.moneyLimit,\n    percentLimit: state.settings.percentLimit,\n  };\n};\n\nexport default connect(mapStateToProps, null)(AddCharges);\n","import React, { useState } from 'react';\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCharges from './AddCharges';\nimport { CategoryStyles } from '../Styles';\n\nimport { Block } from '@material-ui/icons';\n\n/*const useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});*/\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst HomeTable = ({\n  icon = <Block />,\n  name = 'deleted category',\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n  category,\n  total,\n  totalIncome,\n  handlePeriodChange,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n    currentCategory: category,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest('th'));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteMoney();\n      handlePeriodChange();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentCategory: category,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      handlePeriodChange();\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={'avatar'} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n              total={total}\n              totalIncome={totalIncome}\n              handlePeriodChange={handlePeriodChange}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n const useSortTableData = (items, item, config = null) => {\n\tconst [sortConfig, setSortConfig] = React.useState(config);\n\n\tconst sortedItems = React.useMemo(() => {\n\t\tlet sortableItems = [...items];\n\t\tlet sortedName = [...item];\n\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\tif(sortConfig.key === \"category\" ){\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, item, sortConfig]);\n\n\tconst requestSort = (key) => {\n\t\tlet direction = 'ascending';\n\t\tif (\n\t\t\t\tsortConfig &&\n\t\t\t\tsortConfig.key === key &&\n\t\t\t\tsortConfig.direction === 'ascending'\n\t\t) {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\treturn { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortTableData;\n","import { db } from './firebase';\n\nexport const createCharge = (category) => {\n  db.collection('charges1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateCharge = (docId, ctegory) => {\n  db.collection('charges1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteCharge = (docId) => {\n  db.collection('charges1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport useSortTableData from './sortTable';\nimport AddCharges from './AddCharges';\nimport { createCharge, updateCharge, deleteCharge } from '../../redux/firebase/chargesFB';\n\n//\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n\n//\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [filtered, setFiltered] = React.useState(props.charges); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.charges.filter((arr) => {\n          // filtered:  ...items\n          console.log(arr.date.getTime() > time);\n          return arr.date.getTime() > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.charges]); //items\n    }\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    filtered, //props.charges\n    props.categories,\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n        total={props.total}\n        totalIncome={props.totalIncome}\n        handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('category')}\n                  className={getClassNamesFor('category')}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('description')}\n                  className={getClassNamesFor('description')}>\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('date')}\n                  className={getClassNamesFor('date')}>\n                  {' '}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('money')}\n                  className={getClassNamesFor('money')}>\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              props.charges.map((el, i) => (\n                <HomeTable\n                  // icon={props.categories[el.category]?.icon}\n                  //name={props.categories[el.category]?.name}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteCharge(el.docId);\n                  }}\n                  updateCharge={(charge) => {\n                    updateCharge(el.docId, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                  total={props.total}\n                  totalIncome={props.totalIncome}\n                  handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncome = (category) => {\n  db.collection('incomes1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncome = (docId, ctegory) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncome = (docId) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport AddCharges from './AddCharges';\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from './sortTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n\nimport { createIncome, updateIncome, deleteIncome } from '../../redux/firebase/incomeFB';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.incomes.filter((arr) => {\n          // filtered:  ...items\n          console.log(arr.date.getTime() > time);\n          return arr.date.getTime() > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.incomes]); //items\n    }\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    filtered, //props.incomes,\n    props.categories,\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n        handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('category')}\n                  className={getClassNamesFor('category')}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('description')}\n                  className={getClassNamesFor('description')}>\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('date')}\n                  className={getClassNamesFor('date')}>\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('money')}\n                  className={getClassNamesFor('money')}>\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>Avatar</TableCell>\n              <TableCell className={'table-direct'}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              ...props.incomes.map((el, i) => (\n                <HomeTable\n                  // name={props.categories[el.category]?.name}\n                  // icon={props.categories[el.category]?.icon}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteIncome(el.docId);\n                  }}\n                  updateCharge={(income) => {\n                    updateIncome(el.docId, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                  handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","export const totalCounter = (incomes, charges) => {\n  return totalIncomes(incomes) - totalCharges(charges);\n};\n\nexport const totalIncomes = (incomes) => {\n  return incomes.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n\nconst totalCharges = (charges) => {\n  return charges.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n","import React, { useState, useEffect } from 'react';\nimport { totalCounter, totalIncomes } from '../Functions';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(totalIncomes(props.incomes));\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setTotal(totalCounter(props.incomes, props.charges));\n  }, [props]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\n\n//\n// Styles\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// Components\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n//\n//\nimport { totalCounter } from '../Common/Functions';\nimport { totalIncomes } from '../Common/Functions';\nimport { TabsAreaStyles } from '../Styles';\n//\n// totalCounter(props.incomes, props.charges)\n//\n//\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                avatar={props.avatar}\n                total={totalCounter(props.incomes, props.charges)}\n                totalIncome={totalIncomes(props.incomes)}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\nimport { ChartsStyles } from '../Styles';\n\nconst useStyles = makeStyles(ChartsStyles);\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => setActivePeriod(8);\n  const getMonth = () => setActivePeriod(31);\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const trueMoneyCharges = [];\n  const allMoney = [];\n  let lastWeekIn = 0;\n  let penultimateWeekIn = 0;\n  let lastWeekOut = 0;\n  let penultimateWeekOut = 0;\n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataIncomes.push(el);\n      trueMoneyIncomes.push(el.money);\n      allMoney.push(+el.money);\n      if (fullIncomes.find((innerEl) => innerEl.docId === el.category)) {\n        fullIncomes.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekIn += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekIn += el.money;\n    }\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataCharges.push(el);\n      trueMoneyCharges.push(el.money);\n      allMoney.push(+el.money);\n\n      if (fullCharges.find((innerEl) => innerEl.docId === el.category)) {\n        fullCharges.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekOut += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekOut += el.money;\n    }\n  });\n\n  allDates.forEach((d) => {\n    let elIn = trueDataIncomes.find((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    let elOut = trueDataCharges.find((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    if (elIn) {\n      moneyIn.push(elIn.money);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      moneyOut.push(elOut.money);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum > 0) {\n      categoriesBar.push(el.name);\n      trueMoneyIncomesBar.push(el.sum);\n    }\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum > 0) {\n      categoriesDoughnut.push(el.name);\n      trueMoneyChargesDoughnut.push(el.sum);\n    }\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  const futureWeekIn =\n    ((lastWeekIn - penultimateWeekIn) / penultimateWeekIn) * lastWeekIn + lastWeekIn;\n  const futureWeekOut =\n    ((lastWeekOut - penultimateWeekOut) / penultimateWeekOut) * lastWeekOut + lastWeekOut;\n\n  const startDataLine = {\n    labels: activePeriod === 8 ? allDays : allDates,\n    datasets: [\n      {\n        label: 'Incomes',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(0,0,0,0)',\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: isShowIncomes ? moneyIn : null,\n      },\n      {\n        label: 'Charges',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        borderDash: [15, 5],\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: isShowCharges ? moneyOut : null,\n        fill: false,\n      },\n    ],\n  };\n\n  const summary = {\n    title: {\n      display: true,\n      text: 'Summary',\n      position: 'top',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          display: false,\n          ticks: {\n            suggestedMin: minSum,\n            suggestedMax: maxSum,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const incomes_cat = {\n    title: {\n      display: true,\n      text: 'Income categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 500,\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const charges_cat = {\n    title: {\n      display: true,\n      text: 'Charges categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: true,\n      position: 'right',\n      labels: {\n        fontColor: 'white',\n      },\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const forecast_money = {\n    title: {\n      display: true,\n      text: 'Forecast for incomes and charges',\n      fontSize: 20,\n    },\n    legend: {\n      display: true,\n      position: 'right',\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startForecast = {\n    labels: ['Penultimate week', 'Last week', 'Future week'],\n    datasets: [\n      {\n        label: 'Incomes',\n        fill: false,\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)],\n      },\n      {\n        label: 'Charges',\n        fill: false,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)],\n      },\n    ],\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"charts\">\n        <div className=\"line-chart__container\">\n          <div className=\"line-chart\">\n            <Line data={startDataLine} options={summary} />\n          </div>\n          <div className=\"chart-buttons\">\n            <div className=\"chart-buttons__btn\">\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 31 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getMonth}>\n                Month\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 8 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getWeek}>\n                Week\n              </Button>\n            </div>\n            <div className=\"chart-buttons__checkbox\">\n              <span>\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                  Incomes\n                </label>\n              </span>\n              <span>\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                  Charges\n                </label>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons_separated\">\n          <div className=\"buttons_btn__separated\">\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 31 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getMonth}>\n              Month\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 8 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getWeek}>\n              Week\n            </Button>\n          </div>\n          <div className=\"buttons_checkbox__separated\">\n            <span>\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                Incomes\n              </label>\n            </span>\n            <span>\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                Charges\n              </label>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"bar-chart\">\n          <Bar data={startDataBar} options={incomes_cat} />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut data={startDataDoughnut} options={charges_cat} />\n        </div>\n        <div className=\"forecast__container\">\n          <div className=\"forecast-chart\">\n            <Line data={startForecast} options={forecast_money} />\n          </div>\n          <div className=\"forecast_descr\">\n            <h3>Your budget has changed in the last week</h3>\n            <p>\n              If this continues, your incomes will{' '}\n              <span>\n                {lastWeekIn < penultimateWeekIn ? 'decrease or remain unchanged' : 'increase'}\n              </span>{' '}\n              and your charges will{' '}\n              <span>\n                {lastWeekOut < penultimateWeekOut ? 'decrease or remain unchanged' : 'increase'}\n              </span>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useEffect, useState } from \"react\";\n\nimport { ModalStyles } from \"../Styles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  currentCategory = {\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentIcon: \"\",\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(\n    currentCategory.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentCategory.currentDate\n      ? currentCategory.currentDate\n      : values.currentDate\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setIcon(\"\");\n  };\n\n  const addEditCategoryHandler = () => {\n    if (\n      name.length >= 3 &&\n      name &&\n      icon !== \"object\" &&\n      icon &&\n      date.length === 10\n    ) {\n      updateCategory({\n        name: name,\n        description: description,\n        date: new Date(date),\n        icon: icons.indexOf(icon),\n      });\n      handleClose();\n      resetInputs();\n      handleClickSuccess();\n    }\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditCategoryHandler();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === \"object\") {\n      setIcon(event.target.value);\n    }\n  };\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const handleClickSuccess = () => {\n    setOpenSuccess(true);\n  };\n\n  const handleCloseSuccess = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSuccess(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickersBlock}>\n            <TextField\n              autoFocus\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon*\"\n              value={icon}\n              onChange={handleChange}\n              error={typeof icon === \"string\" ? true : false}\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name*\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={name}\n              error={name.length < 3 ? true : false}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={4000}\n        onClose={handleCloseSuccess}\n      >\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\nimport { CategoryStyles } from '../Styles';\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import { db } from './firebase';\n\nexport const createChargeCategory = (category) => {\n  db.collection('charge-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateChargeCategory = (docId, ctegory) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteChargeCategory = (docId) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createChargeCategory,\n  updateChargeCategory,\n  deleteChargeCategory,\n} from '../../redux/firebase/chargeCategoriesFB';\nimport { TableStyles } from '../Styles';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteChargeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateChargeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncomeCategory = (category) => {\n  db.collection('income-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncomeCategory = (docId, ctegory) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncomeCategory = (docId) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport {\n  createIncomeCategory,\n  updateIncomeCategory,\n  deleteIncomeCategory,\n} from \"../../redux/firebase/incomeCategoriesFB\";\nimport {TableStyles} from '../Styles'\n\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteIncomeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateIncomeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {TabsAreaStyles } from '../Styles';\n\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport Categories from './Categories';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport {\n  handleFireBaseUploadInfo,\n  handleFireBaseUploadAvatar,\n} from '../../redux/firebase/profileFB';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  const uploadNewData = () => {\n    if (avatarNew) {\n      handleFireBaseUploadAvatar(\n        setAvatarNew,\n        avatarNew,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    } else {\n      handleFireBaseUploadInfo(\n        avatar,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    }\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <div className={style.main_inner}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Name\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n          <PhoneInput\n            inputStyle={{ width: '100%' }}\n            id=\"phone\"\n            value={phone}\n            country=\"ua\"\n            onChange={(e) => setPhone(e)}\n          />\n        </div>\n        <div className={style.main_inner}>\n          <div>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showWarning}\n                  onChange={() => {\n                    setWarning(!showWarning);\n                  }}\n                />\n              }\n              label=\"Warn me when remains:\"\n            />\n          </div>\n          <Limits\n            title=\"amount\"\n            limit={currentMoneyLimit}\n            setLimit={setCurrentMoneyLimit}\n            step={100}\n            disabled={!showWarning}\n          />\n          <Limits\n            title=\"percent\"\n            limit={currentPercentLimit}\n            setLimit={setCurrentPercentLimit}\n            step={5}\n            disabled={!showWarning}\n          />\n        </div>\n        <div className={style.settings_button}>\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n            SAVE\n          </Button>\n        </div>\n\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n//\n// Redux\nimport { initializeAppThunk } from '../src/redux/appReducer';\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\nimport { setChargesThunk } from '../src/redux/chargesReducer';\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\n\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initializeAppThunk();\n    // props.setSettingsThunk();\n    // props.setChargeCategoriesThunk();\n    // props.setIncomeCategoriesThunk();\n    // props.setChargesThunk();\n    // props.fetchIncomesThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      {props.initialized && (\n        <main>\n          <Route exact path=\"/\">\n            <Redirect to=\"/homepage\" />\n          </Route>\n          <Route path=\"/homepage\" render={() => <HomePage />} />\n          <Route path=\"/charts\" render={() => <Charts />} />\n          <Route path=\"/categories\" render={() => <Categories />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n        </main>\n      )}\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nconst AppContainer = connect(mapStateToProps, { initializeAppThunk })(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"avatar\":\"Settings_avatar__Y8NHF\",\"main_inner\":\"Settings_main_inner__3Vnrn\",\"settings_button\":\"Settings_settings_button__2RL5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}