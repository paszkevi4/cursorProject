{"version":3,"sources":["redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/settingsReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/HomeTable.js","components/HomePage/HomeSelect.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","App.js","components/TemporaryComponent/TempContainer.jsx","components/TemporaryComponent/Temp.jsx","serviceWorker.js","index.js"],"names":["icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","initialState","name","description","date","Date","icon","incomeCategoriesReducer","state","action","type","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","avatar","userName","phoneNumber","showWarning","limit","settingsReducer","newUserName","newPhoneNumber","newLimit","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","NavBar","to","useStyles","makeStyles","categoryBlock","alignItems","categoryName","display","HomeTable","classes","React","useState","anchorEl","setAnchorEl","handleClose","e","console","log","currentTarget","target","innerText","parentNode","TableRow","TableCell","component","scope","className","Button","aria-controls","aria-haspopup","onClick","closest","size","color","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","HomeSelect","onChange","val","handlePeriodChange","value","selected","theme","table","minWidth","tableHead","backgroundColor","addButton","float","modal","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","spacing","homeSelect","homeMenu","margin","height","homeMenuTitle","marginRight","Charges","props","setOpen","variant","startIcon","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","el","i","toString","key","Incomes","home","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","headerBlock","headerBalance","flexDirection","balanceTitle","textAlign","fontSize","balanceAmount","fontWeight","HomePage","activeClassName","path","render","connect","dispatch","createIncome","createIncomeAC","updateIncome","updateIncomeAC","deleteIncome","deleteIncomeAC","createCharge","createChargeAC","updateCharge","updateChargeAC","deleteCharge","deleteChargeAC","divStyle","width","startData","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","lineTension","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","Charts","style","options","title","text","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","Component","dialogWindow","iconSelect","pickersBlock","iconPicker","AddCategory","createCategory","today","values","currentDate","getFullYear","getMonth","getDate","setName","setDescription","setDate","setIcon","resetInputs","handleCloseDialog","handleChange","event","Dialog","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","select","datePicker","DialogActions","categoryNameBlock","categoryIcon","Category","propsDate","fullDate","year","month","day","getDay","addButtonWrapper","paddingBottom","createChargeCategory","createIncomeCategory","Categories","balanceBlock","exact","createIncomeCategoryAC","updateIncomeCategory","updateIncomeCategoryAC","deleteIncomeCategory","deleteIncomeCategoryAC","createChargeCategoryAC","updateChargeCategory","updateChargeCategoryAC","deleteChargeCategory","deleteChargeCategoryAC","Settings","updateUserName","updateUserNameAC","App","Object","Navbar","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35ffac04.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { icons } from './iconsReducer';\n\nconst CREATE_CATEGORY = 'CREATE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype incomeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [\n  {\n    name: 'My mom',\n    description: 'Money from my mom',\n    date: new Date(2020, 7, 25),\n    icon: icons[15],\n  },\n  {\n    name: 'Sale book',\n    description: 'Sold a book',\n    date: new Date(2020, 7, 24),\n    icon: icons[13],\n  },\n  { name: 'Work', description: '', date: new Date(2020, 7, 23), icon: icons[19] },\n  {\n    name: 'Donations',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 22),\n    icon: icons[15],\n  },\n];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default incomeCategoriesReducer;\n","import { icons } from './iconsReducer';\n\nconst SET_CATEGORY = 'SET_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype chargeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    name: 'Food',\n    description: 'For food',\n    date: new Date(2020, 7, 26),\n    icon: icons[12],\n  },\n  {\n    name: 'Clothes',\n    description: 'For clothes',\n    date: new Date(2020, 7, 25),\n    icon: icons[7],\n  },\n  { name: 'Restoraunts', description: '', date: new Date(2020, 7, 24), icon: icons[8] },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    icon: icons[2],\n  },\n  { name: 'Pets', description: 'For smth else', date: new Date(2020, 7, 21), icon: icons[14] },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeCategoryAC = (\n  category: chargeCategoryType,\n): createChargeCategoryACType => ({\n  type: SET_CATEGORY,\n  category,\n});\n\nexport const updateChargeCategoryAC = (\n  index: number,\n  category: chargeCategoryType,\n): updateChargeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  index,\n  category,\n});\n\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default chargeCategoriesReducer;\n","const CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport default chargesReducer;\n","const CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(2020, 7, 29), money: 500 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 7, 28), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 7, 25), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport default incomesReducer;\n","const UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  limit: number;\n};\n\ntype updateUserNameACType = {\n  type: typeof UPDATE_USER_NAME;\n  newUserName: string;\n};\n\ntype updatePhoneNumberACType = {\n  type: typeof UPDATE_PHONE_NUMBER;\n  newPhoneNumber: any;\n};\n\ntype toggleWarningACType = {\n  type: typeof TOGGLE_WARNING;\n  showWarning: boolean;\n};\n\ntype setLimitACType = {\n  type: typeof SET_LIMIT;\n  newLimit: number;\n};\n\ntype actionType =\n  | updateUserNameACType\n  | updatePhoneNumberACType\n  | toggleWarningACType\n  | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: null,\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  limit: 5000,\n};\n\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER_NAME:\n      return { ...state, userName: action.newUserName };\n    case UPDATE_PHONE_NUMBER:\n      return { ...state, phoneNumber: action.newPhoneNumber };\n    case TOGGLE_WARNING:\n      return { ...state, showWarning: action.showWarning };\n    case SET_LIMIT:\n      return { ...state, limit: action.newLimit };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserNameAC = (newUserName: string): updateUserNameACType => ({\n  type: UPDATE_USER_NAME,\n  newUserName,\n});\n\nexport const updatePhoneNumberAC = (newPhoneNumber: any): updatePhoneNumberACType => ({\n  type: UPDATE_PHONE_NUMBER,\n  newPhoneNumber,\n});\n\nexport const toggleWarningAC = (showWarning = !initialState.showWarning): toggleWarningACType => ({\n  type: TOGGLE_WARNING,\n  showWarning,\n});\n\nexport const setLimitACType = (newLimit: number): setLimitACType => ({\n  type: SET_LIMIT,\n  newLimit,\n});\n\nexport default settingsReducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <div>LOGO</div>\n    {/* logo */}\n    {/* navigation */}\n    <NavLink to=\"/homepage\">home</NavLink>\n    <NavLink to=\"/charts\">charts</NavLink>\n    <NavLink to=\"/categories\">categories</NavLink>\n    <NavLink to=\"/settings\">settings</NavLink>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\n// import ReactDOM from 'react-dom'\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst useStyles = makeStyles({\n\tcategoryBlock:{\n\t\t// display: 'flex',\n\t\talignItems: 'center'\n\t},\n\tcategoryName:{\n\t\tdisplay: 'flex',\n\t}\n});\n\nconst HomeTable = ({ category, description, date, money }) => {\n\n\tconst classes = useStyles();\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst handleClick = (e) => {\n\t\tsetAnchorEl(e.currentTarget);\n\t\tconsole.log(e.target.closest('th'))\n\t};\n\n\tconst handleClose = (e) => {\n\t\tconsole.log(e.currentTarget);\n\t\tif (e.target.innerText === \"Delete\") {\n\t\t\tconsole.log(e.target.parentNode.parentNode.parentNode);\n\t\t\t// console.log(ReactDOM.findDOMNode(this))\n\t\t}\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t<div className={classes.categoryBlock}>\n\t\t\t\t\t\t<div className={classes.categoryName}>{category}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell>{description}</TableCell>\n\t\t\t\t<TableCell>{date}</TableCell>\n\t\t\t\t<TableCell>{money}</TableCell>\n\t\t\t\t<TableCell>\n\t\t\t\t\t<Button\n\t\t\t\t\t\t\taria-controls=\"home-menu\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<MoreVertIcon color=\"action\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"home-menu\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem onClick={handleClose}>Edit</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={handleClose}>Delete</MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t);\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n// const MySelect = React.createClass({\n// \tgetInitialState: function() {\n// \t\treturn {\n// \t\t\tvalue: 'select'\n// \t\t}\n// \t},\n// \tchange: function(event){\n// \t\tthis.setState({value: event.target.value});\n// \t},\n// \trender: function(){\n// \t\treturn(\n// \t\t\t\t<div>\n// \t\t\t\t\t<select id=\"lang\" onChange={this.change} value={this.state.value}>\n// \t\t\t\t\t\t<option value=\"select\">Select</option>\n// \t\t\t\t\t\t<option value=\"Java\">Java</option>\n// \t\t\t\t\t\t<option value=\"C++\">C++</option>\n// \t\t\t\t\t</select>\n// \t\t\t\t\t<p></p>\n// \t\t\t\t\t<p>{this.state.value}</p>\n// \t\t\t\t</div>\n// \t\t);\n// \t}\n// });\n//\n// React.render(<MySelect />, document.body);\n\n\nconst HomeSelect = ()=>{\nreturn (\n<select onChange={(val) => this.handlePeriodChange(val.target.value)}\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n\t<option value=\"TODAY\">Today</option>\n\t<option value=\"THIS_WEEK\">This Week</option>\n\t<option value=\"THIS_MONTH\">This Month</option>\n\t<option value=\"THIS_YEAR\">This Year</option>\n\t<option selected value=\"LAST_AVAILABLE_DAY\">Last Availabe Day</option>\n</select>\n)\n};\n\nexport default HomeSelect;","import React from 'react';\nimport HomeTable from './HomeTable';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport HomeSelect from './HomeSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));\n\nconst Charges = ({ props }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <HomeSelect />\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Money</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.map((el, i) => (\n                <HomeTable\n                  name={el.category}\n                  description={el.description}\n                  date={el.date.toString()}\n                  money={el.money}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\nexport default Charges;\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport HomeSelect from './HomeSelect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));\n\nconst Incomes = ({ props }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <HomeSelect />\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Money</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.map((el, i) => (\n                <HomeTable\n                  name={el.category}\n                  description={el.description}\n                  date={el.date.toString()}\n                  money={el.money}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\nimport Charges from \"./Charges\";\nimport Incomes from \"./Incomes\";\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// in props you have two arrays of objects:\n\n// props.incomes = [{category, description, date, money}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, money}, {-||-} ... {-||-}]\n//\n//\n//\n// for charge CRUD use the following:\n//\n// props.createIncome({newIncome})\n// props.updateIncome(index, {updatedIncome})\n// props.deleteIncome(index)\n//\n//\n// for income CRUD use the following:\n//\n// props.createCharge({newCharge})\n// props.updateCharge(index, {updatedCharge})\n// props.deleteCharge(index)\n\nconst useStyles = makeStyles({\n  home: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  headerBlock: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'top',\n    // marginBottom: '100px',\n  },\n  headerBalance: {\n    display: 'flex',\n    flexDirection: 'column',\n    // justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '100px',\n  },\n  balanceTitle: {\n    textAlign: 'right',\n    fontSize: '1.2em',\n    marginBottom: '10px',\n  },\n  balanceAmount: {\n    fontSize: '1.7em',\n    fontWeight: 'bold',\n  },\n});\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n      <HashRouter>\n        <div className={classes.home}>\n          <div className={classes.headerBlock}>\n            <div>\n              <h2>HOMEPAGE</h2>\n            </div>\n            <div className={classes.headerBalance}>\n              <h2 className={classes.balanceTitle}>Balance</h2>\n              <h1 className={classes.balanceAmount}>$2,652.07</h1>\n            </div>\n          </div>\n          <div className={classes.sectionToggle}>\n            <Button color=\"primary\">\n              <NavLink\n                  to=\"/homepage/charges\"\n                  className={classes.toggleButton}\n                  activeClassName={classes.toggleButtonActive}>\n                Charges\n              </NavLink>\n            </Button>\n            <Button color=\"primary\">\n              <NavLink\n                  to=\"/homepage/incomes\"\n                  className={classes.toggleButton}\n                  activeClassName={classes.toggleButtonActive}>\n                Incomes\n              </NavLink>\n            </Button>\n          </div>\n        <div>\n          <Route path=\"/homepage/charges\" render={() => <Charges props={props.charges} />} />\n          <Route path=\"/homepage/incomes\" render={() => <Incomes props={props.incomes} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\nimport {Line} from 'react-chartjs-2';\n\nimport './Charts.css';\n\n// in props you have four arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n\nconst divStyle = {\n    width: '99%',\n    height: '400px'\n};\n\nconst startData = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0,0,0,400);\n    gradient.addColorStop(0, 'rgb(205,221,249)');\n    gradient.addColorStop(1, 'rgb(255,255,255)');\n\n    return {\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        datasets: [\n            {\n                lineTension: 0.5,\n                backgroundColor: gradient,\n                borderColor: 'rgb(93,143,238)',\n                borderWidth: 4,\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 11, 13, 9, 11, 12, 9]\n            },\n            {\n                lineTension: 0.5,\n                backgroundColor: 'rgb(222,232,251)',\n                borderColor: 'rgb(222,232,251)',\n                borderWidth: 4,\n                borderDash: [15, 5],\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 14, 11, 9, 13, 12, 10],\n                fill: false\n            }\n        ]\n    }\n}\n\nclass Charts extends React.Component {\n    render() {\n        return (\n            <div className=\"line-chart\" style={divStyle}>\n                <Line\n                    data={startData}\n                    options = {{\n                        title: {\n                            display: true,\n                            text: 'Summary',\n                            fontSize: 20\n                        },\n                        legend: {\n                            display: false\n                        },\n                        scales: {\n                            yAxes: [{\n                                display: false,\n                                ticks: {\n                                    suggestedMin: 5,\n                                    suggestedMax: 15\n                                },\n                                gridLines: {\n                                    display: false,\n                                }\n                            }],\n                            xAxes: [{\n                                gridLines: {\n                                    display: false\n                                }\n                            }]\n                        },\n                        maintainAspectRatio: false\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\n// const Charts = (props) => {\n//   return (\n//     <>\n//         <div>CHARTS</div>\n//         <div className=\"summary-line\">\n//\n//         </div>\n//     </>\n//   );\n// };\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  pickersBlock: {},\n  iconPicker: {\n    color: \"grey\",\n  },\n});\n\nconst AddCategory = ({ open, handleClose, createCategory, icons }) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState(values.currentDate);\n  const [icon, setIcon] = useState(\"\");\n\n  const resetInputs = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setIcon(\"\");\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      if (name && icon) {\n        createCategory({\n          name: name,\n          description: description,\n          date: Date(date),\n          icon: icons[icon],\n        });\n        handleClose();\n        resetInputs();\n      }\n    } else {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (typeof event.target.value === \"number\") {\n      setIcon(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name (required)\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon (required)\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from \"react\";\n\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  TableCell,\n  TableRow,\n} from \"@material-ui/core/\";\n\nconst useStyles = makeStyles({\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});\n\nconst Category = ({ name, description, date, icon }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest(\"table\"));\n  };\n\n  const handleClose = (e) => {\n    console.log(e.currentTarget);\n    if (e.target.innerText === \"Delete\") {\n      console.log(e.target.parentNode.parentNode.parentNode);\n      // console.log(ReactDOM.findDOMNode(this))\n    }\n    setAnchorEl(null);\n  };\n\n  const propsDate = new Date(date);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10\n        ? `0${propsDate.getMonth() + 1}`\n        : propsDate.getMonth() + 1,\n    day:\n      propsDate.getDay() + 1 < 10\n        ? `0${propsDate.getDay() + 1}`\n        : propsDate.getDay() + 1,\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}>Edit</MenuItem>\n          <MenuItem onClick={handleClose}>Delete</MenuItem>\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n});\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        createCategory={props.createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  key={el.name}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        createCategory={props.createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  //icon={Object.values(props.icons)[el.icon]}\n                  key={el.name}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from \"react\";\nimport { NavLink, Route, HashRouter, Redirect } from \"react-router-dom\";\n\nimport Charges from \"./Charges\";\nimport Incomes from \"./Incomes\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//\n// У такому форматi redux очiкуе отримувати категорii. Дата може буди як датою, так i стрiнгою:\n// { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: props.icons[0] },\n//\n//\n// for charge CRUD use the following:\n//\n// props.createChargeCategory({newCategory})\n// props.updateChargeCategory(index, {updatedCategory});\n// props.deleteChargeCategory(index);\n//\n//\n//\n// for income CRUD use the following:\n//\n// props.createIncomeCategory({newCategory})\n// props.updateIncomeCategory(index, {updatedCategory})\n// props.deleteIncomeCategory(index)\n\nconst useStyles = makeStyles({\n  Categories: {\n    padding: \"20px\",\n  },\n  sectionToggle: {\n    // float: 'left',\n    display: \"flex\",\n    marginBottom: \"20px\",\n  },\n  toggleButton: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n  },\n  toggleButtonActive: {\n    borderBottom: \"1px solid cornflowerblue\",\n  },\n  headerBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"100px\",\n  },\n  balanceTitle: {\n    textAlign: \"right\",\n    fontSize: \"1.2em\",\n    marginBottom: \"10px\",\n  },\n  balanceAmount: {\n    fontSize: \"1.7em\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div>\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}\n            >\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}\n            >\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route\n            path=\"/categories/charges\"\n            render={() => <Charges props={props} />}\n          />\n          <Route\n            path=\"/categories/incomes\"\n            render={() => <Incomes props={props} />}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport {\n  createIncomeCategoryAC,\n  updateIncomeCategoryAC,\n  deleteIncomeCategoryAC,\n} from '../../redux/incomeCategoriesReducer';\nimport {\n  createChargeCategoryAC,\n  updateChargeCategoryAC,\n  deleteChargeCategoryAC,\n} from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncomeCategory: (category) => {\n      dispatch(createIncomeCategoryAC(category));\n    },\n    updateIncomeCategory: (index, category) => {\n      dispatch(updateIncomeCategoryAC(index, category));\n    },\n    deleteIncomeCategory: (index) => {\n      dispatch(deleteIncomeCategoryAC(index));\n    },\n    createChargeCategory: (category) => {\n      dispatch(createChargeCategoryAC(category));\n    },\n    updateChargeCategory: (index, category) => {\n      dispatch(updateChargeCategoryAC(index, category));\n    },\n    deleteChargeCategory: (index) => {\n      dispatch(deleteChargeCategoryAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\n\nconst Settings = (props) => {\n  return (\n    <div>\n      <div>{props.userName}</div>\n      <div>{props.phoneNumber}</div>\n      <div>{props.limit}</div>\n      <div>{props.showWarning ? 'warn' : 'not to warn'}</div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\nimport { updateUserNameAC } from '../../redux/settingsReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserName: (newUserName) => {\n      dispatch(updateUserNameAC(newUserName));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\n// delete this component\nimport Temp from './components/TemporaryComponent/TempContainer';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"mainContent\">\n              <Route path=\"/homepage\" render={() => <HomePage />} />\n              <Route path=\"/charts\" render={() => <Charts />} />\n              <Route path=\"/categories\" render={() => <Categories />} />\n              <Route path=\"/settings\" render={() => <Settings />} />\n              {/* <Route path=\"/temp\" render={() => <Temp />} /> */}\n            </div>\n          </div>\n        </Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import { Temp } from './Temp';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Temp);\n","import React from 'react';\n\nexport const Temp = (props) => {\n  return (\n    <div>\n      {Object.values(props.icons)}\n      {props.icons[0]}\n      <div>123</div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}