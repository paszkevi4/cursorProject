{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/appReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","redux/firebase/chargesFB.js","components/HomePage/Charges.js","redux/firebase/incomeFB.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","sortingBy","wasSorted","console","log","sort","a","b","toUpperCase","seconds","fetchIncomesAC","incomes","incomesReducer","income","initialized","appReducer","reducers","combineReducers","app","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","window","getState","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","minWidth","iconSelect","color","nameSelect","iconPicker","chargeConfirm","zIndex","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","connect","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","totalIncome","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","addEditItem","gap","gapPercent","length","confirm","temp","handleClickAlert","handleCloseDialog","e","target","innerText","handleChange","event","id","value","keyCode","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","pickerBlock","TextField","datePicker","label","fullWidth","onChange","error","autoFocus","select","selected","map","el","i","MenuItem","key","docId","onKeyUp","moneyInput","input","DialogActions","Button","onClick","Snackbar","autoHideDuration","severity","HomeTable","icon","Block","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","collection","add","catch","Charges","React","filtered","setFiltered","filteredBy","setFilteredBy","useEffect","handlePeriodChange","milliseconds","time","setTime","getTime","filter","arr","wasSortedByCategory","setWasSortedByCategory","wasSortedByDate","setWasSortedByDate","wasSortedByDescription","setWasSortedByDescription","wasSortedByMoney","setWasSortedByMoney","sortChargesFunc","sortCharges","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","find","innerEl","doc","delete","ctegory","set","createIncome","sortIncomesFunc","sortIncomes","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","updateIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","sortChargesAC","sortIncomesAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","showIncomes","showCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","trueMoneyCharges","moneyIn","moneyOut","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","toLocaleDateString","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","tempIn","tempOut","elIn","elOut","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataLine","labels","datasets","lineTension","backgroundColor","borderColor","hoverBorderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","summary","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","startDataBar","hoverBackgroundColor","barPercentage","startDataDoughnut","startForecast","round","options","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","addEditCategoryHandler","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","setCurrentCategory","createChargeCategory","createIncomeCategory","Incomes","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","initializeAppThunk","onSnapshot","ss","docs","chargeCats","incomeCats","Promise","all","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3763e076.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\n// type updateUserNameACType = {\n//   type: typeof UPDATE_USER_NAME;\n//   newUserName: string;\n// };\n\n// type updatePhoneNumberACType = {\n//   type: typeof UPDATE_PHONE_NUMBER;\n//   newPhoneNumber: any;\n// };\n\n// type toggleWarningACType = {\n//   type: typeof TOGGLE_WARNING;\n//   showWarning: boolean;\n// };\n\n// type setLimitACType = {\n//   type: typeof SET_MONEY_LIMIT;\n//   newLimit: number;\n// };\n\n// type actionType =\n//   | updateUserACType\n//   | updateUserNameACType\n//   | updatePhoneNumberACType\n//   | toggleWarningACType\n//   | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<chargeCategoryType>;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\nexport const setChargeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charge-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<incomeCategoryType>;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (\n  categories: Array<incomeCategoryType>,\n): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\n// export const createIncomeCategoryAC = (\n//   category: incomeCategoryType,\n// ): createIncomeCategoryACType => ({\n//   type: CREATE_CATEGORY,\n//   category,\n// });\n\n// export const updateIncomeCategoryAC = (\n//   index: number,\n//   category: incomeCategoryType,\n// ): updateIncomeCategoryACType => ({\n//   type: UPDATE_CATEGORY,\n//   category,\n//   index,\n// });\n\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n//   type: DELETE_CATEGORY,\n//   index,\n// });\n\nexport const setIncomeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('income-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomeCategoriesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_CHARGES = 'FETCH_CHARGES';\nconst CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\nconst SORT_CHARGES = 'SORT_CHARGES';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchChargeACType = {\n  type: typeof FETCH_CHARGES;\n  charges: Array<chargeType>;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype sortChargesACType = {\n  type: typeof SORT_CHARGES;\n  sortingBy: string;\n  wasSorted: boolean;\n};\n\n\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType | sortChargesACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case FETCH_CHARGES:\n      return [...action.charges];\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    case SORT_CHARGES:\n      if(action.sortingBy === 'Category'){\n        if(action.wasSorted){\n          console.log('alphabetic');\n        }\n        else{\n          console.log('non alphabetic');\n        }\n      }\n      else if(action.sortingBy === 'Description'){\n        if(action.wasSorted){\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() < b.description?.toUpperCase())? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() > b.description?.toUpperCase())? -1 : 1)]\n        }  \n      }\n      else if(action.sortingBy === 'Date'){\n        if(action.wasSorted){\n        return [...state.sort((a: any,b: any) => (a.date.seconds < b.date.seconds)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.date.seconds > b.date.seconds)? -1 : 1)]\n        }       \n      }\n      else if(action.sortingBy === 'Money'){\n        if(action.wasSorted){\n            return [...state.sort((a: any,b: any) => (a.money < b.money)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.money > b.money)? -1 : 1)]\n        }       \n      }\n    default:\n      return state;\n  }\n};\n\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\n  type: FETCH_CHARGES,\n  charges,\n});\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport const sortChargesAC = (sortingBy: string, wasSorted: boolean): sortChargesACType => ({\n  type: SORT_CHARGES,\n  sortingBy,\n  wasSorted\n});\n\n// THUNK\n\nexport const setChargesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charges1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargesAC(\n          ss.docs.map((el: any) => {\n            const charge = el.data();\n            return { ...charge, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_INCOMES = 'FETCH_INCOMES';\nconst CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELETE_INCOME';\nconst SORT_INCOMES = 'SORT_INCOMES';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchIncomesACType = {\n  type: typeof FETCH_INCOMES;\n  incomes: Array<incomeType>;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype sortIncomesACType = {\n  type: typeof SORT_INCOMES;\n  sortingBy: string;\n  wasSorted: boolean;\n};\n\ntype actionType =\n  | fetchIncomesACType\n  | createIncomeACType\n  | updateIncomeACType\n  | deleteIncomeACType\n  | sortIncomesACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 7, 23),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  // { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 8, 18),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case FETCH_INCOMES:\n      return [...action.incomes];\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    case SORT_INCOMES:\n      if (action.sortingBy === 'Category') {\n        if (action.wasSorted) {\n          console.log('alphabetic');\n        } else {\n          console.log('non alphabetic');\n        }\n      } else if (action.sortingBy === 'Description') {\n        if (action.wasSorted) {\n          return [\n            ...state.sort((a: any, b: any) =>\n              a.description?.toUpperCase() < b.description?.toUpperCase() ? -1 : 1,\n            ),\n          ];\n        } else {\n          return [\n            ...state.sort((a: any, b: any) =>\n              a.description?.toUpperCase() > b.description?.toUpperCase() ? -1 : 1,\n            ),\n          ];\n        }\n      } else if (action.sortingBy === 'Date') {\n        if (action.wasSorted) {\n          return [...state.sort((a: any, b: any) => (a.date.seconds < b.date.seconds ? -1 : 1))];\n        } else {\n          return [...state.sort((a: any, b: any) => (a.date.seconds > b.date.seconds ? -1 : 1))];\n        }\n      } else if (action.sortingBy === 'Money') {\n        if (action.wasSorted) {\n          return [...state.sort((a: any, b: any) => (a.money < b.money ? -1 : 1))];\n        } else {\n          return [...state.sort((a: any, b: any) => (a.money > b.money ? -1 : 1))];\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\n  type: FETCH_INCOMES,\n  incomes,\n});\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport const sortIncomesAC = (sortingBy: string, wasSorted: boolean): sortIncomesACType => ({\n  type: SORT_INCOMES,\n  sortingBy,\n  wasSorted,\n});\n\nexport const fetchIncomesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('incomes1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomesAC(\n          ss.docs.map((el: any) => {\n            const income = el.data();\n            return { ...income, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomesReducer;\n","import { setSettingsThunk } from './settingsReducer';\nimport { setChargeCategoriesThunk } from './chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from './incomeCategoriesReducer';\nimport { setChargesThunk } from './chargesReducer';\nimport { fetchIncomesThunk } from './incomesReducer';\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\ntype setInitializedACType = {\n  type: typeof SET_INITIALIZED;\n};\n\nlet initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action: setInitializedACType) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setInitializedAC = (): setInitializedACType => {\n  return { type: SET_INITIALIZED };\n};\n\nexport const initializeAppThunk = () => (dispatch: any) => {\n  const settings = dispatch(setSettingsThunk());\n  const charges = dispatch(setChargesThunk());\n  const incomes = dispatch(fetchIncomesThunk());\n  const chargeCats = dispatch(setChargeCategoriesThunk());\n  const incomeCats = dispatch(setIncomeCategoriesThunk());\n  Promise.all([settings, charges, incomes, chargeCats, incomeCats]).then(() => {\n    dispatch(setInitializedAC());\n  });\n};\n\nexport default appReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport appReducer from './appReducer';\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  app: appReducer,\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store.getState();\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List, makeStyles } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className='logo'>\n        <img src={logo} alt=\"logo\"/>\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName='active'>\n          <div className='link-container'>\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName='active'>\n          <div className='link-container'>\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName='active'>\n          <div className='link-container'>\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName='active'>\n          <div className='link-container'>\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const ModalStyles = {\n  window: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  iconPicker: {\n    color: \"grey\",\n  },\n  chargeConfirm:{\n    zIndex: '999999999'\n  }\n};\n\nexport const TabsAreaStyles = {\n  sectionToggle: {\n    display: \"flex\",\n    marginBottom: \"20px\",\n  },\n  toggleButton: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n  },\n  toggleButtonActive: {\n    borderBottom: \"1px solid cornflowerblue\",\n  },\n};\n\nexport const CategoryStyles = {\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n};\n\nexport const TableStyles = {\n  table: {\n    minWidth: 300,\n  },\n  tableWrapper:{\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\n    borderRadius: '25px'\n  },\n  tableHead: {\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n};\n\nexport const ChartsStyles = {\n  root: {\n    marginLeft: \"3%\",\n    width: \"150px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { ModalStyles } from \"../Styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n  total,\n  totalIncome,\n  // handlePeriodChange,\n  ...props\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(currentTable.currentCategory);\n  const [description, setDescription] = useState(\n    currentTable.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n  const [money, setMoney] = useState(currentTable.currentMoney);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney(\"\");\n  };\n\n  const addEditItem = () => {\n    const gap = total - +money;\n    const gapPercent = ((total - +money) / totalIncome) * 100;\n    if (category && money > 0 && money && date.length === 10) {\n      if (\n        props.showWarning &&\n        (gap <= props.moneyLimit || gapPercent < props.percentLimit)\n      ) {\n        const isSure = window.confirm(\"Are you sure?\");\n        if (isSure) {\n          const temp = {\n            category: category,\n            description: description,\n            date: new Date(date),\n            money: +money,\n          };\n          updateCharge(temp);\n          handleClose();\n          resetInputs();\n          handleClickAlert();\n          // handlePeriodChange();\n        }\n        return null;\n      } else {\n        updateCharge({\n          //   name: chargeCategories[category].name,\n          //   icon: chargeCategories[category].icon,\n          category: category,\n          description: description,\n          date: new Date(date),\n          money: +money,\n        });\n        handleClose();\n        resetInputs();\n        handleClickAlert();\n        // handlePeriodChange();\n      }\n    }\n    // handlePeriodChange();\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditItem();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"selectName\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else {\n      setCategory(event.target.value);\n    }\n  };\n\n  const handleClickAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              autoFocus\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name*\"\n              selected={name}\n              value={category}\n              onChange={handleChange}\n              error={category.length < 1 ? true : false}\n              fullWidth\n            >\n              {[\n                chargeCategories.map((el, i) => (\n                  <MenuItem\n                    key={i}\n                    value={el.docId}\n                    className={classes.nameSelect}\n                  >\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money*\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              error={money <= 0 ? true : false}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={4000}\n        onClose={handleCloseAlert}\n      >\n        <Alert onClose={handleCloseAlert} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    showWarning: state.settings.showWarning,\n    moneyLimit: state.settings.moneyLimit,\n    percentLimit: state.settings.percentLimit,\n  };\n};\n\nexport default connect(mapStateToProps, null)(AddCharges);\n","import React, { useState } from 'react';\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCharges from './AddCharges';\nimport { CategoryStyles } from '../Styles';\n\nimport { Block } from '@material-ui/icons';\n\n/*const useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});*/\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst HomeTable = ({\n  icon = <Block />,\n  name = 'deleted category',\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n  category,\n  total,\n  totalIncome,\n  // handlePeriodChange,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n    currentCategory: category,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest('th'));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteMoney();\n      // handlePeriodChange();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentCategory: category,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      // handlePeriodChange();\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={'avatar'} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n              total={total}\n              totalIncome={totalIncome}\n              // handlePeriodChange={handlePeriodChange}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import { db } from './firebase';\n\nexport const createCharge = (category) => {\n  db.collection('charges1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateCharge = (docId, ctegory) => {\n  db.collection('charges1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteCharge = (docId) => {\n  db.collection('charges1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport HomeTable from './HomeTable';\nimport useSortTableData from './sortTable';\nimport AddCharges from './AddCharges';\nimport { createCharge, updateCharge, deleteCharge } from '../../redux/firebase/chargesFB';\n\n//\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n\n//\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [filtered, setFiltered] = React.useState(props.charges);\n  const [filteredBy, setFilteredBy] = React.useState('FULL_PERIOD');\n\n  window.filteredBy = filteredBy;\n\n  useEffect(() => {\n    handlePeriodChange(filteredBy);\n  }, [props.charges, filteredBy]);\n\n  const handlePeriodChange = (filteredBy = 'FULL_PERIOD') => {\n    if (+filteredBy === 7 || +filteredBy === 30) {\n      let milliseconds = +filteredBy * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered(\n        props.charges.filter((arr) => {\n          return arr.date.seconds * 1000 > time;\n        }),\n      );\n    } else if (filteredBy === 'FULL_PERIOD') {\n      return setFiltered([...props.charges]); //items\n    }\n  };\n\n  const [wasSortedByCategory, setWasSortedByCategory] = useState(false);\n  const [wasSortedByDate, setWasSortedByDate] = useState(false);\n  const [wasSortedByDescription, setWasSortedByDescription] = useState(false);\n  const [wasSortedByMoney, setWasSortedByMoney] = useState(false);\n\n  const sortChargesFunc = (e) => {\n    if (e.target.innerText === 'Category') {\n      props.sortCharges('Category', wasSortedByCategory, filtered);\n      setWasSortedByCategory(!wasSortedByCategory);\n    } else if (e.target.innerText === 'Date') {\n      props.sortCharges('Date', wasSortedByDate, filtered);\n      setWasSortedByDate(!wasSortedByDate);\n    } else if (e.target.innerText === 'Description') {\n      props.sortCharges('Description', wasSortedByDescription, filtered);\n      setWasSortedByDescription(!wasSortedByDescription);\n    } else if (e.target.innerText === 'Money') {\n      props.sortCharges('Money', wasSortedByMoney, filtered);\n      setWasSortedByMoney(!wasSortedByMoney);\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => setFilteredBy(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            defaultValue={'FULL_PERIOD'}>\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n        </div>\n\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n        total={props.total}\n        totalIncome={props.totalIncome}\n        // handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('category')}\n                  // className={getClassNamesFor(\"category\")}\n                  onClick={sortChargesFunc}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('description')}\n                  // className={getClassNamesFor(\"description\")}\n                >\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('date')}\n                  // className={getClassNamesFor(\"date\")}\n                >\n                  {' '}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('money')}\n                  // className={getClassNamesFor(\"money\")}\n                >\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              filtered.map((el, i) => (\n                <HomeTable\n                  // icon={props.categories[el.category]?.icon}\n                  //name={props.categories[el.category]?.name}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteCharge(el.docId);\n                  }}\n                  updateCharge={(charge) => {\n                    updateCharge(el.docId, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                  total={props.total}\n                  totalIncome={props.totalIncome}\n                  // handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncome = (category) => {\n  db.collection('incomes1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncome = (docId, ctegory) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncome = (docId) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport HomeTable from './HomeTable';\nimport AddCharges from './AddCharges';\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from './sortTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n\nimport { connect } from 'react-redux';\nimport { fetchIncomesAC } from '../../redux/incomesReducer';\nimport { createIncome, updateIncome, deleteIncome } from '../../redux/firebase/incomeFB';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [wasSortedByCategory, setWasSortedByCategory] = useState(false);\n  const [wasSortedByDate, setWasSortedByDate] = useState(false);\n  const [wasSortedByDescription, setWasSortedByDescription] = useState(false);\n  const [wasSortedByMoney, setWasSortedByMoney] = useState(false);\n\n  const sortIncomesFunc = (e) => {\n    if (e.target.innerText === 'Category') {\n      props.sortIncomes('Category', wasSortedByCategory);\n      setWasSortedByCategory(!wasSortedByCategory);\n    } else if (e.target.innerText === 'Date') {\n      props.sortIncomes('Date', wasSortedByDate);\n      setWasSortedByDate(!wasSortedByDate);\n    } else if (e.target.innerText === 'Description') {\n      props.sortIncomes('Description', wasSortedByDescription);\n      setWasSortedByDescription(!wasSortedByDescription);\n    } else if (e.target.innerText === 'Money') {\n      props.sortIncomes('Money', wasSortedByMoney);\n      setWasSortedByMoney(!wasSortedByMoney);\n    }\n  };\n\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\n  const [filteredBy, setFilteredBy] = React.useState('FULL_PERIOD');\n\n  useEffect(() => {\n    handlePeriodChange(filteredBy);\n  }, [props.incomes, filteredBy]);\n\n  const handlePeriodChange = (filteredBy = 'FULL_PERIOD') => {\n    if (+filteredBy === 7 || +filteredBy === 30) {\n      let milliseconds = +filteredBy * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n\n      setFiltered(\n        props.incomes.filter((arr) => {\n          return arr.date.seconds * 1000 > time;\n        }),\n      );\n    } else if (filteredBy === 'FULL_PERIOD') {\n      return setFiltered(props.incomes); //items\n    }\n  };\n\n  // const [filtered, setFiltered] = React.useState(props.incomes); //items\n  // const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n  //   if (+selectVal === 7 || +selectVal === 30) {\n  //     let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n  //     let currentDate = new Date();\n  //     let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n  //     return setFiltered([\n  //       ...props.incomes.filter((arr) => {\n  //         // filtered:  ...items\n  //         console.log(arr.date.getTime() > time);\n  //         return arr.date.getTime() > time;\n  //       }),\n  //     ]);\n  //   } else if (selectVal === 'FULL_PERIOD') {\n  //     return setFiltered([...props.incomes]); //items\n  //   }\n  // };\n\n  // const { items, requestSort, sortConfig } = useSortTableData(\n  //   filtered, //props.incomes,\n  //   props.categories,\n  // );\n  // const getClassNamesFor = (name) => {\n  //   if (!sortConfig) {\n  //     return;\n  //   }\n  //   return sortConfig.key === name ? sortConfig.direction : undefined;\n  // };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => setFilteredBy(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n        // handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('category')}\n                  // className={getClassNamesFor('category')}\n                  onClick={sortIncomesFunc}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('description')}\n                  // className={getClassNamesFor('description')}\n                  onClick={sortIncomesFunc}>\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('date')}\n                  // className={getClassNamesFor('date')}\n                  onClick={sortIncomesFunc}>\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('money')}\n                  // className={getClassNamesFor('money')}\n                  onClick={sortIncomesFunc}>\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>Avatar</TableCell>\n              <TableCell className={'table-direct'}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              filtered.map((el, i) => (\n                <HomeTable\n                  // name={props.categories[el.category]?.name}\n                  // icon={props.categories[el.category]?.icon}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteIncome(el.docId);\n                  }}\n                  updateCharge={(income) => {\n                    updateIncome(el.docId, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                  // handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default connect(null, { fetchIncomesAC })(Incomes);\n","export const totalCounter = (incomes, charges) => {\n  return totalIncomes(incomes) - totalCharges(charges);\n};\n\nexport const totalIncomes = (incomes) => {\n  return incomes.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n\nconst totalCharges = (charges) => {\n  return charges.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n","import React, { useState, useEffect } from 'react';\nimport { totalCounter, totalIncomes } from '../Functions';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(totalIncomes(props.incomes));\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setTotal(totalCounter(props.incomes, props.charges));\n  }, [props]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\n\n//\n// Styles\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// Components\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n//\n//\nimport { totalCounter } from '../Common/Functions';\nimport { totalIncomes } from '../Common/Functions';\nimport { TabsAreaStyles } from '../Styles';\n//\n// totalCounter(props.incomes, props.charges)\n//\n//\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                sortCharges={props.sortCharges}\n                avatar={props.avatar}\n                total={totalCounter(props.incomes, props.charges)}\n                totalIncome={totalIncomes(props.incomes)}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n                sortIncomes={props.sortIncomes}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC, sortChargesAC} from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC, sortIncomesAC} from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n    sortCharges: (sortingBy, wasSorted) => {\n      dispatch(sortChargesAC(sortingBy, wasSorted));\n    },\n    sortIncomes: (sortingBy, wasSorted) => {\n      dispatch(sortIncomesAC(sortingBy, wasSorted));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\nimport { ChartsStyles } from '../Styles';\n\nconst useStyles = makeStyles(ChartsStyles);\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => setActivePeriod(8);\n  const getMonth = () => setActivePeriod(31);\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const trueMoneyCharges = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const allMoney = [];\n\n  let lastWeekIn = 0;\n  let penultimateWeekIn = 0;\n  let lastWeekOut = 0;\n  let penultimateWeekOut = 0;\n  \n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataIncomes.push(el);\n      trueMoneyIncomes.push(el.money);\n      allMoney.push(+el.money);\n      if (fullIncomes.find((innerEl) => innerEl.docId === el.category)) {\n        fullIncomes.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekIn += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekIn += el.money;\n    }\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataCharges.push(el);\n      trueMoneyCharges.push(el.money);\n      allMoney.push(+el.money);\n\n      if (fullCharges.find((innerEl) => innerEl.docId === el.category)) {\n        fullCharges.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekOut += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekOut += el.money;\n    }\n  });\n\n  allDates.forEach((d) => {\n    let tempIn = 0;\n    let tempOut = 0;\n    let elIn = trueDataIncomes.filter((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    let elOut = trueDataCharges.filter((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    \n    if (elIn) {\n      elIn.map(el => {\n        tempIn += el.money\n      })\n      moneyIn.push(tempIn);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      elOut.map(el => {\n        tempOut += el.money \n      })\n      moneyOut.push(tempOut);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum > 0) {\n      categoriesBar.push(el.name);\n      trueMoneyIncomesBar.push(el.sum);\n    }\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum > 0) {\n      categoriesDoughnut.push(el.name);\n      trueMoneyChargesDoughnut.push(el.sum);\n    }\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  const futureWeekIn = lastWeekIn > penultimateWeekIn ? lastWeekIn - penultimateWeekIn + lastWeekIn : 0;\n  const futureWeekOut = lastWeekOut > penultimateWeekOut ? lastWeekOut - penultimateWeekOut + lastWeekOut : 0;\n\n  const startDataLine = {\n    labels: activePeriod === 8 ? allDays : allDates,\n    datasets: [\n      {\n        label: 'Incomes',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(0,0,0,0)',\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: isShowIncomes ? moneyIn : null,\n      },\n      {\n        label: 'Charges',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        borderDash: [15, 5],\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: isShowCharges ? moneyOut : null,\n        fill: false,\n      },\n    ],\n  };\n\n  const summary = {\n    title: {\n      display: true,\n      text: 'Summary',\n      position: 'top',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          display: false,\n          ticks: {\n            suggestedMin: minSum,\n            suggestedMax: maxSum,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const incomes_cat = {\n    title: {\n      display: true,\n      text: 'Income categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 500,\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const charges_cat = {\n    title: {\n      display: true,\n      text: 'Charges categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: true,\n      position: 'right',\n      labels: {\n        fontColor: 'white',\n      },\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const forecast_money = {\n    title: {\n      display: true,\n      text: 'Forecast for incomes and charges',\n      fontSize: 20,\n    },\n    legend: {\n      display: true,\n      position: 'right',\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startForecast = {\n    labels: ['Penultimate week', 'Last week', 'Future week'],\n    datasets: [\n      {\n        label: 'Incomes',\n        fill: false,\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)],\n      },\n      {\n        label: 'Charges',\n        fill: false,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)],\n      },\n    ],\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"charts\">\n        <div className=\"line-chart__container\">\n          <div className=\"line-chart\">\n            <Line data={startDataLine} options={summary} />\n          </div>\n          <div className=\"chart-buttons\">\n            <div className=\"chart-buttons__btn\">\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 31 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getMonth}\n              >\n                Month\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 8 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getWeek}\n              >\n                Week\n              </Button>\n            </div>\n            <div className=\"chart-buttons__checkbox\">\n              <span>\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                  Incomes\n                </label>\n              </span>\n              <span>\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                  Charges\n                </label>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons_separated\">\n          <div className=\"buttons_btn__separated\">\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 31 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getMonth}\n            >\n              Month\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 8 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getWeek}\n            >\n              Week\n            </Button>\n          </div>\n          <div className=\"buttons_checkbox__separated\">\n            <span>\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                Incomes\n              </label>\n            </span>\n            <span>\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                Charges\n              </label>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"bar-chart\">\n          <Bar data={startDataBar} options={incomes_cat} />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut data={startDataDoughnut} options={charges_cat} />\n        </div>\n        <div className=\"forecast__container\">\n          <div className=\"forecast-chart\">\n            <Line data={startForecast} options={forecast_money} />\n          </div>\n          <div className=\"forecast_descr\">\n            <h3>Your budget has changed in the last week</h3>\n            <p>\n              If this continues, your incomes will{' '}\n              <span>\n                {lastWeekIn < penultimateWeekIn ? 'decrease' : 'increase'}\n              </span>{' '}\n              and charges will{' '}\n              <span>\n                {lastWeekOut < penultimateWeekOut ? 'decrease' : 'increase'}\n              </span>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useEffect, useState } from \"react\";\n\nimport { ModalStyles } from \"../Styles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  currentCategory = {\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentIcon: \"\",\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(\n    currentCategory.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentCategory.currentDate\n      ? currentCategory.currentDate\n      : values.currentDate\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setIcon(\"\");\n  };\n\n  const addEditCategoryHandler = () => {\n    if (\n      name.length >= 3 &&\n      name &&\n      icon !== \"object\" &&\n      icon &&\n      date.length === 10\n    ) {\n      updateCategory({\n        name: name,\n        description: description,\n        date: new Date(date),\n        icon: icons.indexOf(icon),\n      });\n      handleClose();\n      resetInputs();\n      handleClickSuccess();\n    }\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditCategoryHandler();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === \"object\") {\n      setIcon(event.target.value);\n    }\n  };\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const handleClickSuccess = () => {\n    setOpenSuccess(true);\n  };\n\n  const handleCloseSuccess = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSuccess(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickersBlock}>\n          <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n            <TextField\n              autoFocus\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon*\"\n              value={icon}\n              onChange={handleChange}\n              error={typeof icon === \"string\" ? true : false}\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            \n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name*\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={name}\n              error={name.length < 3 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={4000}\n        onClose={handleCloseSuccess}\n      >\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\nimport { CategoryStyles } from '../Styles';\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import { db } from './firebase';\n\nexport const createChargeCategory = (category) => {\n  db.collection('charge-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateChargeCategory = (docId, ctegory) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteChargeCategory = (docId) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createChargeCategory,\n  updateChargeCategory,\n  deleteChargeCategory,\n} from '../../redux/firebase/chargeCategoriesFB';\nimport { TableStyles } from '../Styles';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteChargeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateChargeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncomeCategory = (category) => {\n  db.collection('income-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncomeCategory = (docId, ctegory) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncomeCategory = (docId) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport {\n  createIncomeCategory,\n  updateIncomeCategory,\n  deleteIncomeCategory,\n} from \"../../redux/firebase/incomeCategoriesFB\";\nimport {TableStyles} from '../Styles'\n\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteIncomeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateIncomeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {TabsAreaStyles } from '../Styles';\n\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport Categories from './Categories';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport {\n  handleFireBaseUploadInfo,\n  handleFireBaseUploadAvatar,\n} from '../../redux/firebase/profileFB';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  const uploadNewData = () => {\n    if (avatarNew) {\n      handleFireBaseUploadAvatar(\n        setAvatarNew,\n        avatarNew,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    } else {\n      handleFireBaseUploadInfo(\n        avatar,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    }\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <div className={style.main_inner}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Name\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n          <PhoneInput\n            inputStyle={{ width: '100%' }}\n            id=\"phone\"\n            value={phone}\n            country=\"ua\"\n            onChange={(e) => setPhone(e)}\n          />\n        </div>\n        <div className={style.main_inner}>\n          <div>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showWarning}\n                  onChange={() => {\n                    setWarning(!showWarning);\n                  }}\n                />\n              }\n              label=\"Warn me when remains:\"\n            />\n          </div>\n          <Limits\n            title=\"amount\"\n            limit={currentMoneyLimit}\n            setLimit={setCurrentMoneyLimit}\n            step={100}\n            disabled={!showWarning}\n          />\n          <Limits\n            title=\"percent\"\n            limit={currentPercentLimit}\n            setLimit={setCurrentPercentLimit}\n            step={5}\n            disabled={!showWarning}\n          />\n        </div>\n        <div className={style.settings_button}>\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n            SAVE\n          </Button>\n        </div>\n\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n//\n// Redux\nimport { initializeAppThunk } from '../src/redux/appReducer';\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\nimport { setChargesThunk } from '../src/redux/chargesReducer';\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\n\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initializeAppThunk();\n    // props.setSettingsThunk();\n    // props.setChargeCategoriesThunk();\n    // props.setIncomeCategoriesThunk();\n    // props.setChargesThunk();\n    // props.fetchIncomesThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      {props.initialized && (\n        <main>\n          <Route exact path=\"/\">\n            <Redirect to=\"/homepage\" />\n          </Route>\n          <Route path=\"/homepage\" render={() => <HomePage />} />\n          <Route path=\"/charts\" render={() => <Charts />} />\n          <Route path=\"/categories\" render={() => <Categories />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n        </main>\n      )}\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nconst AppContainer = connect(mapStateToProps, { initializeAppThunk })(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"avatar\":\"Settings_avatar__Y8NHF\",\"main_inner\":\"Settings_main_inner__3Vnrn\",\"settings_button\":\"Settings_settings_button__2RL5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}