{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/appReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","redux/firebase/chargesFB.js","components/HomePage/Charges.js","redux/firebase/incomeFB.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","incomesReducer","incomes","income","initialized","appReducer","reducers","combineReducers","app","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","window","minWidth","iconSelect","color","nameSelect","iconPicker","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","connect","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","totalIncome","handlePeriodChange","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","handleCloseDialog","e","target","innerText","gap","gapPercent","confirm","temp","handleClickAlert","handleChange","event","id","value","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","label","selected","onChange","fullWidth","map","el","i","MenuItem","key","docId","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","Snackbar","autoHideDuration","severity","HomeTable","icon","Block","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","seconds","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","collection","add","catch","error","Charges","filtered","setFiltered","selectVal","milliseconds","time","setTime","getTime","filter","arr","getClassNamesFor","undefined","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","find","innerEl","doc","delete","ctegory","set","createIncome","Incomes","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","useEffect","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","updateIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","showIncomes","showCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","toLocaleDateString","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","elOut","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataLine","labels","datasets","lineTension","backgroundColor","borderColor","hoverBorderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","summary","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","startDataBar","hoverBackgroundColor","barPercentage","startDataDoughnut","startForecast","round","options","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","setCurrentCategory","createChargeCategory","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","initializeAppThunk","onSnapshot","ss","docs","chargeCats","incomeCats","Promise","all","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.42493587.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\r\n  authDomain: 'money-tr4cker.firebaseapp.com',\r\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\r\n  projectId: 'money-tr4cker',\r\n  storageBucket: 'money-tr4cker.appspot.com',\r\n  messagingSenderId: '166713825950',\r\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\r\n  measurementId: 'G-CN13J7CNRP',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import { db } from './firebase/firebase';\r\n\r\nconst UPDATE_USER = 'UPDATE_USER';\r\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\r\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\r\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\r\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\r\n\r\ntype stateType = {\r\n  avatar: any;\r\n  userName: string | null;\r\n  phoneNumber: any;\r\n  showWarning: boolean;\r\n  moneyLimit: number;\r\n  percentLimit?: number;\r\n};\r\n\r\ntype updateUserACType = {\r\n  type: typeof UPDATE_USER;\r\n  newUser: stateType;\r\n};\r\n\r\n// type updateUserNameACType = {\r\n//   type: typeof UPDATE_USER_NAME;\r\n//   newUserName: string;\r\n// };\r\n\r\n// type updatePhoneNumberACType = {\r\n//   type: typeof UPDATE_PHONE_NUMBER;\r\n//   newPhoneNumber: any;\r\n// };\r\n\r\n// type toggleWarningACType = {\r\n//   type: typeof TOGGLE_WARNING;\r\n//   showWarning: boolean;\r\n// };\r\n\r\n// type setLimitACType = {\r\n//   type: typeof SET_MONEY_LIMIT;\r\n//   newLimit: number;\r\n// };\r\n\r\n// type actionType =\r\n//   | updateUserACType\r\n//   | updateUserNameACType\r\n//   | updatePhoneNumberACType\r\n//   | toggleWarningACType\r\n//   | setLimitACType;\r\n\r\nconst initialState: stateType = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\r\n  userName: 'Ivan',\r\n  phoneNumber: '+380991234567',\r\n  showWarning: true,\r\n  moneyLimit: 800,\r\n  percentLimit: 40,\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return { ...action.newUser };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\r\n  type: UPDATE_USER,\r\n  newUser,\r\n});\r\n\r\nexport const setSettingsThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('user-info').onSnapshot((ss: any) => {\r\n      dispatch(updateUserAC(ss.docs[0].data()));\r\n    });\r\n  };\r\n};\r\n\r\nexport default settingsReducer;\r\n","import React from 'react';\r\nimport {\r\n  AccountBalance,\r\n  AccountBalanceWallet,\r\n  AllInbox,\r\n  ChildFriendly,\r\n  Cake,\r\n  DirectionsBike,\r\n  DriveEta,\r\n  EmojiSymbols,\r\n  Fastfood,\r\n  Favorite,\r\n  FitnessCenter,\r\n  Kitchen,\r\n  LocalDining,\r\n  MenuBook,\r\n  Pets,\r\n  PlayForWork,\r\n  School,\r\n  ShoppingCart,\r\n  Waves,\r\n  WorkOutline,\r\n} from '@material-ui/icons';\r\n\r\nexport const icons = [\r\n  <AccountBalance />,\r\n  <AccountBalanceWallet />,\r\n  <AllInbox />,\r\n  <ChildFriendly />,\r\n  <Cake />,\r\n  <DirectionsBike />,\r\n  <DriveEta />,\r\n  <EmojiSymbols />,\r\n  <Fastfood />,\r\n  <Favorite />,\r\n  <FitnessCenter />,\r\n  <Kitchen />,\r\n  <LocalDining />,\r\n  <MenuBook />,\r\n  <Pets />,\r\n  <PlayForWork />,\r\n  <School />,\r\n  <ShoppingCart />,\r\n  <Waves />,\r\n  <WorkOutline />,\r\n];\r\n\r\nexport default (state = icons, _) => state;\r\n","import { db } from './firebase/firebase';\r\nimport { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\r\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\r\n\r\ntype chargeCategoryType = {\r\n  docId: string;\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  categories: Array<chargeCategoryType>;\r\n};\r\n\r\ntype createChargeCategoryACType = {\r\n  type: typeof SET_CATEGORY;\r\n  category: chargeCategoryType;\r\n};\r\n\r\ntype updateChargeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: chargeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createChargeCategoryACType\r\n  | updateChargeCategoryACType\r\n  | deleteChargeCategoryACType;\r\n\r\nlet initialState: Array<chargeCategoryType> = [];\r\n\r\nconst chargeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<chargeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      return [...action.categories];\r\n    case SET_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  categories,\r\n});\r\n\r\nexport const setChargeCategoriesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('charge-categories').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchChargeCategoriesAC(\r\n          ss.docs.map((el: any) => {\r\n            const category = el.data();\r\n            return { ...category, icon: icons[category.icon], docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default chargeCategoriesReducer;\r\n","import { db } from './firebase/firebase';\r\nimport { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\r\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\r\n\r\ntype incomeCategoryType = {\r\n  docId: string;\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  categories: Array<incomeCategoryType>;\r\n};\r\n\r\ntype createIncomeCategoryACType = {\r\n  type: typeof CREATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n};\r\n\r\ntype updateIncomeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createIncomeCategoryACType\r\n  | updateIncomeCategoryACType\r\n  | deleteIncomeCategoryACType;\r\n\r\nlet initialState: Array<incomeCategoryType> = [];\r\n\r\nconst incomeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<incomeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      return [...action.categories];\r\n    case CREATE_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchIncomeCategoriesAC = (\r\n  categories: Array<incomeCategoryType>,\r\n): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  categories,\r\n});\r\n\r\n// export const createIncomeCategoryAC = (\r\n//   category: incomeCategoryType,\r\n// ): createIncomeCategoryACType => ({\r\n//   type: CREATE_CATEGORY,\r\n//   category,\r\n// });\r\n\r\n// export const updateIncomeCategoryAC = (\r\n//   index: number,\r\n//   category: incomeCategoryType,\r\n// ): updateIncomeCategoryACType => ({\r\n//   type: UPDATE_CATEGORY,\r\n//   category,\r\n//   index,\r\n// });\r\n\r\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\r\n//   type: DELETE_CATEGORY,\r\n//   index,\r\n// });\r\n\r\nexport const setIncomeCategoriesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('income-categories').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchIncomeCategoriesAC(\r\n          ss.docs.map((el: any) => {\r\n            const category = el.data();\r\n            return { ...category, icon: icons[category.icon], docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default incomeCategoriesReducer;\r\n","import { db } from './firebase/firebase';\r\n\r\nconst FETCH_CHARGES = 'FETCH_CHARGES';\r\nconst CREATE_CHARGE = 'CREATE_CHARGE';\r\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\r\nconst DELETE_CHARGE = 'DELETE_CHARGE';\r\n\r\ntype chargeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype fetchChargeACType = {\r\n  type: typeof FETCH_CHARGES;\r\n  charges: Array<chargeType>;\r\n};\r\n\r\ntype createChargeACType = {\r\n  type: typeof CREATE_CHARGE;\r\n  charge: chargeType;\r\n};\r\n\r\ntype updateChargeACType = {\r\n  type: typeof UPDATE_CHARGE;\r\n  charge: chargeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeACType = {\r\n  type: typeof DELETE_CHARGE;\r\n  index: number;\r\n};\r\n\r\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType;\r\n\r\nlet initialState: Array<chargeType> = [\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 13),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 24),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\r\n];\r\n\r\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\r\n  switch (action.type) {\r\n    case FETCH_CHARGES:\r\n      return [...action.charges];\r\n    case CREATE_CHARGE:\r\n      return [...state, action.charge];\r\n    case UPDATE_CHARGE:\r\n      state.splice(action.index, 1, action.charge);\r\n      return [...state];\r\n    case DELETE_CHARGE:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\r\n  type: FETCH_CHARGES,\r\n  charges,\r\n});\r\n\r\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\r\n  type: CREATE_CHARGE,\r\n  charge,\r\n});\r\n\r\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\r\n  type: UPDATE_CHARGE,\r\n  charge,\r\n  index,\r\n});\r\n\r\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\r\n  type: DELETE_CHARGE,\r\n  index,\r\n});\r\n\r\n// THUNK\r\n\r\nexport const setChargesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('charges1').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchChargesAC(\r\n          ss.docs.map((el: any) => {\r\n            const charge = el.data();\r\n            return { ...charge, docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default chargesReducer;\r\n","import { db } from './firebase/firebase';\r\n\r\nconst FETCH_INCOMES = 'FETCH_INCOMES';\r\nconst CREATE_INCOME = 'SET_INCOME';\r\nconst UPDATE_INCOME = 'UPDATE_INCOME';\r\nconst DELETE_INCOME = 'DELEE_INCOME';\r\n\r\ntype incomeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype fetchIncomesACType = {\r\n  type: typeof FETCH_INCOMES;\r\n  incomes: Array<incomeType>;\r\n};\r\n\r\ntype createIncomeACType = {\r\n  type: typeof CREATE_INCOME;\r\n  income: incomeType;\r\n};\r\n\r\ntype updateIncomeACType = {\r\n  type: typeof UPDATE_INCOME;\r\n  income: incomeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeACType = {\r\n  type: typeof DELETE_INCOME;\r\n  index: number;\r\n};\r\n\r\ntype actionType = fetchIncomesACType | createIncomeACType | updateIncomeACType | deleteIncomeACType;\r\n\r\nlet initialState: Array<incomeType> = [\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 23),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 18),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\r\n];\r\n\r\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\r\n  switch (action.type) {\r\n    case FETCH_INCOMES:\r\n      return [...action.incomes];\r\n    case CREATE_INCOME:\r\n      return [...state, action.income];\r\n    case UPDATE_INCOME:\r\n      state.splice(action.index, 1, action.income);\r\n      return [...state];\r\n    case DELETE_INCOME:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\r\n  type: FETCH_INCOMES,\r\n  incomes,\r\n});\r\n\r\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\r\n  type: CREATE_INCOME,\r\n  income,\r\n});\r\n\r\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\r\n  type: UPDATE_INCOME,\r\n  income,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\r\n  type: DELETE_INCOME,\r\n  index,\r\n});\r\n\r\nexport const fetchIncomesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('incomes1').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchIncomesAC(\r\n          ss.docs.map((el: any) => {\r\n            const income = el.data();\r\n            return { ...income, docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default incomesReducer;\r\n","import { setSettingsThunk } from './settingsReducer';\r\nimport { setChargeCategoriesThunk } from './chargeCategoriesReducer';\r\nimport { setIncomeCategoriesThunk } from './incomeCategoriesReducer';\r\nimport { setChargesThunk } from './chargesReducer';\r\nimport { fetchIncomesThunk } from './incomesReducer';\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\ntype setInitializedACType = {\r\n  type: typeof SET_INITIALIZED;\r\n};\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: setInitializedACType) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setInitializedAC = (): setInitializedACType => {\r\n  return { type: SET_INITIALIZED };\r\n};\r\n\r\nexport const initializeAppThunk = () => (dispatch: any) => {\r\n  const settings = dispatch(setSettingsThunk());\r\n  const charges = dispatch(setChargesThunk());\r\n  const incomes = dispatch(fetchIncomesThunk());\r\n  const chargeCats = dispatch(setChargeCategoriesThunk());\r\n  const incomeCats = dispatch(setIncomeCategoriesThunk());\r\n  Promise.all([settings, charges, incomes, chargeCats, incomeCats]).then(() => {\r\n    dispatch(setInitializedAC());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\r\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\r\nimport chargesReducer from './chargesReducer';\r\nimport incomesReducer from './incomesReducer';\r\n\r\nimport appReducer from './appReducer';\r\nimport iconsReducer from './iconsReducer';\r\nimport settingsReducer from './settingsReducer';\r\n\r\nlet reducers = combineReducers({\r\n  app: appReducer,\r\n  icons: iconsReducer,\r\n  settings: settingsReducer,\r\n  incomes: incomesReducer,\r\n  charges: chargesReducer,\r\n  incomeCategories: incomeCategoriesReducer,\r\n  chargeCategories: chargeCategoriesReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n//\r\n// Styles\r\nimport './Navbar.css';\r\nimport { List, makeStyles } from '@material-ui/core';\r\nimport logo from '../../assets/img/logo_white.png';\r\n\r\n//\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className='logo'>\r\n        <img src={logo} alt=\"logo\"/>\r\n        <h2>Money Tracker</h2>\r\n      </div>\r\n      <List>\r\n        <NavLink to=\"/homepage\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <HomeIcon />\r\n            <p>Home</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/charts\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <ShowChartIcon />\r\n            <p>Charts</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/categories\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <CategoryIcon />\r\n            <p>Categories</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/settings\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <SettingsIcon />\r\n            <p>Settings</p>\r\n          </div>\r\n        </NavLink>\r\n      </List>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const ModalStyles = {\r\n  window: {\r\n    minWidth: \"350px\",\r\n  },\r\n  iconSelect: {\r\n    color: \"grey\",\r\n  },\r\n  nameSelect: {\r\n    color: \"grey\",\r\n  },\r\n  iconPicker: {\r\n    color: \"grey\",\r\n  },\r\n};\r\n\r\nexport const TabsAreaStyles = {\r\n  sectionToggle: {\r\n    display: \"flex\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  toggleButton: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    letterSpacing: \"1px\",\r\n  },\r\n  toggleButtonActive: {\r\n    borderBottom: \"1px solid cornflowerblue\",\r\n  },\r\n};\r\n\r\nexport const CategoryStyles = {\r\n  categoryNameBlock: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  categoryIcon: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    color: \"grey\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n};\r\n\r\nexport const TableStyles = {\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  tableWrapper:{\r\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\r\n    borderRadius: '25px'\r\n  },\r\n  tableHead: {\r\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\r\n  },\r\n  addButtonWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  homeMenu: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px 0\",\r\n    height: \"40px\",\r\n  },\r\n  homeSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  homeMenuTitle: {\r\n    marginRight: \"20px\",\r\n  },\r\n};\r\n\r\nexport const ChartsStyles = {\r\n  root: {\r\n    marginLeft: \"3%\",\r\n    width: \"150px\",\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { ModalStyles } from '../Styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n/*const useStyles = makeStyles({\r\n  dialogWindow: {\r\n    minWidth: \"350px\",\r\n  },\r\n  nameSelect: {\r\n    color: \"grey\",\r\n  },\r\n  namePicker: {\r\n    color: \"grey\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minWidth: \"400px\",\r\n    padding: \"50px\",\r\n  },\r\n});*/\r\n\r\nconst useStyles = makeStyles(ModalStyles);\r\n\r\nconst AddCharges = ({\r\n  open,\r\n  handleClose,\r\n  createCharge,\r\n  currentTable = {\r\n    currentCategory: '',\r\n    currentName: '',\r\n    currentDescription: '',\r\n    currentDate: '',\r\n    currentMoney: '',\r\n    currentIcon: '',\r\n  },\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n  total,\r\n  totalIncome,\r\n  handlePeriodChange,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [name, setName] = useState(`${currentTable.currentName}`);\r\n  const [category, setCategory] = useState(currentTable.currentCategory);\r\n  const [description, setDescription] = useState(currentTable.currentDescription);\r\n  const [date, setDate] = useState(\r\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate,\r\n  );\r\n  const [money, setMoney] = useState(currentTable.currentMoney);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n\r\n  const resetInputs = () => {\r\n    setName('');\r\n    setCategory('');\r\n    setDescription('');\r\n    setDate(values.currentDate);\r\n    setMoney('');\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === 'ADD') {\r\n      const gap = total - +money;\r\n      const gapPercent = ((total - +money) / totalIncome) * 100;\r\n      if (category && money) {\r\n        if (props.showWarning && (gap <= props.moneyLimit || gapPercent < props.percentLimit)) {\r\n          const isSure = window.confirm('Are you sure?');\r\n          if (isSure) {\r\n            const temp = {\r\n              category: category,\r\n              description: description,\r\n              date: new Date(date),\r\n              money: +money,\r\n            };\r\n            updateCharge(temp);\r\n            handleClose();\r\n            resetInputs();\r\n            handleClickAlert();\r\n            handlePeriodChange();\r\n          }\r\n          return null;\r\n        } else {\r\n          updateCharge({\r\n            //   name: chargeCategories[category].name,\r\n            //   icon: chargeCategories[category].icon,\r\n            category: category,\r\n            description: description,\r\n            date: new Date(date),\r\n            money: +money,\r\n          });\r\n          handleClose();\r\n          resetInputs();\r\n          handleClickAlert();\r\n          handlePeriodChange();\r\n        }\r\n      }\r\n      handlePeriodChange();\r\n    } else if (e.target.innerText === 'CANCEL') {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n    // }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.id === 'selectName') {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === 'descriptionInput') {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === 'datePicker') {\r\n      setDate(event.target.value);\r\n    } else if (event.target.id === 'moneyInput') {\r\n      setMoney(event.target.value);\r\n    } else {\r\n      setCategory(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleClickAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-charge-title\"\r\n        aria-describedby=\"add-charge-description\">\r\n        <DialogTitle id=\"add-charge-title\">{'ADD NEW ITEM'}</DialogTitle>\r\n        <DialogContent className={classes.window}>\r\n          <div>\r\n            <TextField\r\n              id=\"selectName\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Category name (required)\"\r\n              selected={name}\r\n              value={category}\r\n              onChange={handleChange}\r\n              fullWidth>\r\n              {[\r\n                chargeCategories.map((el, i) => (\r\n                  <MenuItem key={i} value={el.docId} className={classes.nameSelect}>\r\n                    {el.name}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className={classes.moneyInput}\r\n              margin=\"dense\"\r\n              id=\"moneyInput\"\r\n              label=\"Current money (required)\"\r\n              input\r\n              value={money}\r\n              type=\"number\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={classes.pickerBlock}>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              // label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"success\">\r\n          Added successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    showWarning: state.settings.showWarning,\r\n    moneyLimit: state.settings.moneyLimit,\r\n    percentLimit: state.settings.percentLimit,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AddCharges);\r\n","import React, { useState } from 'react';\r\n// import ReactDOM from 'react-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddCharges from './AddCharges';\r\nimport { CategoryStyles } from '../Styles';\r\n\r\nimport { Block } from '@material-ui/icons';\r\n\r\n/*const useStyles = makeStyles({\r\n  categoryBlock: {\r\n    // display: 'flex',\r\n    alignItems: \"center\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n});*/\r\n\r\nconst useStyles = makeStyles(CategoryStyles);\r\n\r\nconst HomeTable = ({\r\n  icon = <Block />,\r\n  name = 'deleted category',\r\n  description,\r\n  date,\r\n  money,\r\n  deleteMoney,\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n  avatar,\r\n  category,\r\n  total,\r\n  totalIncome,\r\n  handlePeriodChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date?.seconds * 1000);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\r\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\r\n  };\r\n\r\n  const [currentTable, setCurrentTable] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentMoney: money,\r\n    currentDate: null,\r\n    currentCategory: category,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    console.log(e.target.closest('th'));\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === 'Delete') {\r\n      deleteMoney();\r\n      handlePeriodChange();\r\n    } else if (e.target.innerText === 'Edit') {\r\n      setOpen(true);\r\n      setCurrentTable({\r\n        currentName: name,\r\n        currentCategory: category,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentMoney: money,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\r\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\r\n      handlePeriodChange();\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\r\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\r\n      <TableCell>{money}</TableCell>\r\n      <TableCell>\r\n        <img src={`${avatar}`} alt=\"avatar\" className={'avatar'} />\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"home-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleActionClick}\r\n          size=\"small\">\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"home-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleActionClose}>\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n          {open && (\r\n            <AddCharges\r\n              open={open}\r\n              handleClose={handleClose}\r\n              currentTable={currentTable}\r\n              updateCharge={updateCharge}\r\n              charges={charges}\r\n              chargeCategories={chargeCategories}\r\n              total={total}\r\n              totalIncome={totalIncome}\r\n              handlePeriodChange={handlePeriodChange}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default HomeTable;\r\n","import React from \"react\";\r\n\r\n const useSortTableData = (items, item, config = null) => {\r\n\tconst [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n\tconst sortedItems = React.useMemo(() => {\r\n\t\tlet sortableItems = [...items];\r\n\t\tlet sortedName = [...item];\r\n\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\tif(sortConfig.key === \"category\" ){\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, item, sortConfig]);\r\n\r\n\tconst requestSort = (key) => {\r\n\t\tlet direction = 'ascending';\r\n\t\tif (\r\n\t\t\t\tsortConfig &&\r\n\t\t\t\tsortConfig.key === key &&\r\n\t\t\t\tsortConfig.direction === 'ascending'\r\n\t\t) {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortTableData;\r\n","import { db } from './firebase';\r\n\r\nexport const createCharge = (category) => {\r\n  db.collection('charges1')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateCharge = (docId, ctegory) => {\r\n  db.collection('charges1')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteCharge = (docId) => {\r\n  db.collection('charges1')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React from 'react';\r\nimport HomeTable from './HomeTable';\r\nimport useSortTableData from './sortTable';\r\nimport AddCharges from './AddCharges';\r\nimport { createCharge, updateCharge, deleteCharge } from '../../redux/firebase/chargesFB';\r\n\r\n//\r\n// Styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { TableStyles } from '../Styles';\r\n\r\n//\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Charges = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [filtered, setFiltered] = React.useState(props.charges); //items\r\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\r\n    if (+selectVal === 7 || +selectVal === 30) {\r\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\r\n      let currentDate = new Date();\r\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\r\n      return setFiltered([\r\n        ...props.charges.filter((arr) => {\r\n          // filtered:  ...items\r\n          console.log(arr.date.getTime() > time);\r\n          return arr.date.getTime() > time;\r\n        }),\r\n      ]);\r\n    } else if (selectVal === 'FULL_PERIOD') {\r\n      return setFiltered([...props.charges]); //items\r\n    }\r\n  };\r\n\r\n  const { items, requestSort, sortConfig } = useSortTableData(\r\n    filtered, //props.charges\r\n    props.categories,\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\r\n          <select\r\n            id=\"datePeriod\"\r\n            name=\"datePeriod\"\r\n            onChange={(event) => handlePeriodChange(event.target.value)}\r\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n            // selected={\"FULL_PERIOD\"}\r\n            defaultValue={'FULL_PERIOD'}\r\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\r\n          >\r\n            <option value=\"7\">This Week</option>\r\n            <option value=\"30\">This Month</option>\r\n            <option value=\"FULL_PERIOD\">Full period</option>\r\n          </select>\r\n          {/*<FilterDate filtered={items} />*/}\r\n        </div>\r\n\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={createCharge}\r\n        charges={props.charges}\r\n        chargeCategories={props.categories}\r\n        total={props.total}\r\n        totalIncome={props.totalIncome}\r\n        handlePeriodChange={handlePeriodChange}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table} aria-label=\"Table of Charges\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('category')}\r\n                  className={getClassNamesFor('category')}>\r\n                  {' '}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('description')}\r\n                  className={getClassNamesFor('description')}>\r\n                  {' '}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('date')}\r\n                  className={getClassNamesFor('date')}>\r\n                  {' '}\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('money')}\r\n                  className={getClassNamesFor('money')}>\r\n                  {' '}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell>Avatar</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              // ...items.map((el, i) => (\r\n              props.charges.map((el, i) => (\r\n                <HomeTable\r\n                  // icon={props.categories[el.category]?.icon}\r\n                  //name={props.categories[el.category]?.name}\r\n                  category={el.category}\r\n                  icon={\r\n                    props.categories.find((innerEl) => {\r\n                      return innerEl.docId === el.category;\r\n                    })?.icon\r\n                  }\r\n                  name={\r\n                    props.categories.find((innerEl) => {\r\n                      return innerEl.docId === el.category;\r\n                    })?.name\r\n                  }\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i}\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    deleteCharge(el.docId);\r\n                  }}\r\n                  updateCharge={(charge) => {\r\n                    updateCharge(el.docId, charge);\r\n                  }}\r\n                  charges={props.charges}\r\n                  chargeCategories={props.categories}\r\n                  total={props.total}\r\n                  totalIncome={props.totalIncome}\r\n                  handlePeriodChange={handlePeriodChange}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import { db } from './firebase';\r\n\r\nexport const createIncome = (category) => {\r\n  db.collection('incomes1')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateIncome = (docId, ctegory) => {\r\n  db.collection('incomes1')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteIncome = (docId) => {\r\n  db.collection('incomes1')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React from 'react';\r\nimport HomeTable from './HomeTable';\r\nimport AddCharges from './AddCharges';\r\n//import HomeSelect from './HomeSelect';\r\nimport useSortTableData from './sortTable';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { TableStyles } from '../Styles';\r\n\r\nimport { createIncome, updateIncome, deleteIncome } from '../../redux/firebase/incomeFB';\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Incomes = (props) => {\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\r\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\r\n    if (+selectVal === 7 || +selectVal === 30) {\r\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\r\n      let currentDate = new Date();\r\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\r\n      return setFiltered([\r\n        ...props.incomes.filter((arr) => {\r\n          // filtered:  ...items\r\n          console.log(arr.date.getTime() > time);\r\n          return arr.date.getTime() > time;\r\n        }),\r\n      ]);\r\n    } else if (selectVal === 'FULL_PERIOD') {\r\n      return setFiltered([...props.incomes]); //items\r\n    }\r\n  };\r\n\r\n  const { items, requestSort, sortConfig } = useSortTableData(\r\n    filtered, //props.incomes,\r\n    props.categories,\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\r\n          <select\r\n            id=\"datePeriod\"\r\n            name=\"datePeriod\"\r\n            onChange={(event) => handlePeriodChange(event.target.value)}\r\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n            // selected={\"FULL_PERIOD\"}\r\n            defaultValue={'FULL_PERIOD'}\r\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\r\n          >\r\n            <option value=\"7\">This Week</option>\r\n            <option value=\"30\">This Month</option>\r\n            <option value=\"FULL_PERIOD\">Full period</option>\r\n          </select>\r\n          {/*<FilterDate filtered={items} />*/}\r\n        </div>\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleClickOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={createIncome}\r\n        charges={props.incomes}\r\n        chargeCategories={props.categories}\r\n        handlePeriodChange={handlePeriodChange}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('category')}\r\n                  className={getClassNamesFor('category')}>\r\n                  {' '}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('description')}\r\n                  className={getClassNamesFor('description')}>\r\n                  {' '}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('date')}\r\n                  className={getClassNamesFor('date')}>\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('money')}\r\n                  className={getClassNamesFor('money')}>\r\n                  {' '}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>Avatar</TableCell>\r\n              <TableCell className={'table-direct'}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              // ...items.map((el, i) => (\r\n              ...props.incomes.map((el, i) => (\r\n                <HomeTable\r\n                  // name={props.categories[el.category]?.name}\r\n                  // icon={props.categories[el.category]?.icon}\r\n                  category={el.category}\r\n                  icon={\r\n                    props.categories.find((innerEl) => {\r\n                      return innerEl.docId === el.category;\r\n                    })?.icon\r\n                  }\r\n                  name={\r\n                    props.categories.find((innerEl) => {\r\n                      return innerEl.docId === el.category;\r\n                    })?.name\r\n                  }\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i} //el.name\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    deleteIncome(el.docId);\r\n                  }}\r\n                  updateCharge={(income) => {\r\n                    updateIncome(el.docId, income);\r\n                  }}\r\n                  charges={props.incomes}\r\n                  chargeCategories={props.categories}\r\n                  handlePeriodChange={handlePeriodChange}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","export const totalCounter = (incomes, charges) => {\r\n  return totalIncomes(incomes) - totalCharges(charges);\r\n};\r\n\r\nexport const totalIncomes = (incomes) => {\r\n  return incomes.reduce((prev, curr) => {\r\n    return prev + curr.money;\r\n  }, 0);\r\n};\r\n\r\nconst totalCharges = (charges) => {\r\n  return charges.reduce((prev, curr) => {\r\n    return prev + curr.money;\r\n  }, 0);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { totalCounter, totalIncomes } from '../Functions';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  const [incomes, setIncomes] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [toWarn, setToWarn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIncomes(totalIncomes(props.incomes));\r\n  }, [props.incomes]);\r\n\r\n  useEffect(() => {\r\n    setTotal(totalCounter(props.incomes, props.charges));\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    // prettier-ignore\r\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\r\n      setToWarn(true);\r\n    } else {\r\n      setToWarn(false);\r\n    }\r\n  }, [total, incomes, props]);\r\n\r\n  return (\r\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\r\n      <div className={style.header_category}>\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n      {toWarn && <p> BE aware of low budget</p>}\r\n      <div className={style.header_balance}>\r\n        <h2 className={style.header_balance__title}>Balance</h2>\r\n        <h1 className={style.header_balance__amount}>\r\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\r\n\r\n//\r\n// Styles\r\nimport './HomePage.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//\r\n// Components\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\n//\r\n//\r\n//\r\nimport { totalCounter } from '../Common/Functions';\r\nimport { totalIncomes } from '../Common/Functions';\r\nimport { TabsAreaStyles } from '../Styles';\r\n//\r\n// totalCounter(props.incomes, props.charges)\r\n//\r\n//\r\nconst useStyles = makeStyles(TabsAreaStyles);\r\n\r\nconst HomePage = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.home}>\r\n        <Header title=\"Homepage\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/homepage/\">\r\n            <Redirect to=\"/homepage/charges\" />\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/homepage/charges\"\r\n            render={() => (\r\n              <Charges\r\n                charges={props.charges}\r\n                categories={props.chargeCategories}\r\n                deleteMoney={props.deleteCharge}\r\n                updateCharge={props.updateCharge}\r\n                createCharge={props.createCharge}\r\n                avatar={props.avatar}\r\n                total={totalCounter(props.incomes, props.charges)}\r\n                totalIncome={totalIncomes(props.incomes)}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/homepage/incomes\"\r\n            render={() => (\r\n              <Incomes\r\n                incomes={props.incomes}\r\n                categories={props.incomeCategories}\r\n                deleteMoney={props.deleteIncome}\r\n                updateIncome={props.updateIncome}\r\n                createIncome={props.createIncome}\r\n                avatar={props.avatar}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from './HomePage';\r\nimport { connect } from 'react-redux';\r\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\r\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    avatar: state.settings.avatar,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createIncome: (income) => {\r\n      dispatch(createIncomeAC(income));\r\n    },\r\n    updateIncome: (index, income) => {\r\n      dispatch(updateIncomeAC(index, income));\r\n    },\r\n    deleteIncome: (index) => {\r\n      dispatch(deleteIncomeAC(index));\r\n    },\r\n    createCharge: (charge) => {\r\n      dispatch(createChargeAC(charge));\r\n    },\r\n    updateCharge: (index, charge) => {\r\n      dispatch(updateChargeAC(index, charge));\r\n    },\r\n    deleteCharge: (index) => {\r\n      dispatch(deleteChargeAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useState } from 'react';\r\n\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './Charts.css';\r\nimport { ChartsStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(ChartsStyles);\r\n\r\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\r\n  const [activePeriod, setActivePeriod] = useState(8);\r\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\r\n  const [isShowCharges, setIsShowCharges] = useState(true);\r\n\r\n  const getWeekDay = (day) => {\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    return days[new Date(day).getDay()];\r\n  };\r\n\r\n  const getWeek = () => setActivePeriod(8);\r\n  const getMonth = () => setActivePeriod(31);\r\n\r\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\r\n  const showCharges = () => setIsShowCharges(!isShowCharges);\r\n\r\n  const allDates = [];\r\n  const allDatesForDay = [];\r\n  const allDays = [];\r\n  const categoriesBar = [];\r\n  const categoriesDoughnut = [];\r\n  const trueDataCharges = [];\r\n  const trueDataIncomes = [];\r\n  const trueMoneyChargesDoughnut = [];\r\n  const trueMoneyIncomesBar = [];\r\n  const trueMoneyIncomes = [];\r\n  const moneyIn = [];\r\n  const moneyOut = [];\r\n  const trueMoneyCharges = [];\r\n  const allMoney = [];\r\n  let lastWeekIn = 0;\r\n  let penultimateWeekIn = 0;\r\n  let lastWeekOut = 0;\r\n  let penultimateWeekOut = 0;\r\n\r\n  for (let i = 0; i < activePeriod - 1; i++) {\r\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\r\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\r\n  }\r\n\r\n  allDates.reverse();\r\n  allDatesForDay.reverse();\r\n\r\n  allDatesForDay.map((el) => {\r\n    allDays.push(getWeekDay(el));\r\n    return allDays;\r\n  });\r\n\r\n  const fullIncomes = incomeCategories.slice();\r\n  const fullCharges = chargeCategories.slice();\r\n\r\n  fullIncomes.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  fullCharges.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  incomes.map((el) => {\r\n    allMoney.push(+el.money);\r\n    if (Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < activePeriod) {\r\n      trueDataIncomes.push(el);\r\n      trueMoneyIncomes.push(el.money);\r\n      allMoney.push(+el.money);\r\n\r\n      if (fullIncomes[el.category]) {\r\n        fullIncomes[el.category].sum += el.money;\r\n      }\r\n    }\r\n\r\n    if (Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\r\n      lastWeekIn += el.money;\r\n    }\r\n    if (\r\n      Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 &&\r\n      Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < 15\r\n    ) {\r\n      penultimateWeekIn += el.money;\r\n    }\r\n  });\r\n\r\n  charges.map((el) => {\r\n    if (Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < activePeriod) {\r\n      trueDataCharges.push(el);\r\n      trueMoneyCharges.push(el.money);\r\n      allMoney.push(+el.money);\r\n\r\n      if (fullCharges[el.category]) {\r\n        fullCharges[el.category].sum += el.money;\r\n      }\r\n    }\r\n\r\n    if (Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\r\n      lastWeekOut += el.money;\r\n    }\r\n    if (\r\n      Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 &&\r\n      Math.ceil(Math.abs(el.date - new Date().getTime()) / (1000 * 3600 * 24)) < 15\r\n    ) {\r\n      penultimateWeekOut += el.money;\r\n    }\r\n  });\r\n\r\n  allDates.forEach((d) => {\r\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    if (elIn) {\r\n      moneyIn.push(elIn.money);\r\n    } else {\r\n      moneyIn.push(0);\r\n    }\r\n    if (elOut) {\r\n      moneyOut.push(elOut.money);\r\n    } else {\r\n      moneyOut.push(0);\r\n    }\r\n  });\r\n\r\n  fullIncomes.map((el) => {\r\n    if (el.sum > 0) {\r\n      categoriesBar.push(el.name);\r\n      trueMoneyIncomesBar.push(el.sum);\r\n    }\r\n  });\r\n\r\n  fullCharges.map((el) => {\r\n    if (el.sum > 0) {\r\n      categoriesDoughnut.push(el.name);\r\n      trueMoneyChargesDoughnut.push(el.sum);\r\n    }\r\n  });\r\n\r\n  const maxSum = Math.max(...allMoney);\r\n  const minSum = Math.min(...allMoney);\r\n\r\n  const futureWeekIn =\r\n    ((lastWeekIn - penultimateWeekIn) / penultimateWeekIn) * lastWeekIn + lastWeekIn;\r\n  const futureWeekOut =\r\n    ((lastWeekOut - penultimateWeekOut) / penultimateWeekOut) * lastWeekOut + lastWeekOut;\r\n\r\n  const startDataLine = {\r\n    labels: activePeriod === 8 ? allDays : allDates,\r\n    datasets: [\r\n      {\r\n        label: 'Incomes',\r\n        lineTension: 0.5,\r\n        backgroundColor: 'rgb(0,0,0,0)',\r\n        borderColor: 'rgb(93,143,238)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        pointBackgroundColor: 'rgb(93,143,238)',\r\n        pointBorderColor: 'rgb(93,143,238)',\r\n        data: isShowIncomes ? moneyIn : null,\r\n      },\r\n      {\r\n        label: 'Charges',\r\n        lineTension: 0.5,\r\n        backgroundColor: 'rgb(254,132,2)',\r\n        borderColor: 'rgb(254,132,2)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        borderDash: [15, 5],\r\n        pointBackgroundColor: 'rgb(254,132,2)',\r\n        pointBorderColor: 'rgb(254,132,2)',\r\n        data: isShowCharges ? moneyOut : null,\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const summary = {\r\n    title: {\r\n      display: true,\r\n      text: 'Summary',\r\n      position: 'top',\r\n      fontSize: 20,\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: false,\r\n          ticks: {\r\n            suggestedMin: minSum,\r\n            suggestedMax: maxSum,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const incomes_cat = {\r\n    title: {\r\n      display: true,\r\n      text: 'Income categories',\r\n      fontSize: 20,\r\n      fontColor: 'white',\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            suggestedMin: 0,\r\n            suggestedMax: 500,\r\n            fontColor: 'white',\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: 'white',\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const startDataBar = {\r\n    labels: categoriesBar,\r\n    datasets: [\r\n      {\r\n        backgroundColor: 'white',\r\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 0,\r\n        barPercentage: 0.4,\r\n        data: trueMoneyIncomesBar,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const charges_cat = {\r\n    title: {\r\n      display: true,\r\n      text: 'Charges categories',\r\n      fontSize: 20,\r\n      fontColor: 'white',\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: 'right',\r\n      labels: {\r\n        fontColor: 'white',\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const startDataDoughnut = {\r\n    labels: categoriesDoughnut,\r\n    datasets: [\r\n      {\r\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\r\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\r\n        borderWidth: 0,\r\n        data: trueMoneyChargesDoughnut,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const forecast_money = {\r\n    title: {\r\n      display: true,\r\n      text: 'Forecast for incomes and charges',\r\n      fontSize: 20,\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: 'right',\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const startForecast = {\r\n    labels: ['Penultimate week', 'Last week', 'Future week'],\r\n    datasets: [\r\n      {\r\n        label: 'Incomes',\r\n        fill: false,\r\n        borderColor: 'rgb(93,143,238)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        pointBackgroundColor: 'rgb(93,143,238)',\r\n        pointBorderColor: 'rgb(93,143,238)',\r\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)],\r\n      },\r\n      {\r\n        label: 'Charges',\r\n        fill: false,\r\n        backgroundColor: 'rgb(254,132,2)',\r\n        borderColor: 'rgb(254,132,2)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        pointBackgroundColor: 'rgb(254,132,2)',\r\n        pointBorderColor: 'rgb(254,132,2)',\r\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"charts\">\r\n        <div className=\"line-chart__container\">\r\n          <div className=\"line-chart\">\r\n            <Line data={startDataLine} options={summary} />\r\n          </div>\r\n          <div className=\"chart-buttons\">\r\n            <div className=\"chart-buttons__btn\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 31 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getMonth}>\r\n                Month\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 8 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getWeek}>\r\n                Week\r\n              </Button>\r\n            </div>\r\n            <div className=\"chart-buttons__checkbox\">\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\r\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\r\n                  Incomes\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\r\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\r\n                  Charges\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"buttons_separated\">\r\n          <div className=\"buttons_btn__separated\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={activePeriod === 31 ? 'btn-active' : null}\r\n              classes={{ root: classes.root, label: classes.label }}\r\n              onClick={getMonth}>\r\n              Month\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={activePeriod === 8 ? 'btn-active' : null}\r\n              classes={{ root: classes.root, label: classes.label }}\r\n              onClick={getWeek}>\r\n              Week\r\n            </Button>\r\n          </div>\r\n          <div className=\"buttons_checkbox__separated\">\r\n            <span>\r\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\r\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\r\n                Incomes\r\n              </label>\r\n            </span>\r\n            <span>\r\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\r\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\r\n                Charges\r\n              </label>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bar-chart\">\r\n          <Bar data={startDataBar} options={incomes_cat} />\r\n        </div>\r\n        <div className=\"doughnut-chart\">\r\n          <Doughnut data={startDataDoughnut} options={charges_cat} />\r\n        </div>\r\n        <div className=\"forecast__container\">\r\n          <div className=\"forecast-chart\">\r\n            <Line data={startForecast} options={forecast_money} />\r\n          </div>\r\n          <div className=\"forecast_descr\">\r\n            <h3>Your budget has changed in the last week</h3>\r\n            <p>\r\n              If this continues, your incomes will{' '}\r\n              <span>\r\n                {lastWeekIn < penultimateWeekIn ? 'decrease or remain unchanged' : 'increase'}\r\n              </span>{' '}\r\n              and your charges will{' '}\r\n              <span>\r\n                {lastWeekOut < penultimateWeekOut ? 'decrease or remain unchanged' : 'increase'}\r\n              </span>\r\n              .\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import Charts from './Charts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ModalStyles } from \"../Styles\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(ModalStyles);\r\n\r\nconst AddCategory = ({\r\n  open,\r\n  handleClose,\r\n  currentCategory = {\r\n    currentName: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    currentIcon: \"\",\r\n  },\r\n  updateCategory,\r\n  icons,\r\n}) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10\r\n        ? `0${today.getMonth() + 1}`\r\n        : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [name, setName] = useState(`${currentCategory.currentName}`);\r\n  const [description, setDescription] = useState(\r\n    currentCategory.currentDescription\r\n  );\r\n  const [date, setDate] = useState(\r\n    currentCategory.currentDate\r\n      ? currentCategory.currentDate\r\n      : values.currentDate\r\n  );\r\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\r\n\r\n  const resetInputs = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setDate(values.currentDate);\r\n    setIcon(\"\");\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === \"ADD\") {\r\n      if (name && icon !== \"object\" && icon) {\r\n        updateCategory({\r\n          name: name,\r\n          description: description,\r\n          date: new Date(date),\r\n          icon: icons.indexOf(icon),\r\n        });\r\n        handleClose();\r\n        resetInputs();\r\n        handleClickSuccess()\r\n      }\r\n    } else if (e.target.innerText === \"CANCEL\") {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n      handleClickSuccess()\r\n\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.id === \"nameInput\") {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === \"descriptionInput\") {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === \"datePicker\") {\r\n      setDate(event.target.value);\r\n    } else if (typeof event.target.value === \"object\") {\r\n      setIcon(event.target.value);\r\n    }\r\n  };\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  const handleClickSuccess = () => {\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const handleCloseSuccess = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-category-title\"\r\n        aria-describedby=\"add-category-description\"\r\n      >\r\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\r\n        <DialogContent className={classes.window}>\r\n          <div>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"nameInput\"\r\n              label=\"Category name (required)\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={name}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className={classes.pickersBlock}>\r\n            <TextField\r\n              className={classes.iconPicker}\r\n              id=\"selectIcon\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Select category icon (required)\"\r\n              value={icon}\r\n              onChange={handleChange}\r\n              //   helperText=\"Select category icon\"\r\n              fullWidth\r\n            >\r\n              {[\r\n                ...icons.map((el, i) => (\r\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\r\n                    {el}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={openSuccess} autoHideDuration={4000} onClose={handleCloseSuccess}>\r\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n          Added successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState } from 'react';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\r\nimport AddCategory from './AddCategory';\r\nimport { CategoryStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(CategoryStyles);\r\n\r\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date?.seconds * 1000);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\r\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\r\n  };\r\n\r\n  const [currentCategory, setCurrentCategory] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentDate: null,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === 'Delete') {\r\n      deleteCategory();\r\n    } else if (e.target.innerText === 'Edit') {\r\n      setOpen(true);\r\n      setCurrentCategory({\r\n        currentName: name,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"category-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleActionClick}\r\n          size=\"small\">\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"category-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleActionClose}>\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n          {open && (\r\n            <AddCategory\r\n              open={open}\r\n              handleClose={handleClose}\r\n              icons={icons}\r\n              currentCategory={currentCategory}\r\n              updateCategory={updateCategory}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import { db } from './firebase';\r\n\r\nexport const createChargeCategory = (category) => {\r\n  db.collection('charge-categories')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateChargeCategory = (docId, ctegory) => {\r\n  db.collection('charge-categories')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteChargeCategory = (docId) => {\r\n  db.collection('charge-categories')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport Category from './Category';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  createChargeCategory,\r\n  updateChargeCategory,\r\n  deleteChargeCategory,\r\n} from '../../redux/firebase/chargeCategoriesFB';\r\nimport { TableStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Charges = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={createChargeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.chargeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    deleteChargeCategory(el.docId);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    updateChargeCategory(el.docId, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import { db } from './firebase';\r\n\r\nexport const createIncomeCategory = (category) => {\r\n  db.collection('income-categories')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateIncomeCategory = (docId, ctegory) => {\r\n  db.collection('income-categories')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteIncomeCategory = (docId) => {\r\n  db.collection('income-categories')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCategory from \"./AddCategory\";\r\nimport Category from \"./Category\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport {\r\n  createIncomeCategory,\r\n  updateIncomeCategory,\r\n  deleteIncomeCategory,\r\n} from \"../../redux/firebase/incomeCategoriesFB\";\r\nimport {TableStyles} from '../Styles'\r\n\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Incomes = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}\r\n        >\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={createIncomeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.incomeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    deleteIncomeCategory(el.docId);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    updateIncomeCategory(el.docId, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {TabsAreaStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(TabsAreaStyles);\r\n\r\nconst Categories = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.Categories}>\r\n        {/* <div className={classes.headerBlock}>\r\n          <div>\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className={classes.balanceBlock}>\r\n            <div className={classes.balanceTitle}>Balance</div>\r\n            <div className={classes.balanceAmount}>$2,652.07</div>\r\n          </div>\r\n        </div> */}\r\n        <Header title=\"Categories\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/categories/\">\r\n            <Redirect to=\"/categories/charges\" />\r\n          </Route>\r\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\r\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport Categories from './Categories';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Categories);\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\n\r\nconst AvatarUpload = ({ img, updateInState }) => {\r\n  const updateImage = (e) => {\r\n    e.target.files[0] && updateInState(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={style.avatar}>\r\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\r\n        <img src={img} alt=\"avatar\" />\r\n      </label>\r\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUpload;\r\n\r\n// // Add a new document in collection \"cities\"\r\n// const littleUpdate = () => {\r\n//   db.collection('user-info')\r\n//     .doc('NEW')\r\n//     .set({\r\n//       userName: 'Avocado',\r\n//       moneyLimit: 2500,\r\n//       avatar: imageAsFile,\r\n//     })\r\n//     .then(function () {\r\n//       console.log('Document successfully written!');\r\n//     })\r\n//     .catch(function (error) {\r\n//       console.error('Error writing document: ', error);\r\n//     });\r\n// };\r\n\r\n// const handleFireBaseUpload = (e) => {\r\n//   e.preventDefault();\r\n//   console.log('start of upload');\r\n//   // async magic goes here...\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n// };\r\n\r\n// const updateUpload = () => {\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n//   uploadTask.on(\r\n//     'state_changed',\r\n//     (snapshot) => {},\r\n//     (error) => {\r\n//       console.log(error);\r\n//     },\r\n//     () => {\r\n//       storage\r\n//         .ref('images')\r\n//         .child(imageAsFile.name)\r\n//         .getDownloadURL()\r\n//         .then((url) => {\r\n//           db.collection('user-info')\r\n//             .add({\r\n//               userName: 'Ivan',\r\n//               moneyLimit: 2300,\r\n//               avatar: url,\r\n//             })\r\n//             .then(function () {\r\n//               console.log('Document successfully written!');\r\n//             });\r\n//           // db.collection('user-info')\r\n//           //   .doc('NEW')\r\n//           //   .set({\r\n//           //     userName: 'Ivan',\r\n//           //     moneyLimit: 2500,\r\n//           //   })\r\n//           //   .then(function () {\r\n//           //     console.log('Document successfully written!');\r\n//           //   })\r\n//           //   .catch(function (error) {\r\n//           //     console.error('Error writing document: ', error);\r\n//           //   });\r\n//           setImage(null);\r\n//         });\r\n//     },\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\nimport { ButtonGroup, Button } from '@material-ui/core/';\r\n\r\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\r\n  const handleDecreaseLimit = () => {\r\n    if (title === 'amount') {\r\n      setLimit(limit > 100 ? limit - step : 100);\r\n    } else {\r\n      setLimit(limit > 10 ? limit - step : 10);\r\n    }\r\n  };\r\n  const handleIncreaseLimit = () => {\r\n    if (title === 'percent') {\r\n      setLimit(limit < 90 ? limit + step : 90);\r\n    } else {\r\n      setLimit(limit + step);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Remain {title}</h3>\r\n      <span className={style.limit}>{limit}</span>\r\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\r\n        <Button onClick={handleDecreaseLimit}>-</Button>\r\n        <Button onClick={handleIncreaseLimit}>+</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Limits;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  handleFireBaseUploadInfo,\r\n  handleFireBaseUploadAvatar,\r\n} from '../../redux/firebase/profileFB';\r\n\r\n// components\r\nimport Avatar from './components/AvatarUpload';\r\nimport Limits from './components/Limits';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport 'react-phone-input-2/lib/material.css';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n  const [avatarNew, setAvatarNew] = useState(null);\r\n  const [avatar, setAvatar] = useState(props.avatar);\r\n  const [name, setName] = useState(props.userName);\r\n  const [phone, setPhone] = useState(props.phoneNumber);\r\n  const [showWarning, setWarning] = useState(props.showWarning);\r\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\r\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\r\n  const [showSaved, setShowSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAvatar(props.avatar);\r\n    setName(props.userName);\r\n    setPhone(props.phoneNumber);\r\n    setWarning(props.showWarning);\r\n    setCurrentMoneyLimit(props.moneyLimit);\r\n    setCurrentPercentLimit(props.percentLimit);\r\n  }, [props]);\r\n\r\n  const uploadNewData = () => {\r\n    if (avatarNew) {\r\n      handleFireBaseUploadAvatar(\r\n        setAvatarNew,\r\n        avatarNew,\r\n        name,\r\n        phone,\r\n        showWarning,\r\n        currentMoneyLimit,\r\n        currentPercentLimit,\r\n        setShowSaved,\r\n      );\r\n    } else {\r\n      handleFireBaseUploadInfo(\r\n        avatar,\r\n        name,\r\n        phone,\r\n        showWarning,\r\n        currentMoneyLimit,\r\n        currentPercentLimit,\r\n        setShowSaved,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Avatar img={avatar} updateInState={setAvatarNew} />\r\n      <div className={style.main}>\r\n        <div className={style.main_inner}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n          <PhoneInput\r\n            inputStyle={{ width: '100%' }}\r\n            id=\"phone\"\r\n            value={phone}\r\n            country=\"ua\"\r\n            onChange={(e) => setPhone(e)}\r\n          />\r\n        </div>\r\n        <div className={style.main_inner}>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={showWarning}\r\n                  onChange={() => {\r\n                    setWarning(!showWarning);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Warn me when remains:\"\r\n            />\r\n          </div>\r\n          <Limits\r\n            title=\"amount\"\r\n            limit={currentMoneyLimit}\r\n            setLimit={setCurrentMoneyLimit}\r\n            step={100}\r\n            disabled={!showWarning}\r\n          />\r\n          <Limits\r\n            title=\"percent\"\r\n            limit={currentPercentLimit}\r\n            setLimit={setCurrentPercentLimit}\r\n            step={5}\r\n            disabled={!showWarning}\r\n          />\r\n        </div>\r\n        <div className={style.settings_button}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\r\n            SAVE\r\n          </Button>\r\n        </div>\r\n\r\n        {showSaved && (\r\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\r\n            Your profile has been updated\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { db, storage } from './firebase';\r\n\r\nexport const handleFireBaseUploadInfo = (\r\n  avatar,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  db.collection('user-info')\r\n    .doc('INFO')\r\n    .set({\r\n      avatar: avatar,\r\n      userName: name,\r\n      phoneNumber: phone,\r\n      showWarning: showWarning,\r\n      moneyLimit: currentMoneyLimit,\r\n      percentLimit: currentPercentLimit,\r\n    })\r\n    .then(() => {\r\n      console.log('Document successfully written without avatar!');\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const handleFireBaseUploadAvatar = (\r\n  setAvatarNew,\r\n  avatarNew,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\r\n  console.log('start of upload');\r\n  uploadTask.on('state_changed', () => {\r\n    storage\r\n      .ref('images')\r\n      .child(`avatar.jpg`)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        db.collection('user-info')\r\n          .doc('INFO')\r\n          .set({\r\n            avatar: url,\r\n            userName: name,\r\n            phoneNumber: phone,\r\n            showWarning: showWarning,\r\n            moneyLimit: currentMoneyLimit,\r\n            percentLimit: currentPercentLimit,\r\n          })\r\n          .then(() => {\r\n            console.log('Document successfully written with avatar!');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error: ', error);\r\n          });\r\n        setAvatarNew(null);\r\n      });\r\n  });\r\n};\r\n","import Settings from './Settings';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    ...state.settings,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Settings);\r\n","import React, { useEffect } from 'react';\r\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\n//\r\n// Redux\r\nimport { initializeAppThunk } from '../src/redux/appReducer';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\r\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\r\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\r\nimport { setChargesThunk } from '../src/redux/chargesReducer';\r\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\r\n\r\nimport store from './redux/store';\r\n\r\n//\r\n// Components\r\nimport Sidebar from './components/Navbar/Navbar';\r\nimport HomePage from './components/HomePage/HomePageContainer';\r\nimport Charts from './components/Charts/ChartsContainer';\r\nimport Categories from './components/Categories/CategoriesContainer';\r\nimport Settings from './components/Settings/SettingsContainer';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.initializeAppThunk();\r\n    // props.setSettingsThunk();\r\n    // props.setChargeCategoriesThunk();\r\n    // props.setIncomeCategoriesThunk();\r\n    // props.setChargesThunk();\r\n    // props.fetchIncomesThunk();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      {props.initialized && (\r\n        <main>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/homepage\" />\r\n          </Route>\r\n          <Route path=\"/homepage\" render={() => <HomePage />} />\r\n          <Route path=\"/charts\" render={() => <Charts />} />\r\n          <Route path=\"/categories\" render={() => <Categories />} />\r\n          <Route path=\"/settings\" render={() => <Settings />} />\r\n        </main>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nconst AppContainer = connect(mapStateToProps, { initializeAppThunk })(App);\r\n\r\nconst MainAppContainer = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default MainAppContainer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__16Kiz\",\"avatar\":\"Settings_avatar__ARlQ5\",\"main_inner\":\"Settings_main_inner__2WpM1\",\"settings_button\":\"Settings_settings_button__2xvbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2SmAX\",\"header__warning\":\"Header_header__warning__1ASRu\",\"header_category\":\"Header_header_category__OWtG-\",\"header_balance\":\"Header_header_balance__3fAvu\",\"header_balance__title\":\"Header_header_balance__title__3OQ9E\",\"header_balance__amount\":\"Header_header_balance__amount__1fhxV\",\"header_balance__red\":\"Header_header_balance__red__1Ianv\"};"],"sourceRoot":""}