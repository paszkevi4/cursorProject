{"version":3,"sources":["redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/settingsReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/HomeTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","App.js","components/TemporaryComponent/TempContainer.jsx","components/TemporaryComponent/Temp.jsx","serviceWorker.js","index.js"],"names":["icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","initialState","name","description","date","Date","icon","incomeCategoriesReducer","state","action","type","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","avatar","userName","phoneNumber","showWarning","limit","settingsReducer","newUserName","newPhoneNumber","newLimit","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","NavBar","to","HomeTable","Charges","props","map","el","i","key","Incomes","HomePage","path","render","connect","dispatch","createIncome","createIncomeAC","updateIncome","updateIncomeAC","deleteIncome","deleteIncomeAC","createCharge","createChargeAC","updateCharge","updateChargeAC","deleteCharge","deleteChargeAC","divStyle","width","height","startData","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","lineTension","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","Charts","className","style","options","title","display","text","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","React","Component","useStyles","makeStyles","dialogWindow","minWidth","AddCategory","open","handleClose","classes","createChargeCategory","today","values","currentDate","getFullYear","getMonth","getDate","useState","setCurrency","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","fullWidth","select","value","onChange","event","target","defaultValue","DialogActions","Button","onClick","color","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","Category","anchorEl","setAnchorEl","e","console","log","currentTarget","innerText","parentNode","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","closest","size","Menu","keepMounted","Boolean","MenuItem","table","tableHead","addButton","float","setOpen","variant","startIcon","TableContainer","Paper","Table","TableHead","TableBody","toString","Categories","padding","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","headerBlock","justifyContent","balanceTitle","textAlign","balanceAmount","fontWeight","balanceBlock","activeClassName","exact","createIncomeCategory","createIncomeCategoryAC","updateIncomeCategory","updateIncomeCategoryAC","deleteIncomeCategory","deleteIncomeCategoryAC","createChargeCategoryAC","updateChargeCategory","updateChargeCategoryAC","deleteChargeCategory","deleteChargeCategoryAC","Settings","updateUserName","updateUserNameAC","App","Object","Navbar","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4def2268.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  AccountBalance,\r\n  AccountBalanceWallet,\r\n  AllInbox,\r\n  ChildFriendly,\r\n  Cake,\r\n  DirectionsBike,\r\n  DriveEta,\r\n  EmojiSymbols,\r\n  Fastfood,\r\n  Favorite,\r\n  FitnessCenter,\r\n  Kitchen,\r\n  LocalDining,\r\n  MenuBook,\r\n  Pets,\r\n  PlayForWork,\r\n  School,\r\n  ShoppingCart,\r\n  Waves,\r\n  WorkOutline,\r\n} from '@material-ui/icons';\r\n\r\nexport const icons = [\r\n  <AccountBalance />,\r\n  <AccountBalanceWallet />,\r\n  <AllInbox />,\r\n  <ChildFriendly />,\r\n  <Cake />,\r\n  <DirectionsBike />,\r\n  <DriveEta />,\r\n  <EmojiSymbols />,\r\n  <Fastfood />,\r\n  <Favorite />,\r\n  <FitnessCenter />,\r\n  <Kitchen />,\r\n  <LocalDining />,\r\n  <MenuBook />,\r\n  <Pets />,\r\n  <PlayForWork />,\r\n  <School />,\r\n  <ShoppingCart />,\r\n  <Waves />,\r\n  <WorkOutline />,\r\n];\r\n\r\nexport default (state = icons, _) => state;\r\n","import { icons } from './iconsReducer';\r\n\r\nconst CREATE_CATEGORY = 'CREATE_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\r\n\r\ntype incomeCategoryType = {\r\n  name: string;\r\n  description: string;\r\n  date: Date | string;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype createIncomeCategoryACType = {\r\n  type: typeof CREATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n};\r\n\r\ntype updateIncomeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | createIncomeCategoryACType\r\n  | updateIncomeCategoryACType\r\n  | deleteIncomeCategoryACType;\r\n\r\nlet initialState: Array<incomeCategoryType> = [\r\n  {\r\n    name: 'My mom',\r\n    description: 'Money from my mom',\r\n    date: new Date(2020, 7, 25),\r\n    icon: icons[15],\r\n  },\r\n  {\r\n    name: 'Sale book',\r\n    description: 'Sold a book',\r\n    date: new Date(2020, 7, 24),\r\n    icon: icons[13],\r\n  },\r\n  { name: 'Work', description: '', date: new Date(2020, 7, 23), icon: icons[19] },\r\n  {\r\n    name: 'Donations',\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 22),\r\n    icon: icons[15],\r\n  },\r\n];\r\n\r\nconst incomeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<incomeCategoryType> => {\r\n  switch (action.type) {\r\n    case CREATE_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createIncomeCategoryAC = (\r\n  category: incomeCategoryType,\r\n): createIncomeCategoryACType => ({\r\n  type: CREATE_CATEGORY,\r\n  category,\r\n});\r\n\r\nexport const updateIncomeCategoryAC = (\r\n  index: number,\r\n  category: incomeCategoryType,\r\n): updateIncomeCategoryACType => ({\r\n  type: UPDATE_CATEGORY,\r\n  category,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\r\n  type: DELETE_CATEGORY,\r\n  index,\r\n});\r\n\r\nexport default incomeCategoriesReducer;\r\n","import { icons } from './iconsReducer';\r\n\r\nconst SET_CATEGORY = 'SET_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\r\n\r\ntype chargeCategoryType = {\r\n  name: string;\r\n  description: string;\r\n  date: Date | string;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype createChargeCategoryACType = {\r\n  type: typeof SET_CATEGORY;\r\n  category: chargeCategoryType;\r\n};\r\n\r\ntype updateChargeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: chargeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | createChargeCategoryACType\r\n  | updateChargeCategoryACType\r\n  | deleteChargeCategoryACType;\r\n\r\nlet initialState: Array<chargeCategoryType> = [\r\n  {\r\n    name: 'Food',\r\n    description: 'For food',\r\n    date: new Date(2020, 7, 26),\r\n    icon: icons[12],\r\n  },\r\n  {\r\n    name: 'Clothes',\r\n    description: 'For clothes',\r\n    date: new Date(2020, 7, 25),\r\n    icon: icons[7],\r\n  },\r\n  { name: 'Restoraunts', description: '', date: new Date(2020, 7, 24), icon: icons[8] },\r\n  {\r\n    name: 'Utility bills',\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 23),\r\n    icon: icons[2],\r\n  },\r\n  { name: 'Pets', description: 'For smth else', date: new Date(2020, 7, 21), icon: icons[14] },\r\n];\r\n\r\nconst chargeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<chargeCategoryType> => {\r\n  switch (action.type) {\r\n    case SET_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createChargeCategoryAC = (\r\n  category: chargeCategoryType,\r\n): createChargeCategoryACType => ({\r\n  type: SET_CATEGORY,\r\n  category,\r\n});\r\n\r\nexport const updateChargeCategoryAC = (\r\n  index: number,\r\n  category: chargeCategoryType,\r\n): updateChargeCategoryACType => ({\r\n  type: UPDATE_CATEGORY,\r\n  index,\r\n  category,\r\n});\r\n\r\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\r\n  type: DELETE_CATEGORY,\r\n  index,\r\n});\r\n\r\nexport default chargeCategoriesReducer;\r\n","const CREATE_CHARGE = 'CREATE_CHARGE';\r\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\r\nconst DELETE_CHARGE = 'DELETE_CHARGE';\r\n\r\ntype chargeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype createChargeACType = {\r\n  type: typeof CREATE_CHARGE;\r\n  charge: chargeType;\r\n};\r\n\r\ntype updateChargeACType = {\r\n  type: typeof UPDATE_CHARGE;\r\n  charge: chargeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeACType = {\r\n  type: typeof DELETE_CHARGE;\r\n  index: number;\r\n};\r\n\r\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\r\n\r\nlet initialState: Array<chargeType> = [\r\n  { category: 0, description: 'Diner with John', date: '22/08/20', money: 300 },\r\n  { category: 1, description: 'For clothes', date: '23/08/20', money: 500 },\r\n  { category: 2, description: '', date: '24/08/20', money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: '25/08/20',\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: '26/08/20', money: 150 },\r\n];\r\n\r\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\r\n  switch (action.type) {\r\n    case CREATE_CHARGE:\r\n      return [...state, action.charge];\r\n    case UPDATE_CHARGE:\r\n      state.splice(action.index, 1, action.charge);\r\n      return [...state];\r\n    case DELETE_CHARGE:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\r\n  type: CREATE_CHARGE,\r\n  charge,\r\n});\r\n\r\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\r\n  type: UPDATE_CHARGE,\r\n  charge,\r\n  index,\r\n});\r\n\r\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\r\n  type: DELETE_CHARGE,\r\n  index,\r\n});\r\n\r\nexport default chargesReducer;\r\n","const CREATE_INCOME = 'SET_INCOME';\r\nconst UPDATE_INCOME = 'UPDATE_INCOME';\r\nconst DELETE_INCOME = 'DELEE_INCOME';\r\n\r\ntype incomeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype createIncomeACType = {\r\n  type: typeof CREATE_INCOME;\r\n  income: incomeType;\r\n};\r\n\r\ntype updateIncomeACType = {\r\n  type: typeof UPDATE_INCOME;\r\n  income: incomeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeACType = {\r\n  type: typeof DELETE_INCOME;\r\n  index: number;\r\n};\r\n\r\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\r\n\r\nlet initialState: Array<incomeType> = [\r\n  { category: 0, description: 'From mom', date: '22/08/20', money: 500 },\r\n  { category: 1, description: 'For selling a book', date: '23/08/20', money: 700 },\r\n  { category: 2, description: '', date: '24/08/20', money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: '25/08/20',\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: '26/08/20', money: 430 },\r\n];\r\n\r\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\r\n  switch (action.type) {\r\n    case CREATE_INCOME:\r\n      return [...state, action.income];\r\n    case UPDATE_INCOME:\r\n      state.splice(action.index, 1, action.income);\r\n      return [...state];\r\n    case DELETE_INCOME:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\r\n  type: CREATE_INCOME,\r\n  income,\r\n});\r\n\r\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\r\n  type: UPDATE_INCOME,\r\n  income,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\r\n  type: DELETE_INCOME,\r\n  index,\r\n});\r\n\r\nexport default incomesReducer;\r\n","const UPDATE_USER_NAME = 'UPDATE_USER_NAME';\r\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\r\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\r\nconst SET_LIMIT = 'SET_LIMIT';\r\n\r\ntype stateType = {\r\n  avatar: any;\r\n  userName: string | null;\r\n  phoneNumber: any;\r\n  showWarning: boolean;\r\n  limit: number;\r\n};\r\n\r\ntype updateUserNameACType = {\r\n  type: typeof UPDATE_USER_NAME;\r\n  newUserName: string;\r\n};\r\n\r\ntype updatePhoneNumberACType = {\r\n  type: typeof UPDATE_PHONE_NUMBER;\r\n  newPhoneNumber: any;\r\n};\r\n\r\ntype toggleWarningACType = {\r\n  type: typeof TOGGLE_WARNING;\r\n  showWarning: boolean;\r\n};\r\n\r\ntype setLimitACType = {\r\n  type: typeof SET_LIMIT;\r\n  newLimit: number;\r\n};\r\n\r\ntype actionType =\r\n  | updateUserNameACType\r\n  | updatePhoneNumberACType\r\n  | toggleWarningACType\r\n  | setLimitACType;\r\n\r\nconst initialState: stateType = {\r\n  avatar: null,\r\n  userName: 'Ivan',\r\n  phoneNumber: '+380991234567',\r\n  showWarning: true,\r\n  limit: 5000,\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\r\n  switch (action.type) {\r\n    case UPDATE_USER_NAME:\r\n      return { ...state, userName: action.newUserName };\r\n    case UPDATE_PHONE_NUMBER:\r\n      return { ...state, phoneNumber: action.newPhoneNumber };\r\n    case TOGGLE_WARNING:\r\n      return { ...state, showWarning: action.showWarning };\r\n    case SET_LIMIT:\r\n      return { ...state, limit: action.newLimit };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserNameAC = (newUserName: string): updateUserNameACType => ({\r\n  type: UPDATE_USER_NAME,\r\n  newUserName,\r\n});\r\n\r\nexport const updatePhoneNumberAC = (newPhoneNumber: any): updatePhoneNumberACType => ({\r\n  type: UPDATE_PHONE_NUMBER,\r\n  newPhoneNumber,\r\n});\r\n\r\nexport const toggleWarningAC = (showWarning = !initialState.showWarning): toggleWarningACType => ({\r\n  type: TOGGLE_WARNING,\r\n  showWarning,\r\n});\r\n\r\nexport const setLimitACType = (newLimit: number): setLimitACType => ({\r\n  type: SET_LIMIT,\r\n  newLimit,\r\n});\r\n\r\nexport default settingsReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\r\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\r\nimport chargesReducer from './chargesReducer';\r\nimport incomesReducer from './incomesReducer';\r\n\r\nimport iconsReducer from './iconsReducer';\r\nimport settingsReducer from './settingsReducer';\r\n\r\nlet reducers = combineReducers({\r\n  icons: iconsReducer,\r\n  settings: settingsReducer,\r\n  incomes: incomesReducer,\r\n  charges: chargesReducer,\r\n  incomeCategories: incomeCategoriesReducer,\r\n  chargeCategories: chargeCategoriesReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n  <nav>\r\n    <div>LOGO</div>\r\n    {/* logo */}\r\n    {/* navigation */}\r\n    <NavLink to=\"/homepage\">home</NavLink>\r\n    <NavLink to=\"/charts\">charts</NavLink>\r\n    <NavLink to=\"/categories\">categories</NavLink>\r\n    <NavLink to=\"/settings\">settings</NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst HomeTable = ({ category, description, date, money }) => {\r\n\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{category}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>{description}</td>\r\n\t\t\t\t<td>{date}</td>\r\n\t\t\t\t<td>{money}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<button>:</button>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default HomeTable;\r\n","import React from \"react\";\r\nimport HomeTable from \"./HomeTable\";\r\n\r\nconst Charges = ({ props }) => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Category</td>\r\n\t\t\t\t\t\t<td>Description</td>\r\n\t\t\t\t\t\t<td>Date</td>\r\n\t\t\t\t\t\t<td>Money</td>\r\n\t\t\t\t\t\t<td>Action</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{[\r\n\t\t\t\t\t\t...props.map((el, i) => (\r\n\t\t\t\t\t\t\t\t<HomeTable\r\n\t\t\t\t\t\t\t\t\t\tname={el.category}\r\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\r\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\r\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)),\r\n\t\t\t\t\t]}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Charges;","import React from \"react\";\r\nimport HomeTable from \"./HomeTable\"\r\n\r\nconst Incomes = ({ props }) => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Category</td>\r\n\t\t\t\t\t\t<td>Description</td>\r\n\t\t\t\t\t\t<td>Date</td>\r\n\t\t\t\t\t\t<td>Money</td>\r\n\t\t\t\t\t\t<td>Action</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{[\r\n\t\t\t\t\t\t...props.map((el, i) => (\r\n\t\t\t\t\t\t\t\t<HomeTable\r\n\t\t\t\t\t\t\t\t\t\tname={el.category}\r\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\r\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\r\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\r\n\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)),\r\n\t\t\t\t\t]}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Incomes;","import React from 'react';\r\nimport { HashRouter, NavLink, Route } from 'react-router-dom';\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\n\r\n// in props you have two arrays of objects:\r\n\r\n// props.incomes = [{category, description, date, money}, {-||-} ... {-||-}]\r\n// props.charges = [{category, description, date, money}, {-||-} ... {-||-}]\r\n//\r\n//\r\n//\r\n// for charge CRUD use the following:\r\n//\r\n// props.createIncome({newIncome})\r\n// props.updateIncome(index, {updatedIncome})\r\n// props.deleteIncome(index)\r\n//\r\n//\r\n// for income CRUD use the following:\r\n//\r\n// props.createCharge({newCharge})\r\n// props.updateCharge(index, {updatedCharge})\r\n// props.deleteCharge(index)\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <h2>HOMEPAGE</h2>\r\n          </div>\r\n          <div>\r\n            <h2>Balance</h2>\r\n            <h1>$2,652.07</h1>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <NavLink to=\"/homepage/charges\">Charges</NavLink>\r\n            <NavLink to=\"/homepage/incomes\">Incomes</NavLink>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              {/*<h4>{props.title}</h4>*/}\r\n              <h4>Charges</h4>\r\n              {/*<HomeSelect />*/}\r\n            </div>\r\n            <button>Add more</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Route path=\"/homepage/charges\" render={() => <Charges props={props.charges} />} />\r\n          <Route path=\"/homepage/incomes\" render={() => <Incomes props={props.incomes} />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from './HomePage';\r\nimport { connect } from 'react-redux';\r\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\r\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createIncome: (income) => {\r\n      dispatch(createIncomeAC(income));\r\n    },\r\n    updateIncome: (index, income) => {\r\n      dispatch(updateIncomeAC(index, income));\r\n    },\r\n    deleteIncome: (index) => {\r\n      dispatch(deleteIncomeAC(index));\r\n    },\r\n    createCharge: (charge) => {\r\n      dispatch(createChargeAC(charge));\r\n    },\r\n    updateCharge: (index, charge) => {\r\n      dispatch(updateChargeAC(index, charge));\r\n    },\r\n    deleteCharge: (index) => {\r\n      dispatch(deleteChargeAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from 'react';\r\n\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport './Charts.css';\r\n\r\n// in props you have four arrays of objects:\r\n\r\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\r\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\r\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\r\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\r\n\r\nconst divStyle = {\r\n    width: '99%',\r\n    height: '400px'\r\n};\r\n\r\nconst startData = (canvas) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(0,0,0,400);\r\n    gradient.addColorStop(0, 'rgb(205,221,249)');\r\n    gradient.addColorStop(1, 'rgb(255,255,255)');\r\n\r\n    return {\r\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\r\n        datasets: [\r\n            {\r\n                lineTension: 0.5,\r\n                backgroundColor: gradient,\r\n                borderColor: 'rgb(93,143,238)',\r\n                borderWidth: 4,\r\n                pointBackgroundColor: 'rgba(0,0,0,0)',\r\n                pointBorderColor: 'rgba(0,0,0,0)',\r\n                data: [12, 11, 13, 9, 11, 12, 9]\r\n            },\r\n            {\r\n                lineTension: 0.5,\r\n                backgroundColor: 'rgb(222,232,251)',\r\n                borderColor: 'rgb(222,232,251)',\r\n                borderWidth: 4,\r\n                borderDash: [15, 5],\r\n                pointBackgroundColor: 'rgba(0,0,0,0)',\r\n                pointBorderColor: 'rgba(0,0,0,0)',\r\n                data: [12, 14, 11, 9, 13, 12, 10],\r\n                fill: false\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nclass Charts extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"line-chart\" style={divStyle}>\r\n                <Line\r\n                    data={startData}\r\n                    options = {{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Summary',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: false\r\n                        },\r\n                        scales: {\r\n                            yAxes: [{\r\n                                display: false,\r\n                                ticks: {\r\n                                    suggestedMin: 5,\r\n                                    suggestedMax: 15\r\n                                },\r\n                                gridLines: {\r\n                                    display: false,\r\n                                }\r\n                            }],\r\n                            xAxes: [{\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                            }]\r\n                        },\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const Charts = (props) => {\r\n//   return (\r\n//     <>\r\n//         <div>CHARTS</div>\r\n//         <div className=\"summary-line\">\r\n//\r\n//         </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport default Charts;\r\n","import Charts from './Charts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles({\r\n  dialogWindow: {\r\n    minWidth: \"350px\",\r\n  },\r\n});\r\n\r\nconst AddCategory = ({ open, handleClose, createChargeCategory }) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10\r\n        ? `0${today.getMonth() + 1}`\r\n        : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [icon, setCurrency] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-category-title\"\r\n        aria-describedby=\"add-category-description\"\r\n      >\r\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\r\n        <DialogContent className={classes.dialogWindow}>\r\n          <div>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Category name\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"select-category-icon\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Select category icon\"\r\n              value={icon}\r\n              onChange={handleChange}\r\n              //   helperText=\"Select category icon\"\r\n              fullWidth\r\n            >\r\n              {/* {icons.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))} */}\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Current date\"\r\n              type=\"date\"\r\n              defaultValue={values.currentDate}\r\n              fullWidth\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles({\r\n  categoryNameBlock: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  categoryIcon: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    color: \"grey\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n});\r\n\r\nconst Category = ({ name, description, date, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    console.log(e.target.closest(\"table\"));\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    console.log(e.currentTarget);\r\n    if (e.target.innerText === \"Delete\") {\r\n      console.log(e.target.parentNode.parentNode.parentNode);\r\n      // console.log(ReactDOM.findDOMNode(this))\r\n    }\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      <TableCell>{date}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"category-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          size=\"small\"\r\n        >\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"category-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCategory from \"./AddCategory\";\r\nimport Category from \"./Category\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { AccountBalance, AccountBalanceWallet, AllInbox } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"lightcyan\",\r\n  },\r\n  addButton: {\r\n    float: \"right\",\r\n  },\r\n});\r\n\r\nconst Charges = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.addButton}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add more\r\n      </Button>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        createChargeCategory={props.createChargeCategory}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.chargeCategories.map((el, i) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date.toString()}\r\n                  icon={el.icon}\r\n                  //icon={Object.values(props.icons)[el.icon]}\r\n                  key={el.name}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import React from 'react';\r\n\r\nimport Category from './Category';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'lightcyan',\r\n  },\r\n  addButton: {\r\n    float: 'right',\r\n  },\r\n});\r\n\r\nconst Incomes = ({ props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.addButton}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}>\r\n        Add more\r\n      </Button>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.incomeCategories.map((el, i) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date.toString()}\r\n                  icon={el.icon}\r\n                  //icon={Object.values(props.icons)[el.icon]}\r\n                  key={el.name}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//\r\n// У такому форматi redux очiкуе отримувати категорii. Дата може буди як датою, так i стрiнгою:\r\n// { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: props.icons[0] },\r\n//\r\n//\r\n// for charge CRUD use the following:\r\n//\r\n// props.createChargeCategory({newCategory})\r\n// props.updateChargeCategory(index, {updatedCategory});\r\n// props.deleteChargeCategory(index);\r\n//\r\n//\r\n//\r\n// for income CRUD use the following:\r\n//\r\n// props.createIncomeCategory({newCategory})\r\n// props.updateIncomeCategory(index, {updatedCategory})\r\n// props.deleteIncomeCategory(index)\r\n\r\nconst useStyles = makeStyles({\r\n  Categories: {\r\n    padding: '20px',\r\n  },\r\n  sectionToggle: {\r\n    float: 'left',\r\n    marginBottom: '20px',\r\n  },\r\n  toggleButton: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    letterSpacing: '1px',\r\n  },\r\n  toggleButtonActive: {\r\n    borderBottom: '1px solid cornflowerblue',\r\n  },\r\n  headerBlock: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '100px',\r\n  },\r\n  balanceTitle: {\r\n    textAlign: 'right',\r\n    fontSize: '1.2em',\r\n    marginBottom: '10px',\r\n  },\r\n  balanceAmount: {\r\n    fontSize: '1.7em',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nconst Categories = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.Categories}>\r\n        <div className={classes.headerBlock}>\r\n          <div>\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className={classes.balanceBlock}>\r\n            <div className={classes.balanceTitle}>Balance</div>\r\n            <div className={classes.balanceAmount}>$2,652.07</div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/categories/\">\r\n            <Redirect to=\"/categories/charges\" />\r\n          </Route>\r\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\r\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import Categories from './Categories';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  createIncomeCategoryAC,\r\n  updateIncomeCategoryAC,\r\n  deleteIncomeCategoryAC,\r\n} from '../../redux/incomeCategoriesReducer';\r\nimport {\r\n  createChargeCategoryAC,\r\n  updateChargeCategoryAC,\r\n  deleteChargeCategoryAC,\r\n} from '../../redux/chargeCategoriesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createIncomeCategory: (category) => {\r\n      dispatch(createIncomeCategoryAC(category));\r\n    },\r\n    updateIncomeCategory: (index, category) => {\r\n      dispatch(updateIncomeCategoryAC(index, category));\r\n    },\r\n    deleteIncomeCategory: (index) => {\r\n      dispatch(deleteIncomeCategoryAC(index));\r\n    },\r\n    createChargeCategory: (category) => {\r\n      dispatch(createChargeCategoryAC(category));\r\n    },\r\n    updateChargeCategory: (index, category) => {\r\n      dispatch(updateChargeCategoryAC(index, category));\r\n    },\r\n    deleteChargeCategory: (index) => {\r\n      dispatch(deleteChargeCategoryAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n  return (\r\n    <div>\r\n      <div>{props.userName}</div>\r\n      <div>{props.phoneNumber}</div>\r\n      <div>{props.limit}</div>\r\n      <div>{props.showWarning ? 'warn' : 'not to warn'}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import Settings from './Settings';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserNameAC } from '../../redux/settingsReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    ...state.settings,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserName: (newUserName) => {\r\n      dispatch(updateUserNameAC(newUserName));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport HomePage from './components/HomePage/HomePageContainer';\r\nimport Charts from './components/Charts/ChartsContainer';\r\nimport Categories from './components/Categories/CategoriesContainer';\r\nimport Settings from './components/Settings/SettingsContainer';\r\n\r\n// delete this component\r\nimport Temp from './components/TemporaryComponent/TempContainer';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <div className=\"mainContent\">\r\n              <Route path=\"/homepage\" render={() => <HomePage />} />\r\n              <Route path=\"/charts\" render={() => <Charts />} />\r\n              <Route path=\"/categories\" render={() => <Categories />} />\r\n              <Route path=\"/settings\" render={() => <Settings />} />\r\n              {/* <Route path=\"/temp\" render={() => <Temp />} /> */}\r\n            </div>\r\n          </div>\r\n        </Provider>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { Temp } from './Temp';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Temp);\r\n","import React from 'react';\r\n\r\nexport const Temp = (props) => {\r\n  return (\r\n    <div>\r\n      {Object.values(props.icons)}\r\n      {props.icons[0]}\r\n      <div>123</div>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}