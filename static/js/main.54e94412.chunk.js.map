{"version":3,"sources":["redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/settingsReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/HomeTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","App.js","components/TemporaryComponent/TempContainer.jsx","components/TemporaryComponent/Temp.jsx","serviceWorker.js","index.js"],"names":["icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","initialState","name","description","date","Date","icon","incomeCategoriesReducer","state","action","type","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","avatar","userName","phoneNumber","showWarning","limit","settingsReducer","newUserName","newPhoneNumber","newLimit","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","NavBar","to","HomeTable","Charges","props","map","el","i","key","Incomes","HomePage","path","render","connect","dispatch","createIncome","createIncomeAC","updateIncome","updateIncomeAC","deleteIncome","deleteIncomeAC","createCharge","createChargeAC","updateCharge","updateChargeAC","deleteCharge","deleteChargeAC","divStyle","width","height","startData","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","lineTension","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","Charts","className","style","options","title","display","text","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","React","Component","useStyles","makeStyles","dialogWindow","minWidth","iconSelect","color","pickersBlock","iconPicker","AddCategory","open","handleClose","createCategory","classes","today","values","currentDate","getFullYear","getMonth","getDate","useState","setName","setDescription","setDate","setIcon","handleCloseDialog","e","console","log","target","innerText","handleChange","event","id","value","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","onChange","select","MenuItem","datePicker","DialogActions","Button","onClick","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","Category","anchorEl","setAnchorEl","currentTarget","parentNode","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","closest","size","Menu","keepMounted","Boolean","table","tableHead","addButtonWrapper","justifyContent","paddingBottom","setOpen","variant","startIcon","createChargeCategory","TableContainer","Paper","Table","TableHead","TableBody","toString","createIncomeCategory","Categories","padding","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","headerBlock","balanceTitle","textAlign","balanceAmount","fontWeight","balanceBlock","activeClassName","exact","createIncomeCategoryAC","updateIncomeCategory","updateIncomeCategoryAC","deleteIncomeCategory","deleteIncomeCategoryAC","createChargeCategoryAC","updateChargeCategory","updateChargeCategoryAC","deleteChargeCategory","deleteChargeCategoryAC","Settings","updateUserName","updateUserNameAC","App","Object","Navbar","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.54e94412.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { icons } from './iconsReducer';\n\nconst CREATE_CATEGORY = 'CREATE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype incomeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [\n  {\n    name: 'My mom',\n    description: 'Money from my mom',\n    date: new Date(2020, 7, 25),\n    icon: icons[15],\n  },\n  {\n    name: 'Sale book',\n    description: 'Sold a book',\n    date: new Date(2020, 7, 24),\n    icon: icons[13],\n  },\n  { name: 'Work', description: '', date: new Date(2020, 7, 23), icon: icons[19] },\n  {\n    name: 'Donations',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 22),\n    icon: icons[15],\n  },\n];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default incomeCategoriesReducer;\n","import { icons } from './iconsReducer';\n\nconst SET_CATEGORY = 'SET_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype chargeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    name: 'Food',\n    description: 'For food',\n    date: new Date(2020, 7, 26),\n    icon: icons[12],\n  },\n  {\n    name: 'Clothes',\n    description: 'For clothes',\n    date: new Date(2020, 7, 25),\n    icon: icons[7],\n  },\n  { name: 'Restoraunts', description: '', date: new Date(2020, 7, 24), icon: icons[8] },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    icon: icons[2],\n  },\n  { name: 'Pets', description: 'For smth else', date: new Date(2020, 7, 21), icon: icons[14] },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeCategoryAC = (\n  category: chargeCategoryType,\n): createChargeCategoryACType => ({\n  type: SET_CATEGORY,\n  category,\n});\n\nexport const updateChargeCategoryAC = (\n  index: number,\n  category: chargeCategoryType,\n): updateChargeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  index,\n  category,\n});\n\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default chargeCategoriesReducer;\n","const CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: '22/08/20', money: 300 },\n  { category: 1, description: 'For clothes', date: '23/08/20', money: 500 },\n  { category: 2, description: '', date: '24/08/20', money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    money: 390,\n  },\n  { category: 4, description: '', date: '26/08/20', money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport default chargesReducer;\n","const CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: '22/08/20', money: 500 },\n  { category: 1, description: 'For selling a book', date: '23/08/20', money: 700 },\n  { category: 2, description: '', date: '24/08/20', money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: '26/08/20', money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport default incomesReducer;\n","const UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  limit: number;\n};\n\ntype updateUserNameACType = {\n  type: typeof UPDATE_USER_NAME;\n  newUserName: string;\n};\n\ntype updatePhoneNumberACType = {\n  type: typeof UPDATE_PHONE_NUMBER;\n  newPhoneNumber: any;\n};\n\ntype toggleWarningACType = {\n  type: typeof TOGGLE_WARNING;\n  showWarning: boolean;\n};\n\ntype setLimitACType = {\n  type: typeof SET_LIMIT;\n  newLimit: number;\n};\n\ntype actionType =\n  | updateUserNameACType\n  | updatePhoneNumberACType\n  | toggleWarningACType\n  | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: null,\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  limit: 5000,\n};\n\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER_NAME:\n      return { ...state, userName: action.newUserName };\n    case UPDATE_PHONE_NUMBER:\n      return { ...state, phoneNumber: action.newPhoneNumber };\n    case TOGGLE_WARNING:\n      return { ...state, showWarning: action.showWarning };\n    case SET_LIMIT:\n      return { ...state, limit: action.newLimit };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserNameAC = (newUserName: string): updateUserNameACType => ({\n  type: UPDATE_USER_NAME,\n  newUserName,\n});\n\nexport const updatePhoneNumberAC = (newPhoneNumber: any): updatePhoneNumberACType => ({\n  type: UPDATE_PHONE_NUMBER,\n  newPhoneNumber,\n});\n\nexport const toggleWarningAC = (showWarning = !initialState.showWarning): toggleWarningACType => ({\n  type: TOGGLE_WARNING,\n  showWarning,\n});\n\nexport const setLimitACType = (newLimit: number): setLimitACType => ({\n  type: SET_LIMIT,\n  newLimit,\n});\n\nexport default settingsReducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <div>LOGO</div>\n    {/* logo */}\n    {/* navigation */}\n    <NavLink to=\"/homepage\">home</NavLink>\n    <NavLink to=\"/charts\">charts</NavLink>\n    <NavLink to=\"/categories\">categories</NavLink>\n    <NavLink to=\"/settings\">settings</NavLink>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\n\nconst HomeTable = ({ category, description, date, money }) => {\n\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{category}\n\t\t\t\t</td>\n\t\t\t\t<td>{description}</td>\n\t\t\t\t<td>{date}</td>\n\t\t\t\t<td>{money}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button>:</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t);\n};\n\nexport default HomeTable;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\n\nconst Charges = ({ props }) => {\n\treturn (\n\t\t\t<div>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Category</td>\n\t\t\t\t\t\t<td>Description</td>\n\t\t\t\t\t\t<td>Date</td>\n\t\t\t\t\t\t<td>Money</td>\n\t\t\t\t\t\t<td>Action</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{[\n\t\t\t\t\t\t...props.map((el, i) => (\n\t\t\t\t\t\t\t\t<HomeTable\n\t\t\t\t\t\t\t\t\t\tname={el.category}\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)),\n\t\t\t\t\t]}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t);\n};\n\nexport default Charges;","import React from \"react\";\nimport HomeTable from \"./HomeTable\"\n\nconst Incomes = ({ props }) => {\n\treturn (\n\t\t\t<div>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Category</td>\n\t\t\t\t\t\t<td>Description</td>\n\t\t\t\t\t\t<td>Date</td>\n\t\t\t\t\t\t<td>Money</td>\n\t\t\t\t\t\t<td>Action</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{[\n\t\t\t\t\t\t...props.map((el, i) => (\n\t\t\t\t\t\t\t\t<HomeTable\n\t\t\t\t\t\t\t\t\t\tname={el.category}\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)),\n\t\t\t\t\t]}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t);\n};\n\nexport default Incomes;","import React from 'react';\nimport { HashRouter, NavLink, Route } from 'react-router-dom';\nimport Charges from './Charges';\nimport Incomes from './Incomes';\n\n// in props you have two arrays of objects:\n\n// props.incomes = [{category, description, date, money}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, money}, {-||-} ... {-||-}]\n//\n//\n//\n// for charge CRUD use the following:\n//\n// props.createIncome({newIncome})\n// props.updateIncome(index, {updatedIncome})\n// props.deleteIncome(index)\n//\n//\n// for income CRUD use the following:\n//\n// props.createCharge({newCharge})\n// props.updateCharge(index, {updatedCharge})\n// props.deleteCharge(index)\n\nconst HomePage = (props) => {\n  return (\n    <HashRouter>\n      <div>\n        <div>\n          <div>\n            <h2>HOMEPAGE</h2>\n          </div>\n          <div>\n            <h2>Balance</h2>\n            <h1>$2,652.07</h1>\n          </div>\n        </div>\n        <div>\n          <div>\n            <NavLink to=\"/homepage/charges\">Charges</NavLink>\n            <NavLink to=\"/homepage/incomes\">Incomes</NavLink>\n          </div>\n          <div>\n            <div>\n              {/*<h4>{props.title}</h4>*/}\n              <h4>Charges</h4>\n              {/*<HomeSelect />*/}\n            </div>\n            <button>Add more</button>\n          </div>\n        </div>\n        <div>\n          <Route path=\"/homepage/charges\" render={() => <Charges props={props.charges} />} />\n          <Route path=\"/homepage/incomes\" render={() => <Incomes props={props.incomes} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\nimport {Line} from 'react-chartjs-2';\n\nimport './Charts.css';\n\n// in props you have four arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n\nconst divStyle = {\n    width: '99%',\n    height: '400px'\n};\n\nconst startData = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0,0,0,400);\n    gradient.addColorStop(0, 'rgb(205,221,249)');\n    gradient.addColorStop(1, 'rgb(255,255,255)');\n\n    return {\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        datasets: [\n            {\n                lineTension: 0.5,\n                backgroundColor: gradient,\n                borderColor: 'rgb(93,143,238)',\n                borderWidth: 4,\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 11, 13, 9, 11, 12, 9]\n            },\n            {\n                lineTension: 0.5,\n                backgroundColor: 'rgb(222,232,251)',\n                borderColor: 'rgb(222,232,251)',\n                borderWidth: 4,\n                borderDash: [15, 5],\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 14, 11, 9, 13, 12, 10],\n                fill: false\n            }\n        ]\n    }\n}\n\nclass Charts extends React.Component {\n    render() {\n        return (\n            <div className=\"line-chart\" style={divStyle}>\n                <Line\n                    data={startData}\n                    options = {{\n                        title: {\n                            display: true,\n                            text: 'Summary',\n                            fontSize: 20\n                        },\n                        legend: {\n                            display: false\n                        },\n                        scales: {\n                            yAxes: [{\n                                display: false,\n                                ticks: {\n                                    suggestedMin: 5,\n                                    suggestedMax: 15\n                                },\n                                gridLines: {\n                                    display: false,\n                                }\n                            }],\n                            xAxes: [{\n                                gridLines: {\n                                    display: false\n                                }\n                            }]\n                        },\n                        maintainAspectRatio: false\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\n// const Charts = (props) => {\n//   return (\n//     <>\n//         <div>CHARTS</div>\n//         <div className=\"summary-line\">\n//\n//         </div>\n//     </>\n//   );\n// };\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  pickersBlock: {},\n  iconPicker: {\n    color: \"grey\",\n  },\n});\n\nconst AddCategory = ({ open, handleClose, createCategory, icons }) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState(values.currentDate);\n  const [icon, setIcon] = useState(\"\");\n\n  const handleCloseDialog = (e) => {\n    console.log(e.target);\n    if (e.target.innerText === \"ADD\") {\n      if(name && icon){\n        createCategory({name: name, description: description, date: date, icon: icons[icon]})\n        handleClose();\n      }\n      console.log(\"added\");\n    } else if (e.target.innerText === \"CANCEL\") {\n      setName(\"\");\n      setDescription(\"\");\n      setDate(values.currentDate);\n      setIcon(\"\");\n      console.log(\"canceled\");\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (typeof event.target.value === \"number\") {\n      setIcon(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from \"react\";\n\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  TableCell,\n  TableRow,\n} from \"@material-ui/core/\";\n\nconst useStyles = makeStyles({\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});\n\nconst Category = ({ name, description, date, icon }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest(\"table\"));\n  };\n\n  const handleClose = (e) => {\n    console.log(e.currentTarget);\n    if (e.target.innerText === \"Delete\") {\n      console.log(e.target.parentNode.parentNode.parentNode);\n      // console.log(ReactDOM.findDOMNode(this))\n    }\n\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{date}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}>Edit</MenuItem>\n          <MenuItem onClick={handleClose}>Delete</MenuItem>\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n});\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        createCategory={props.createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  //icon={Object.values(props.icons)[el.icon]}\n                  key={el.name}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        createCategory={props.createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  //icon={Object.values(props.icons)[el.icon]}\n                  key={el.name}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// У такому форматi redux очiкуе отримувати категорii. Дата може буди як датою, так i стрiнгою:\n// { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: props.icons[0] },\n//\n//\n// for charge CRUD use the following:\n//\n// props.createChargeCategory({newCategory})\n// props.updateChargeCategory(index, {updatedCategory});\n// props.deleteChargeCategory(index);\n//\n//\n//\n// for income CRUD use the following:\n//\n// props.createIncomeCategory({newCategory})\n// props.updateIncomeCategory(index, {updatedCategory})\n// props.deleteIncomeCategory(index)\n\nconst useStyles = makeStyles({\n  Categories: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    // float: 'left',\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  headerBlock: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '100px',\n  },\n  balanceTitle: {\n    textAlign: 'right',\n    fontSize: '1.2em',\n    marginBottom: '10px',\n  },\n  balanceAmount: {\n    fontSize: '1.7em',\n    fontWeight: 'bold',\n  },\n});\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div>\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport {\n  createIncomeCategoryAC,\n  updateIncomeCategoryAC,\n  deleteIncomeCategoryAC,\n} from '../../redux/incomeCategoriesReducer';\nimport {\n  createChargeCategoryAC,\n  updateChargeCategoryAC,\n  deleteChargeCategoryAC,\n} from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncomeCategory: (category) => {\n      dispatch(createIncomeCategoryAC(category));\n    },\n    updateIncomeCategory: (index, category) => {\n      dispatch(updateIncomeCategoryAC(index, category));\n    },\n    deleteIncomeCategory: (index) => {\n      dispatch(deleteIncomeCategoryAC(index));\n    },\n    createChargeCategory: (category) => {\n      dispatch(createChargeCategoryAC(category));\n    },\n    updateChargeCategory: (index, category) => {\n      dispatch(updateChargeCategoryAC(index, category));\n    },\n    deleteChargeCategory: (index) => {\n      dispatch(deleteChargeCategoryAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\n\nconst Settings = (props) => {\n  return (\n    <div>\n      <div>{props.userName}</div>\n      <div>{props.phoneNumber}</div>\n      <div>{props.limit}</div>\n      <div>{props.showWarning ? 'warn' : 'not to warn'}</div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\nimport { updateUserNameAC } from '../../redux/settingsReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserName: (newUserName) => {\n      dispatch(updateUserNameAC(newUserName));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\n// delete this component\nimport Temp from './components/TemporaryComponent/TempContainer';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"mainContent\">\n              <Route path=\"/homepage\" render={() => <HomePage />} />\n              <Route path=\"/charts\" render={() => <Charts />} />\n              <Route path=\"/categories\" render={() => <Categories />} />\n              <Route path=\"/settings\" render={() => <Settings />} />\n              {/* <Route path=\"/temp\" render={() => <Temp />} /> */}\n            </div>\n          </div>\n        </Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import { Temp } from './Temp';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Temp);\n","import React from 'react';\n\nexport const Temp = (props) => {\n  return (\n    <div>\n      {Object.values(props.icons)}\n      {props.icons[0]}\n      <div>123</div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}