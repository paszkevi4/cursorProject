{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profile.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","name","description","date","Date","parse","icon","incomeCategoriesReducer","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","useStyles","makeStyles","dialogWindow","minWidth","nameSelect","color","namePicker","modal","display","alignItems","justifyContent","padding","AddCharges","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","classes","today","values","getFullYear","getMonth","getDate","useState","setName","setCategory","setDescription","setDate","setMoney","resetInputs","handleCloseDialog","e","target","innerText","handleChange","event","value","id","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","margin","label","selected","onChange","fullWidth","map","el","i","MenuItem","key","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","categoryBlock","categoryName","HomeTable","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","categoryIcon","toLocaleDateString","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","theme","table","tableHead","backgroundColor","addButton","paper","palette","background","border","boxShadow","shadows","spacing","homeSelect","homeMenu","height","homeMenuTitle","marginRight","Charges","props","filtered","setFiltered","categories","getClassNamesFor","undefined","selectVal","milliseconds","time","setTime","getTime","filter","arr","handlePeriodChange","defaultValue","variant","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","fontWeight","Incomes","createIncome","updateIncome","Header","setIncomes","setCharges","total","setTotal","toWarn","setToWarn","useEffect","reduce","prev","curr","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","connect","dispatch","home","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","HomePage","exact","path","render","deleteCharge","deleteIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","push","now","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","find","elOut","maxSum","max","minSum","min","startDataBar","labels","datasets","hoverBackgroundColor","borderColor","borderWidth","barPercentage","data","startDataDoughnut","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","hoverBorderColor","pointBackgroundColor","pointBorderColor","borderDash","fill","options","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","defaultChecked","htmlFor","fontColor","iconSelect","iconPicker","AddCategory","createCategory","updateCategory","setIcon","pickersBlock","categoryNameBlock","Category","deleteCategory","seconds","setCurrentCategory","addButtonWrapper","paddingBottom","createChargeCategory","deleteChargeCategory","updateChargeCategory","createIncomeCategory","deleteIncomeCategory","updateIncomeCategory","Categories","collection","onSnapshot","ss","docs","fetchChargeCategories","fetchChargeCategoriesAC","createIncomeCategoryAC","updateIncomeCategoryAC","deleteIncomeCategoryAC","fetchIncomeCategories","fetchIncomeCategoriesAC","createChargeCategoryAC","updateChargeCategoryAC","deleteChargeCategoryAC","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","inputStyle","country","FormControlLabel","control","Switch","checked","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","doc","set","catch","error","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","Alert","marginTop","severity","AppContainer","setSettingsThunk","MainAppContainer","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5682efba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\r\n  authDomain: 'money-tr4cker.firebaseapp.com',\r\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\r\n  projectId: 'money-tr4cker',\r\n  storageBucket: 'money-tr4cker.appspot.com',\r\n  messagingSenderId: '166713825950',\r\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\r\n  measurementId: 'G-CN13J7CNRP',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import { db } from './firebase/firebase';\r\n\r\nconst UPDATE_USER = 'UPDATE_USER';\r\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\r\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\r\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\r\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\r\n\r\ntype stateType = {\r\n  avatar: any;\r\n  userName: string | null;\r\n  phoneNumber: any;\r\n  showWarning: boolean;\r\n  moneyLimit: number;\r\n  percentLimit?: number;\r\n};\r\n\r\ntype updateUserACType = {\r\n  type: typeof UPDATE_USER;\r\n  newUser: stateType;\r\n};\r\n\r\ntype updateUserNameACType = {\r\n  type: typeof UPDATE_USER_NAME;\r\n  newUserName: string;\r\n};\r\n\r\ntype updatePhoneNumberACType = {\r\n  type: typeof UPDATE_PHONE_NUMBER;\r\n  newPhoneNumber: any;\r\n};\r\n\r\ntype toggleWarningACType = {\r\n  type: typeof TOGGLE_WARNING;\r\n  showWarning: boolean;\r\n};\r\n\r\ntype setLimitACType = {\r\n  type: typeof SET_MONEY_LIMIT;\r\n  newLimit: number;\r\n};\r\n\r\ntype actionType =\r\n  | updateUserACType\r\n  | updateUserNameACType\r\n  | updatePhoneNumberACType\r\n  | toggleWarningACType\r\n  | setLimitACType;\r\n\r\nconst initialState: stateType = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\r\n  userName: 'Ivan',\r\n  phoneNumber: '+380991234567',\r\n  showWarning: true,\r\n  moneyLimit: 800,\r\n  percentLimit: 40,\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return { ...action.newUser };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\r\n  type: UPDATE_USER,\r\n  newUser,\r\n});\r\n\r\nexport const setSettingsThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('user-info').onSnapshot((ss: any) => {\r\n      dispatch(updateUserAC(ss.docs[0].data()));\r\n    });\r\n  };\r\n};\r\n\r\nexport default settingsReducer;\r\n","import React from 'react';\r\nimport {\r\n  AccountBalance,\r\n  AccountBalanceWallet,\r\n  AllInbox,\r\n  ChildFriendly,\r\n  Cake,\r\n  DirectionsBike,\r\n  DriveEta,\r\n  EmojiSymbols,\r\n  Fastfood,\r\n  Favorite,\r\n  FitnessCenter,\r\n  Kitchen,\r\n  LocalDining,\r\n  MenuBook,\r\n  Pets,\r\n  PlayForWork,\r\n  School,\r\n  ShoppingCart,\r\n  Waves,\r\n  WorkOutline,\r\n} from '@material-ui/icons';\r\n\r\nexport const icons = [\r\n  <AccountBalance />,\r\n  <AccountBalanceWallet />,\r\n  <AllInbox />,\r\n  <ChildFriendly />,\r\n  <Cake />,\r\n  <DirectionsBike />,\r\n  <DriveEta />,\r\n  <EmojiSymbols />,\r\n  <Fastfood />,\r\n  <Favorite />,\r\n  <FitnessCenter />,\r\n  <Kitchen />,\r\n  <LocalDining />,\r\n  <MenuBook />,\r\n  <Pets />,\r\n  <PlayForWork />,\r\n  <School />,\r\n  <ShoppingCart />,\r\n  <Waves />,\r\n  <WorkOutline />,\r\n];\r\n\r\nexport default (state = icons, _) => state;\r\n","import { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\r\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\r\n\r\ntype incomeCategoryType = {\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  category: incomeCategoryType;\r\n};\r\n\r\ntype createIncomeCategoryACType = {\r\n  type: typeof CREATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n};\r\n\r\ntype updateIncomeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createIncomeCategoryACType\r\n  | updateIncomeCategoryACType\r\n  | deleteIncomeCategoryACType;\r\n\r\nlet initialState: Array<incomeCategoryType> = [\r\n  {\r\n    name: 'My mom',\r\n    description: 'Money from my mom',\r\n    date: Date.parse('2020-7-25'),\r\n    icon: icons[15],\r\n  },\r\n  {\r\n    name: 'Sale book',\r\n    description: 'Sold a book',\r\n    date: Date.parse('2020-7-24'),\r\n    icon: icons[13],\r\n  },\r\n  { name: 'Work', description: '', date: Date.parse('2020-7-23'), icon: icons[19] },\r\n];\r\n\r\nconst incomeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<incomeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      //@ts-ignore\r\n      return [...state, { ...action.category, icon: icons[action.category.icon] }];\r\n    case CREATE_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchIncomeCategoriesAC = (category: incomeCategoryType): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  category,\r\n});\r\n\r\nexport const createIncomeCategoryAC = (\r\n  category: incomeCategoryType,\r\n): createIncomeCategoryACType => ({\r\n  type: CREATE_CATEGORY,\r\n  category,\r\n});\r\n\r\nexport const updateIncomeCategoryAC = (\r\n  index: number,\r\n  category: incomeCategoryType,\r\n): updateIncomeCategoryACType => ({\r\n  type: UPDATE_CATEGORY,\r\n  category,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\r\n  type: DELETE_CATEGORY,\r\n  index,\r\n});\r\n\r\nexport default incomeCategoriesReducer;\r\n","import { db } from './firebase/firebase';\r\nimport { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\r\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\r\n\r\ntype chargeCategoryType = {\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  category: chargeCategoryType;\r\n};\r\n\r\ntype createChargeCategoryACType = {\r\n  type: typeof SET_CATEGORY;\r\n  category: chargeCategoryType;\r\n};\r\n\r\ntype updateChargeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: chargeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createChargeCategoryACType\r\n  | updateChargeCategoryACType\r\n  | deleteChargeCategoryACType;\r\n\r\nlet initialState: Array<chargeCategoryType> = [\r\n  {\r\n    name: 'Food',\r\n    description: 'For food',\r\n    date: Date.parse('2020-7-26'),\r\n    icon: icons[12],\r\n  },\r\n  {\r\n    name: 'Clothes',\r\n    description: 'For clothes',\r\n    date: Date.parse('2020-7-25'),\r\n    icon: icons[7],\r\n  },\r\n  { name: 'Restoraunts', description: '', date: Date.parse('2020-7-24'), icon: icons[8] },\r\n  {\r\n    name: 'Utility bills',\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: Date.parse('2020-7-23'),\r\n    icon: icons[2],\r\n  },\r\n  { name: 'Pets', description: 'For smth else', date: Date.parse('2020-7-21'), icon: icons[14] },\r\n];\r\n\r\nconst chargeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<chargeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      //@ts-ignore\r\n      return [...state, { ...action.category, icon: icons[action.category.icon] }];\r\n    case SET_CATEGORY:\r\n      //@ts-ignore\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchChargeCategoriesAC = (category: chargeCategoryType): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  category,\r\n});\r\n\r\nexport const createChargeCategoryAC = (\r\n  category: chargeCategoryType,\r\n): createChargeCategoryACType => ({\r\n  type: SET_CATEGORY,\r\n  category,\r\n});\r\n\r\nexport const updateChargeCategoryAC = (\r\n  index: number,\r\n  category: chargeCategoryType,\r\n): updateChargeCategoryACType => ({\r\n  type: UPDATE_CATEGORY,\r\n  index,\r\n  category,\r\n});\r\n\r\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\r\n  type: DELETE_CATEGORY,\r\n  index,\r\n});\r\n\r\nexport default chargeCategoriesReducer;\r\n","const CREATE_CHARGE = 'CREATE_CHARGE';\r\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\r\nconst DELETE_CHARGE = 'DELETE_CHARGE';\r\n\r\ntype chargeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype createChargeACType = {\r\n  type: typeof CREATE_CHARGE;\r\n  charge: chargeType;\r\n};\r\n\r\ntype updateChargeACType = {\r\n  type: typeof UPDATE_CHARGE;\r\n  charge: chargeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeACType = {\r\n  type: typeof DELETE_CHARGE;\r\n  index: number;\r\n};\r\n\r\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\r\n\r\nlet initialState: Array<chargeType> = [\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 13),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 24),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\r\n];\r\n\r\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\r\n  switch (action.type) {\r\n    case CREATE_CHARGE:\r\n      return [...state, action.charge];\r\n    case UPDATE_CHARGE:\r\n      state.splice(action.index, 1, action.charge);\r\n      return [...state];\r\n    case DELETE_CHARGE:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\r\n  type: CREATE_CHARGE,\r\n  charge,\r\n});\r\n\r\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\r\n  type: UPDATE_CHARGE,\r\n  charge,\r\n  index,\r\n});\r\n\r\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\r\n  type: DELETE_CHARGE,\r\n  index,\r\n});\r\n\r\nexport default chargesReducer;\r\n","const CREATE_INCOME = 'SET_INCOME';\r\nconst UPDATE_INCOME = 'UPDATE_INCOME';\r\nconst DELETE_INCOME = 'DELEE_INCOME';\r\n\r\ntype incomeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype createIncomeACType = {\r\n  type: typeof CREATE_INCOME;\r\n  income: incomeType;\r\n};\r\n\r\ntype updateIncomeACType = {\r\n  type: typeof UPDATE_INCOME;\r\n  income: incomeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeACType = {\r\n  type: typeof DELETE_INCOME;\r\n  index: number;\r\n};\r\n\r\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\r\n\r\nlet initialState: Array<incomeType> = [\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 23),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 18),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\r\n];\r\n\r\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\r\n  switch (action.type) {\r\n    case CREATE_INCOME:\r\n      return [...state, action.income];\r\n    case UPDATE_INCOME:\r\n      state.splice(action.index, 1, action.income);\r\n      return [...state];\r\n    case DELETE_INCOME:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\r\n  type: CREATE_INCOME,\r\n  income,\r\n});\r\n\r\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\r\n  type: UPDATE_INCOME,\r\n  income,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\r\n  type: DELETE_INCOME,\r\n  index,\r\n});\r\n\r\nexport default incomesReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\r\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\r\nimport chargesReducer from './chargesReducer';\r\nimport incomesReducer from './incomesReducer';\r\n\r\nimport iconsReducer from './iconsReducer';\r\nimport settingsReducer from './settingsReducer';\r\n\r\nlet reducers = combineReducers({\r\n  icons: iconsReducer,\r\n  settings: settingsReducer,\r\n  incomes: incomesReducer,\r\n  charges: chargesReducer,\r\n  incomeCategories: incomeCategoriesReducer,\r\n  chargeCategories: chargeCategoriesReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n//\r\n// Styles\r\nimport './Navbar.css';\r\nimport { List } from '@material-ui/core';\r\nimport logo from '../../assets/img/logo_white.png';\r\n\r\n//\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n        <h2>Money Tracker</h2>\r\n      </div>\r\n      <List>\r\n        <NavLink to=\"/homepage\" activeClassName=\"active\">\r\n          <div className=\"link-container\">\r\n            <HomeIcon />\r\n            <p>Home</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/charts\" activeClassName=\"active\">\r\n          <div className=\"link-container\">\r\n            <ShowChartIcon />\r\n            <p>Charts</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/categories\" activeClassName=\"active\">\r\n          <div className=\"link-container\">\r\n            <CategoryIcon />\r\n            <p>Categories</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/settings\" activeClassName=\"active\">\r\n          <div className=\"link-container\">\r\n            <SettingsIcon />\r\n            <p>Settings</p>\r\n          </div>\r\n        </NavLink>\r\n      </List>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  dialogWindow: {\r\n    minWidth: \"350px\",\r\n  },\r\n  nameSelect: {\r\n    color: \"grey\",\r\n  },\r\n  namePicker: {\r\n    color: \"grey\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minWidth: \"400px\",\r\n    padding: \"50px\",\r\n  },\r\n});\r\n\r\nconst AddCharges = ({\r\n  open,\r\n  handleClose,\r\n  createCharge,\r\n  currentTable = {\r\n    currentCategory: \"\",\r\n    currentName: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    currentMoney: \"\",\r\n    currentIcon: \"\",\r\n  },\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n}) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10\r\n        ? `0${today.getMonth() + 1}`\r\n        : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n  // const values = { currentDate: today.toLocaleDateString()};\r\n\r\n  const [name, setName] = useState(`${currentTable.currentName}`);\r\n  const [category, setCategory] = useState(currentTable.currentCategory);\r\n  const [description, setDescription] = useState(currentTable.currentDescription);\r\n  const [date, setDate] = useState(\r\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\r\n  );\r\n  const [money, setMoney] = useState(currentTable.currentMoney);\r\n\r\n  const resetInputs = () => {\r\n\t\tsetName(\"\");\r\n    setCategory(\"\");\r\n    setDescription(\"\");\r\n    setDate(values.currentDate);\r\n    setMoney(\"\");\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === \"ADD\") {\r\n      // const gap = total - +money  ;\r\n      if (category >= 0 && money ) {\r\n        // if (gap <= 0) {\r\n        //   const isSure = window.confirm(\"Are you sure?\");\r\n        //   if (isSure) {\r\n            updateCharge({\r\n              name: chargeCategories[category].name,\r\n              icon: chargeCategories[category].icon,\r\n              category: category,\r\n              description: description,\r\n              date: new Date(date),\r\n              money: +money,\r\n            });\r\n            handleClose();\r\n            resetInputs();\r\n          // }\r\n          // return null;\r\n        // } else {\r\n        //   updateCharge({\r\n        //     name: chargeCategories[category].name,\r\n        //     icon: chargeCategories[category].icon,\r\n        //     category: category,\r\n        //     description: description,\r\n        //     date: new Date(date),\r\n        //     money: +money,\r\n        //   });\r\n        //   handleClose();\r\n        //   resetInputs();\r\n        // }\r\n      // }\r\n    } else if (e.target.innerText === \"CANCEL\") {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (typeof event.target.value === \"number\") {\r\n\t\t\tsetCategory(event.target.value);\r\n\t\t}else if (event.target.id === \"selectName\") {\r\n\t\t\t\tsetName(event.target.value);\r\n    } else if (event.target.id === \"descriptionInput\") {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === \"datePicker\") {\r\n      setDate(event.target.value);\r\n    } else if (event.target.id === \"moneyInput\") {\r\n      setMoney(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-charge-title\"\r\n        aria-describedby=\"add-charge-description\"\r\n      >\r\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\r\n        <DialogContent className={classes.dialogWindow}>\r\n          <div>\r\n            <TextField\r\n              id=\"selectName\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Category name (required)\"\r\n\t\t\t\t\t\t\tselected={name}\r\n              value={category}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            >\r\n              {[\r\n                ...chargeCategories.map((el, i) => (\r\n                  <MenuItem key={i} value={i} className={classes.nameSelect}>\r\n                    {el.name}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className={classes.moneyInput}\r\n              margin=\"dense\"\r\n              id=\"moneyInput\"\r\n              label=\"Current money (required)\"\r\n              input\r\n              value={money}\r\n              type=\"number\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={classes.pickerBlock}>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              // label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCharges;\r\n","import React, { useState } from \"react\";\r\n// import ReactDOM from 'react-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddCharges from \"./AddCharges\";\r\n\r\nconst useStyles = makeStyles({\r\n  categoryBlock: {\r\n    // display: 'flex',\r\n    alignItems: \"center\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n});\r\n\r\nconst HomeTable = ({\r\n  icon,\r\n  name,\r\n  description,\r\n  date,\r\n  money,\r\n  deleteMoney,\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n  avatar,\r\n  category\r\n}) => {\r\n  // let propsDate = new Date(date)\r\n  // console.log(propsDate.getDay());\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10\r\n        ? `0${propsDate.getMonth() + 1}`\r\n        : propsDate.getMonth() + 1,\r\n    day:\r\n      propsDate.getDate() < 10\r\n        ? +`0${propsDate.getDate()}`\r\n        : propsDate.getDate(),\r\n  };\r\n\r\n  const [currentTable, setCurrentTable] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentMoney: money,\r\n    currentDate: null,\r\n    currentCategory: category,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    console.log(e.target.closest(\"th\"));\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === \"Delete\") {\r\n      deleteMoney();\r\n    } else if (e.target.innerText === \"Edit\") {\r\n      setOpen(true);\r\n      setCurrentTable({\r\n        currentName: name,\r\n        currentCategory: category ,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentMoney: money,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n      console.log(\r\n        name,\r\n        description,\r\n        icon,\r\n        `${fullDate.year}-${fullDate.month}-${fullDate.day}`\r\n      );\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // const handleClick = (e) => {\r\n  // \tsetAnchorEl(e.currentTarget);\r\n  // \tconsole.log(e.target.closest('th'))\r\n  // };\r\n\r\n  // const propsDate = new Date(date);\r\n  //\r\n  // const fullDate = {\r\n  // \tyear: propsDate.getFullYear(),\r\n  // \tmonth:\r\n  // \t\t\tpropsDate.getMonth() + 1 < 10\r\n  // \t\t\t\t\t? `0${propsDate.getMonth() + 1}`\r\n  // \t\t\t\t\t: propsDate.getMonth() + 1,\r\n  // \tday:\r\n  // \t\t\tpropsDate.getDay() + 1 < 10\r\n  // \t\t\t\t\t? `0${propsDate.getDay() + 1}`\r\n  // \t\t\t\t\t: propsDate.getDay() + 1,\r\n  // };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryBlock}>\r\n          <div className={classes.categoryName}>{name}</div>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\r\n\r\n      <TableCell>{date.toLocaleDateString()}</TableCell>\r\n      <TableCell>{money}</TableCell>\r\n      <TableCell>\r\n        <img src={`${avatar}`} alt=\"avatar\" className={\"avatar\"} />\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"home-menu\"\r\n          aria-haspopup=\"true\"\r\n          // onClick={handleClick}\r\n          onClick={handleActionClick}\r\n          size=\"small\"\r\n        >\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"home-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          // onClose={handleClose}>\r\n          onClose={handleActionClose}\r\n        >\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n         \r\n          {open && (\r\n            <AddCharges\r\n              open={open}\r\n              handleClose={handleClose}\r\n              currentTable={currentTable}\r\n              updateCharge={updateCharge}\r\n              charges={charges}\r\n              chargeCategories={chargeCategories}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default HomeTable;\r\n","import React from \"react\";\r\n\r\n const useSortTableData = (items, item, config = null) => {\r\n\tconst [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n\tconst sortedItems = React.useMemo(() => {\r\n\t\tlet sortableItems = [...items];\r\n\t\tlet sortedName = [...item];\r\n\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\tif(sortConfig.key === \"category\" ){\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, item, sortConfig]);\r\n\r\n\tconst requestSort = (key) => {\r\n\t\tlet direction = 'ascending';\r\n\t\tif (\r\n\t\t\t\tsortConfig &&\r\n\t\t\t\tsortConfig.key === key &&\r\n\t\t\t\tsortConfig.direction === 'ascending'\r\n\t\t) {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortTableData;\r\n","import React from \"react\";\r\nimport HomeTable from \"./HomeTable\";\r\nimport useSortTableData from \"./sortTable\";\r\n// import HomeModal from \"./HomeModal\";\r\nimport AddCharges from \"./AddCharges\";\r\n// import HomeSelect from './HomeSelect';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n// import FilterDate from \"./FilterDate\";\r\n// import Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"lightcyan\",\r\n  },\r\n  addButton: {\r\n    display: \"flex\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minWidth: 300,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  homeSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  homeMenu: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px 0\",\r\n    height: \"40px\",\r\n  },\r\n  homeMenuTitle: {\r\n    marginRight: \"20px\",\r\n  },\r\n}));\r\n\r\nconst Charges = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [filtered, setFiltered] = React.useState(props.charges);//items\r\n  const handlePeriodChange = (selectVal) => {\r\n    if (+selectVal === 7 || +selectVal === 30) {\r\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\r\n      let currentDate = new Date();\r\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\r\n      return setFiltered(\r\n          [...props.charges.filter((arr) => {  // filtered:  ...items\r\n            console.log(arr.date.getTime() > time);\r\n            return(arr.date.getTime() > time);\r\n          })]\r\n      )\r\n    }else if(selectVal === \"FULL_PERIOD\"){\r\n      // console.log([...props.charges]);\r\n      // return([...props.charges]);\r\n      return setFiltered([...props.charges])  //items\r\n    }\r\n  }\r\n\r\n  const {items, requestSort, sortConfig} = useSortTableData(\r\n      filtered,  //props.charges\r\n      props.categories\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  // const { itemsFilter, setFilterConfig }  = React.useState([...items]);\r\n  // const [dateFilter, setFilterDate] = React.useState([...items]);\r\n\r\n\r\n//     // handlePeriodChange(selectVal){\r\n//     // this.handlePeriodChange(selectVal);\r\n//     const setFiltered = filters( filtered);\r\n//     function filters(anArray){\r\n//       let newArr = []\r\n//       for(let i =0; i< anArray.length; i++){\r\n//         if(anArray[i]){\r\n//           newArr.push(anArray[i].date.getTime());\r\n//         }\r\n//       }\r\n//       return (newArr);\r\n//     }\r\n//     if (+selectVal === 7) {\r\n//       // console.log(setFiltered.filter((fil) => {\r\n//       //   return (parseInt(fil) / 2) > 10\r\n//       // }));\r\n//      let mili = +selectVal*24*60*60*1000;\r\n//       let currentDate = new Date();\r\n//       let time = currentDate.setTime(currentDate.getTime()- mili);\r\n//       console.log(new Date(time));\r\n//       // setFiltered.filter((fil) => {\r\n//       //   return((fil) >=(time));\r\n//       // });\r\n//       console.log(setFiltered.filter((fil) => {\r\n//         return((fil) >=(time))}));\r\n//       // console.log(\r\n//       //    (new Date(setFiltered.filter((fil) => ((fil) >=( time)) )).toLocaleDateString()));\r\n//       // console.log(new Date(fil).toLocaleDateString());\r\n//     }else if (+selectVal === 30) {\r\n//       // console.log(setFiltered.filter((fil) => {\r\n//       //   return (parseInt(fil) / 2) > 10\r\n//       // }));\r\n//       let mili = +selectVal*24*60*60*1000;\r\n//       let currentDate = new Date();\r\n//       let time = currentDate.setTime(currentDate.getTime() - mili);\r\n//       // console.log(new Date(time).toLocaleDateString());\r\n//       console.log(new Date(time));\r\n//       console.log(setFiltered.filter((fil) => {\r\n//         return((fil) >=(time))}));\r\n//     }else{\r\n//       console.log(setFiltered);\r\n//       return (setFiltered);\r\n//     }\r\n//   };\r\n  // const day = new Date();\r\n  // const me = new Date(day);\r\n  // me;\r\n  // me.toLocaleDateString()\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\r\n          {/*<HomeSelect updateCategory={props.createChargeCategory}/>*/}\r\n          <select\r\n            id=\"datePeriod\" name=\"datePeriod\"\r\n            onChange={event => handlePeriodChange(event.target.value)}\r\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n            // selected={\"FULL_PERIOD\"}\r\n            defaultValue={\"FULL_PERIOD\"}\r\n              // value={filter ? filter.value : \"FULL_PERIOD\"}\r\n            // value={props.charges}\r\n              >\r\n            <option value=\"7\">This Week</option>\r\n            <option value=\"30\">This Month</option>\r\n            <option value=\"FULL_PERIOD\">Full period</option>\r\n          </select>\r\n          {/*<HomeSelect filtered={items}/>*/}\r\n          {/*<FilterDate filtered={items} />*/}\r\n        </div>\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={props.createCharge}\r\n        charges={props.charges}\r\n        chargeCategories={props.categories}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"Table of Charges\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"category\")}\r\n                  className={getClassNamesFor(\"category\")}\r\n                >\r\n                  {\" \"}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"description\")}\r\n                  className={getClassNamesFor(\"description\")}\r\n                >\r\n                  {\" \"}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"date\")}\r\n                  className={getClassNamesFor(\"date\")}\r\n                >\r\n                  {\" \"}\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"money\")}\r\n                  className={getClassNamesFor(\"money\")}\r\n                >\r\n                  {\" \"}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell>Avatar</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...items.map((el, i) => (  //items\r\n                <HomeTable\r\n                  category={el.category}\r\n                  icon={props.categories[el.category].icon}\r\n                  name={props.categories[el.category].name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i}\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    props.deleteMoney(i);\r\n                  }}\r\n                  updateCharge={(charge) => {\r\n                    props.updateCharge(i, charge);\r\n                  }}\r\n                  charges={props.charges}\r\n                  chargeCategories={props.categories}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import React from \"react\";\r\nimport HomeTable from \"./HomeTable\";\r\nimport AddCharges from \"./AddCharges\";\r\n//import HomeSelect from './HomeSelect';\r\nimport useSortTableData from \"./sortTable\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"lightcyan\",\r\n    fontWeight: \"700\",\r\n  },\r\n  addButton: {\r\n    display: \"flex\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  homeSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  homeMenu: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px 0\",\r\n    height: \"40px\",\r\n  },\r\n  homeMenuTitle: {\r\n    marginRight: \"20px\",\r\n  },\r\n}));\r\n\r\nconst Incomes = (props) => {\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const { items, requestSort, sortConfig } = useSortTableData(\r\n    props.incomes,\r\n    props.categories\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\r\n          {/*  <HomeSelect />*/}\r\n        </div>\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleClickOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={props.createIncome}\r\n        charges={props.incomes}\r\n        chargeCategories={props.categories}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"category\")}\r\n                  className={getClassNamesFor(\"category\")}\r\n                >\r\n                  {\" \"}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"description\")}\r\n                  className={getClassNamesFor(\"description\")}\r\n                >\r\n                  {\" \"}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"date\")}\r\n                  className={getClassNamesFor(\"date\")}\r\n                >\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"money\")}\r\n                  className={getClassNamesFor(\"money\")}\r\n                >\r\n                  {\" \"}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>Avatar</TableCell>\r\n              <TableCell className={\"table-direct\"}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...items.map((el, i) => (\r\n                <HomeTable\r\n                  category={el.category}\r\n                  name={props.categories[el.category].name}\r\n                  icon={props.categories[el.category].icon}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i} //el.name\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    props.deleteMoney(i);\r\n                  }}\r\n                  updateCharge={(income) => {\r\n                    props.updateIncome(i, income);\r\n                  }}\r\n                  charges={props.incomes}\r\n                  chargeCategories={props.categories}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  const [incomes, setIncomes] = useState(0);\r\n  const [charges, setCharges] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [toWarn, setToWarn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIncomes(\r\n      props.incomes.reduce((prev, curr) => {\r\n        return prev + curr.money;\r\n      }, 0),\r\n    );\r\n  }, [props.incomes]);\r\n\r\n  useEffect(() => {\r\n    setCharges(\r\n      props.charges.reduce((prev, curr) => {\r\n        return prev + curr.money;\r\n      }, 0),\r\n    );\r\n  }, [props.charges]);\r\n\r\n  useEffect(() => {\r\n    setTotal(incomes - charges);\r\n  }, [incomes, charges]);\r\n\r\n  useEffect(() => {\r\n    // prettier-ignore\r\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\r\n      setToWarn(true);\r\n    } else {\r\n      setToWarn(false);\r\n    }\r\n  }, [total, incomes, props]);\r\n\r\n  return (\r\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\r\n      <div className={style.header_category}>\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n      {toWarn && <p> BE aware of low budget</p>}\r\n      <div className={style.header_balance}>\r\n        <h2 className={style.header_balance__title}>Balance</h2>\r\n        <h1 className={style.header_balance__amount}>\r\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport './HomePage.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\nconst useStyles = makeStyles({\r\n  home: {\r\n    padding: '20px',\r\n  },\r\n  sectionToggle: {\r\n    display: 'flex',\r\n    marginBottom: '20px',\r\n  },\r\n  toggleButton: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    letterSpacing: '1px',\r\n  },\r\n  toggleButtonActive: {\r\n    borderBottom: '1px solid cornflowerblue',\r\n  },\r\n});\r\n\r\nconst HomePage = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.home}>\r\n        <Header title=\"Homepage\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/homepage/\">\r\n            <Redirect to=\"/homepage/charges\" />\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/homepage/charges\"\r\n            render={() => (\r\n              <Charges\r\n                charges={props.charges}\r\n                categories={props.chargeCategories}\r\n                deleteMoney={props.deleteCharge}\r\n                updateCharge={props.updateCharge}\r\n                createCharge={props.createCharge}\r\n                avatar={props.avatar}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/homepage/incomes\"\r\n            render={() => (\r\n              <Incomes\r\n                incomes={props.incomes}\r\n                categories={props.incomeCategories}\r\n                deleteMoney={props.deleteIncome}\r\n                updateIncome={props.updateIncome}\r\n                createIncome={props.createIncome}\r\n                avatar={props.avatar}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from './HomePage';\r\nimport { connect } from 'react-redux';\r\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\r\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    avatar: state.settings.avatar,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createIncome: (income) => {\r\n      dispatch(createIncomeAC(income));\r\n    },\r\n    updateIncome: (index, income) => {\r\n      dispatch(updateIncomeAC(index, income));\r\n    },\r\n    deleteIncome: (index) => {\r\n      dispatch(deleteIncomeAC(index));\r\n    },\r\n    createCharge: (charge) => {\r\n      dispatch(createChargeAC(charge));\r\n    },\r\n    updateCharge: (index, charge) => {\r\n      dispatch(updateChargeAC(index, charge));\r\n    },\r\n    deleteCharge: (index) => {\r\n      dispatch(deleteChargeAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useState } from 'react';\r\n\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\nimport './Charts.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginLeft: '3%',\r\n    width: '150px',\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n});\r\n\r\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\r\n  const [activePeriod, setActivePeriod] = useState(8);\r\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\r\n  const [isShowCharges, setIsShowCharges] = useState(true);\r\n\r\n  const getWeekDay = (day) => {\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n    return days[new Date(day).getDay()];\r\n  };\r\n\r\n  const getWeek = () => {\r\n    setActivePeriod(8);\r\n  };\r\n\r\n  const getMonth = () => {\r\n    setActivePeriod(31);\r\n  };\r\n\r\n  const allDates = [];\r\n  const allDatesForDay = [];\r\n  const allDays = [];\r\n  const categoriesBar = [];\r\n  const categoriesDoughnut = [];\r\n  const trueDataCharges = [];\r\n  const trueDataIncomes = [];\r\n  const trueMoneyChargesDoughnut = [];\r\n  const trueMoneyIncomesBar = [];\r\n  const trueMoneyIncomes = [];\r\n  const moneyIn = [];\r\n  const moneyOut = [];\r\n  const trueMoneyCharges = [];\r\n\r\n  const allMoney = [];\r\n\r\n  for (let i = 0; i < activePeriod - 1; i++) {\r\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\r\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\r\n  }\r\n\r\n  allDates.reverse();\r\n  allDatesForDay.reverse();\r\n\r\n\r\n  allDatesForDay.map((el) => {\r\n    allDays.push(getWeekDay(el));\r\n    return allDays;\r\n  });\r\n\r\n  const fullIncomes = incomeCategories.slice();\r\n  const fullCharges = chargeCategories.slice();\r\n\r\n  fullIncomes.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  incomes.forEach((el) => {\r\n    if (\r\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      fullIncomes[el.category].sum += el.money;\r\n    }\r\n  });\r\n\r\n  fullCharges.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  charges.forEach((el) => {\r\n    if (\r\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      fullCharges[el.category].sum += el.money;\r\n    }\r\n  });\r\n\r\n  incomes.map((el) => {\r\n    if (\r\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      trueMoneyIncomes.push(el.money);\r\n    }\r\n    return trueMoneyIncomes;\r\n  });\r\n\r\n  charges.map((el) => {\r\n    if (\r\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      trueMoneyCharges.push(el.money);\r\n    }\r\n    return trueMoneyCharges;\r\n  });\r\n\r\n  charges.map((item) => {\r\n    if (\r\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      trueDataCharges.push(item);\r\n    }\r\n    return trueDataCharges;\r\n  });\r\n\r\n  incomes.map((item) => {\r\n    if (\r\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\r\n      activePeriod\r\n    ) {\r\n      trueDataIncomes.push(item);\r\n    }\r\n    return trueDataIncomes;\r\n  });\r\n\r\n  allDates.forEach((d) => {\r\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    if (elIn) {\r\n      moneyIn.push(elIn.money);\r\n    } else {\r\n      moneyIn.push(0);\r\n    }\r\n    if (elOut) {\r\n      moneyOut.push(elOut.money);\r\n    } else {\r\n      moneyOut.push(0);\r\n    }\r\n  });\r\n\r\n  fullIncomes.map((el) => {\r\n    if (el.sum !== 0) {\r\n      categoriesBar.push(el.name);\r\n    }\r\n    return categoriesBar;\r\n  });\r\n\r\n  fullCharges.map((el) => {\r\n    if (el.sum !== 0) {\r\n      categoriesDoughnut.push(el.name);\r\n    }\r\n    return categoriesDoughnut;\r\n  });\r\n\r\n  fullCharges.map((el) => {\r\n    if(el.sum > 0) {\r\n        trueMoneyChargesDoughnut.push(el.sum)\r\n    }\r\n  });\r\n\r\n  fullIncomes.map((el) => {\r\n    if(el.sum > 0) {\r\n        trueMoneyIncomesBar.push(el.sum)\r\n    }\r\n  });\r\n\r\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\r\n  const showCharges = () => setIsShowCharges(!isShowCharges);\r\n\r\n  incomes.map((el) => {\r\n    allMoney.push(+el.money);\r\n    return allMoney;\r\n  });\r\n\r\n  charges.map((el) => {\r\n    allMoney.push(+el.money);\r\n    return allMoney;\r\n  });\r\n\r\n  const maxSum = Math.max(...allMoney);\r\n  const minSum = Math.min(...allMoney);\r\n\r\n  const startDataLine = (canvas) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n    gradient.addColorStop(0, '#F2DB51');\r\n    gradient.addColorStop(1, '#ECC32F');\r\n\r\n    return {\r\n      labels: activePeriod === 8 ? allDays : allDates,\r\n      datasets: [\r\n        {\r\n          label: 1,\r\n          lineTension: 0.5,\r\n          backgroundColor: gradient,\r\n          borderColor: 'rgb(93,143,238)',\r\n          hoverBorderColor: 'rgba(0,0,0,0)',\r\n          borderWidth: 4,\r\n          pointBackgroundColor: 'rgba(0,0,0,0)',\r\n          pointBorderColor: 'rgba(0,0,0,0)',\r\n          data: isShowIncomes ? moneyIn : null,\r\n        },\r\n        {\r\n          label: 2,\r\n          lineTension: 0.5,\r\n          backgroundColor: 'rgb(254,132,2)',\r\n          borderColor: 'rgb(254,132,2)',\r\n          hoverBorderColor: 'rgba(0,0,0,0)',\r\n          borderWidth: 4,\r\n          borderDash: [15, 5],\r\n          pointBackgroundColor: 'rgba(0,0,0,0)',\r\n          pointBorderColor: 'rgba(0,0,0,0)',\r\n          data: isShowCharges ? moneyOut : null,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const startDataBar = {\r\n    labels: categoriesBar,\r\n    datasets: [\r\n      {\r\n        backgroundColor: 'white',\r\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 0,\r\n        barPercentage: 0.4,\r\n        data: trueMoneyIncomesBar,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const startDataDoughnut = {\r\n    labels: categoriesDoughnut,\r\n    datasets: [\r\n      {\r\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\r\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\r\n        borderWidth: 0,\r\n        data: trueMoneyChargesDoughnut,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <div className=\"header_wrapper\">\r\n        <Header title=\"Charts\" />\r\n    </div>\r\n      <div className=\"charts\">\r\n        <div className=\"line-chart__container\">\r\n          <div className=\"line-chart\">\r\n            <Line\r\n              data={startDataLine}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: 'Summary',\r\n                  position: 'top',\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                },\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      display: false,\r\n                      ticks: {\r\n                        suggestedMin: minSum,\r\n                        suggestedMax: maxSum,\r\n                      },\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                  xAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        display: false,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n                maintainAspectRatio: false,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"chart-buttons\">\r\n            <div className=\"chart-buttons__btn\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 31 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getMonth}>\r\n                Month\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 8 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getWeek}>\r\n                Week\r\n              </Button>\r\n            </div>\r\n            <div className=\"chart-buttons__checkbox\">\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\r\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">Incomes</label>\r\n              </span>\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\r\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">Charges</label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bar-chart\">\r\n          <Bar\r\n            data={startDataBar}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Income categories',\r\n                fontSize: 20,\r\n                fontColor: 'white',\r\n              },\r\n              legend: {\r\n                display: false,\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      suggestedMin: 0,\r\n                      suggestedMax: 500,\r\n                      fontColor: 'white',\r\n                    },\r\n                    gridLines: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      fontColor: 'white',\r\n                    },\r\n                    gridLines: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"doughnut-chart\">\r\n          <Doughnut\r\n            data={startDataDoughnut}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Charges categories',\r\n                fontSize: 20,\r\n                fontColor: 'white',\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: 'right',\r\n                labels: {\r\n                  fontColor: 'white',\r\n                },\r\n              },\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import Charts from './Charts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\r\n","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  dialogWindow: {\r\n    minWidth: '350px',\r\n  },\r\n  iconSelect: {\r\n    color: 'grey',\r\n  },\r\n  iconPicker: {\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nconst AddCategory = ({\r\n  open,\r\n  handleClose,\r\n  createCategory,\r\n  currentCategory = {\r\n    currentName: '',\r\n    currentDescription: '',\r\n    currentDate: '',\r\n    currentIcon: '',\r\n  },\r\n  updateCategory,\r\n  icons,\r\n}) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [name, setName] = useState(`${currentCategory.currentName}`);\r\n  const [description, setDescription] = useState(currentCategory.currentDescription);\r\n  const [date, setDate] = useState(\r\n    currentCategory.currentDate ? currentCategory.currentDate : values.currentDate,\r\n  );\r\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\r\n\r\n  const resetInputs = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setDate(values.currentDate);\r\n    setIcon('');\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === 'ADD') {\r\n      console.log(icon);\r\n      if (name && icon !== 'object' && icon) {\r\n        updateCategory({\r\n          name: name,\r\n          description: description,\r\n          date: Date(date),\r\n          icon: icon,\r\n        });\r\n        handleClose();\r\n        resetInputs();\r\n      }\r\n    } else if (e.target.innerText === 'CANCEL') {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.id === 'nameInput') {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === 'descriptionInput') {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === 'datePicker') {\r\n      setDate(event.target.value);\r\n    } else if (typeof event.target.value === 'object') {\r\n      setIcon(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-category-title\"\r\n        aria-describedby=\"add-category-description\">\r\n        <DialogTitle id=\"add-category-title\">{'ADD NEW CATEGORY'}</DialogTitle>\r\n        <DialogContent className={classes.dialogWindow}>\r\n          <div>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"nameInput\"\r\n              label=\"Category name (required)\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={name}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className={classes.pickersBlock}>\r\n            <TextField\r\n              className={classes.iconPicker}\r\n              id=\"selectIcon\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Select category icon (required)\"\r\n              value={icon}\r\n              onChange={handleChange}\r\n              //   helperText=\"Select category icon\"\r\n              fullWidth>\r\n              {[\r\n                ...icons.map((el, i) => (\r\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\r\n                    {el}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState } from 'react';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\r\nimport AddCategory from './AddCategory';\r\n\r\nconst useStyles = makeStyles({\r\n  categoryNameBlock: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  categoryIcon: {\r\n    display: 'flex',\r\n    marginRight: '10px',\r\n    color: 'grey',\r\n  },\r\n  categoryName: {\r\n    display: 'flex',\r\n  },\r\n});\r\n\r\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date.seconds * 1000);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\r\n    day: propsDate.getDay() + 1 < 10 ? `0${propsDate.getDay() + 1}` : propsDate.getDay() + 1,\r\n  };\r\n\r\n  const [currentCategory, setCurrentCategory] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentDate: null,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === 'Delete') {\r\n      deleteCategory();\r\n    } else if (e.target.innerText === 'Edit') {\r\n      setOpen(true);\r\n      setCurrentCategory({\r\n        currentName: name,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n    }\r\n\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"category-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleActionClick}\r\n          size=\"small\">\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"category-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleActionClose}>\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n          {open && (\r\n            <AddCategory\r\n              open={open}\r\n              handleClose={handleClose}\r\n              icons={icons}\r\n              currentCategory={currentCategory}\r\n              updateCategory={updateCategory}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport Category from './Category';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'lightcyan',\r\n  },\r\n  addButtonWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: '20px',\r\n  },\r\n});\r\n\r\nconst Charges = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={props.createChargeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.chargeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    props.deleteChargeCategory(i);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    props.updateChargeCategory(i, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport Category from './Category';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'lightcyan',\r\n  },\r\n  addButtonWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: '20px',\r\n  },\r\n});\r\n\r\nconst Incomes = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={props.createIncomeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.incomeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    props.deleteIncomeCategory(i);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    props.updateIncomeCategory(i, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\nimport { db } from '../../redux/firebase/firebase';\r\n\r\nconst useStyles = makeStyles({\r\n  Categories: {\r\n    padding: '20px',\r\n  },\r\n  sectionToggle: {\r\n    display: 'flex',\r\n    marginBottom: '20px',\r\n  },\r\n  toggleButton: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    letterSpacing: '1px',\r\n  },\r\n  toggleButtonActive: {\r\n    borderBottom: '1px solid cornflowerblue',\r\n  },\r\n  // headerBlock: {\r\n  //   display: 'flex',\r\n  //   justifyContent: 'space-between',\r\n  //   alignItems: 'center',\r\n  //   marginBottom: '100px',\r\n  // },\r\n  // balanceTitle: {\r\n  //   textAlign: 'right',\r\n  //   fontSize: '1.2em',\r\n  //   marginBottom: '10px',\r\n  // },\r\n  // balanceAmount: {\r\n  //   fontSize: '1.7em',\r\n  //   fontWeight: 'bold',\r\n  // },\r\n});\r\n\r\nconst Categories = (props) => {\r\n  useEffect(() => {\r\n    db.collection('charge-categories').onSnapshot((ss) => {\r\n      ss.docs.map((el) => {\r\n        props.fetchChargeCategories(el.data());\r\n      });\r\n    });\r\n    // db.collection('income-categories').onSnapshot((ss) => {\r\n    //   ss.docs.map((el) => {\r\n    //     props.fetchIncomeCategories(el.data());\r\n    //   });\r\n    // });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.Categories}>\r\n        {/* <div className={classes.headerBlock}>\r\n          <div>\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className={classes.balanceBlock}>\r\n            <div className={classes.balanceTitle}>Balance</div>\r\n            <div className={classes.balanceAmount}>$2,652.07</div>\r\n          </div>\r\n        </div> */}\r\n        <Header title=\"Categories\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/categories/\">\r\n            <Redirect to=\"/categories/charges\" />\r\n          </Route>\r\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\r\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import Categories from './Categories';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchIncomeCategoriesAC,\r\n  createIncomeCategoryAC,\r\n  updateIncomeCategoryAC,\r\n  deleteIncomeCategoryAC,\r\n} from '../../redux/incomeCategoriesReducer';\r\nimport {\r\n  fetchChargeCategoriesAC,\r\n  createChargeCategoryAC,\r\n  updateChargeCategoryAC,\r\n  deleteChargeCategoryAC,\r\n} from '../../redux/chargeCategoriesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchChargeCategories: (category) => {\r\n      dispatch(fetchChargeCategoriesAC(category));\r\n    },\r\n    createIncomeCategory: (category) => {\r\n      dispatch(createIncomeCategoryAC(category));\r\n    },\r\n    updateIncomeCategory: (index, category) => {\r\n      dispatch(updateIncomeCategoryAC(index, category));\r\n    },\r\n    deleteIncomeCategory: (index) => {\r\n      dispatch(deleteIncomeCategoryAC(index));\r\n    },\r\n    fetchIncomeCategories: (category) => {\r\n      dispatch(fetchIncomeCategoriesAC(category));\r\n    },\r\n    createChargeCategory: (category) => {\r\n      dispatch(createChargeCategoryAC(category));\r\n    },\r\n    updateChargeCategory: (index, category) => {\r\n      dispatch(updateChargeCategoryAC(index, category));\r\n    },\r\n    deleteChargeCategory: (index) => {\r\n      dispatch(deleteChargeCategoryAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\n\r\nconst AvatarUpload = ({ img, updateInState }) => {\r\n  const updateImage = (e) => {\r\n    e.target.files[0] && updateInState(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={style.avatar}>\r\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\r\n        <img src={img} alt=\"avatar\" />\r\n      </label>\r\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUpload;\r\n\r\n// // Add a new document in collection \"cities\"\r\n// const littleUpdate = () => {\r\n//   db.collection('user-info')\r\n//     .doc('NEW')\r\n//     .set({\r\n//       userName: 'Avocado',\r\n//       moneyLimit: 2500,\r\n//       avatar: imageAsFile,\r\n//     })\r\n//     .then(function () {\r\n//       console.log('Document successfully written!');\r\n//     })\r\n//     .catch(function (error) {\r\n//       console.error('Error writing document: ', error);\r\n//     });\r\n// };\r\n\r\n// const handleFireBaseUpload = (e) => {\r\n//   e.preventDefault();\r\n//   console.log('start of upload');\r\n//   // async magic goes here...\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n// };\r\n\r\n// const updateUpload = () => {\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n//   uploadTask.on(\r\n//     'state_changed',\r\n//     (snapshot) => {},\r\n//     (error) => {\r\n//       console.log(error);\r\n//     },\r\n//     () => {\r\n//       storage\r\n//         .ref('images')\r\n//         .child(imageAsFile.name)\r\n//         .getDownloadURL()\r\n//         .then((url) => {\r\n//           db.collection('user-info')\r\n//             .add({\r\n//               userName: 'Ivan',\r\n//               moneyLimit: 2300,\r\n//               avatar: url,\r\n//             })\r\n//             .then(function () {\r\n//               console.log('Document successfully written!');\r\n//             });\r\n//           // db.collection('user-info')\r\n//           //   .doc('NEW')\r\n//           //   .set({\r\n//           //     userName: 'Ivan',\r\n//           //     moneyLimit: 2500,\r\n//           //   })\r\n//           //   .then(function () {\r\n//           //     console.log('Document successfully written!');\r\n//           //   })\r\n//           //   .catch(function (error) {\r\n//           //     console.error('Error writing document: ', error);\r\n//           //   });\r\n//           setImage(null);\r\n//         });\r\n//     },\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\nimport { ButtonGroup, Button } from '@material-ui/core/';\r\n\r\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\r\n  const handleDecreaseLimit = () => {\r\n    if (title === 'amount') {\r\n      setLimit(limit > 100 ? limit - step : 100);\r\n    } else {\r\n      setLimit(limit > 10 ? limit - step : 10);\r\n    }\r\n  };\r\n  const handleIncreaseLimit = () => {\r\n    if (title === 'percent') {\r\n      setLimit(limit < 90 ? limit + step : 90);\r\n    } else {\r\n      setLimit(limit + step);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Remain {title}</h3>\r\n      <span className={style.limit}>{limit}</span>\r\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\r\n        <Button onClick={handleDecreaseLimit}>-</Button>\r\n        <Button onClick={handleIncreaseLimit}>+</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Limits;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { handleFireBaseUploadInfo, handleFireBaseUploadAvatar } from '../../redux/firebase/profile';\r\n\r\n// components\r\nimport Avatar from './components/AvatarUpload';\r\nimport Limits from './components/Limits';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport 'react-phone-input-2/lib/material.css';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n  const [avatarNew, setAvatarNew] = useState(null);\r\n  const [avatar, setAvatar] = useState(props.avatar);\r\n  const [name, setName] = useState(props.userName);\r\n  const [phone, setPhone] = useState(props.phoneNumber);\r\n  const [showWarning, setWarning] = useState(props.showWarning);\r\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\r\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\r\n  const [showSaved, setShowSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAvatar(props.avatar);\r\n    setName(props.userName);\r\n    setPhone(props.phoneNumber);\r\n    setWarning(props.showWarning);\r\n    setCurrentMoneyLimit(props.moneyLimit);\r\n    setCurrentPercentLimit(props.percentLimit);\r\n  }, [props]);\r\n\r\n  // useEffect(() => {\r\n  //   // db.collection('user-info').onSnapshot((ss) => {\r\n  //   //   props.updateUser(ss.docs[0].data());\r\n  //   // });\r\n  //   props.settingsDidMountThunk();\r\n  // }, []);\r\n\r\n  const uploadNewData = () => {\r\n    avatarNew\r\n      ? handleFireBaseUploadAvatar(\r\n          setAvatarNew,\r\n          avatarNew,\r\n          name,\r\n          phone,\r\n          showWarning,\r\n          currentMoneyLimit,\r\n          currentPercentLimit,\r\n          setShowSaved,\r\n        )\r\n      : handleFireBaseUploadInfo(\r\n          avatar,\r\n          name,\r\n          phone,\r\n          showWarning,\r\n          currentMoneyLimit,\r\n          currentPercentLimit,\r\n          setShowSaved,\r\n        );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Avatar img={avatar} updateInState={setAvatarNew} />\r\n      <div className={style.main}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n        <PhoneInput\r\n          inputStyle={{ width: '100%' }}\r\n          id=\"phone\"\r\n          value={phone}\r\n          country=\"ua\"\r\n          onChange={(e) => setPhone(e)}\r\n        />\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={showWarning}\r\n                onChange={() => {\r\n                  setWarning(!showWarning);\r\n                }}\r\n              />\r\n            }\r\n            label=\"Warn me when remains:\"\r\n          />\r\n        </div>\r\n        <Limits\r\n          title=\"amount\"\r\n          limit={currentMoneyLimit}\r\n          setLimit={setCurrentMoneyLimit}\r\n          step={100}\r\n          disabled={!showWarning}\r\n        />\r\n        <Limits\r\n          title=\"percent\"\r\n          limit={currentPercentLimit}\r\n          setLimit={setCurrentPercentLimit}\r\n          step={5}\r\n          disabled={!showWarning}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\r\n          SAVE\r\n        </Button>\r\n        {showSaved && (\r\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\r\n            Your profile has been updated\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { db, storage } from './firebase';\r\n\r\nexport const handleFireBaseUploadInfo = (\r\n  avatar,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  db.collection('user-info')\r\n    .doc('INFO')\r\n    .set({\r\n      avatar: avatar,\r\n      userName: name,\r\n      phoneNumber: phone,\r\n      showWarning: showWarning,\r\n      moneyLimit: currentMoneyLimit,\r\n      percentLimit: currentPercentLimit,\r\n    })\r\n    .then(() => {\r\n      console.log('Document successfully written without avatar!');\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const handleFireBaseUploadAvatar = (\r\n  setAvatarNew,\r\n  avatarNew,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\r\n  console.log('start of upload');\r\n  uploadTask.on('state_changed', () => {\r\n    storage\r\n      .ref('images')\r\n      .child(`avatar.jpg`)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        db.collection('user-info')\r\n          .doc('INFO')\r\n          .set({\r\n            avatar: url,\r\n            userName: name,\r\n            phoneNumber: phone,\r\n            showWarning: showWarning,\r\n            moneyLimit: currentMoneyLimit,\r\n            percentLimit: currentPercentLimit,\r\n          })\r\n          .then(() => {\r\n            console.log('Document successfully written with avatar!');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error: ', error);\r\n          });\r\n        setAvatarNew(null);\r\n      });\r\n  });\r\n};\r\n","import Settings from './Settings';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    ...state.settings,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Settings);\r\n","import React, { useEffect } from 'react';\r\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n//\r\n// Redux\r\nimport { connect, Provider } from 'react-redux';\r\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\r\nimport store from './redux/store';\r\n\r\n//\r\n// Components\r\nimport Sidebar from './components/Navbar/Navbar';\r\nimport HomePage from './components/HomePage/HomePageContainer';\r\nimport Charts from './components/Charts/ChartsContainer';\r\nimport Categories from './components/Categories/CategoriesContainer';\r\nimport Settings from './components/Settings/SettingsContainer';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.setSettingsThunk();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      <main>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/homepage\" />\r\n        </Route>\r\n        <Route path=\"/homepage\" render={() => <HomePage />} />\r\n        <Route path=\"/charts\" render={() => <Charts />} />\r\n        <Route path=\"/categories\" render={() => <Categories />} />\r\n        <Route path=\"/settings\" render={() => <Settings />} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppContainer = connect(null, { setSettingsThunk })(App);\r\n\r\nconst MainAppContainer = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default MainAppContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__28MIz\",\"temp\":\"Settings_temp__3QMkE\",\"avatar\":\"Settings_avatar__2X2vT\",\"limit\":\"Settings_limit__1FANi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VQk2\",\"header__warning\":\"Header_header__warning__1-QI2\",\"header_category\":\"Header_header_category__44h_d\",\"header_balance\":\"Header_header_balance__1C8DW\",\"header_balance__title\":\"Header_header_balance__title__1_tuK\",\"header_balance__amount\":\"Header_header_balance__amount__28jaQ\",\"header_balance__red\":\"Header_header_balance__red__12UAn\"};"],"sourceRoot":""}