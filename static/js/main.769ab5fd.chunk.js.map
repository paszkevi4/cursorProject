{"version":3,"sources":["redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/HomeTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/TemporaryComponent/TempContainer.jsx","components/TemporaryComponent/Temp.jsx","App.js","serviceWorker.js","index.js"],"names":["icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","initialState","name","description","date","Date","icon","incomeCategoriesReducer","state","action","type","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","reducers","combineReducers","incomes","charges","incomeCategories","chargeCategories","store","createStore","NavBar","to","HomeTable","Charges","props","map","el","i","key","Incomes","HomePage","path","render","connect","dispatch","setIncome","setNewIncomeAC","setCharge","setNewChargeAC","divStyle","width","height","startData","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","lineTension","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","Charts","className","style","options","title","display","text","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","React","Component","useStyles","makeStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","color","categoryName","Category","classes","useState","anchorEl","setAnchorEl","handleClose","e","console","log","currentTarget","target","innerText","parentNode","TableRow","TableCell","component","scope","Button","aria-controls","aria-haspopup","onClick","closest","size","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","table","minWidth","tableHead","addButton","float","variant","startIcon","TableContainer","Paper","Table","TableHead","TableBody","toString","Categories","padding","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","headerBlock","justifyContent","balanceTitle","textAlign","balanceAmount","fontWeight","balanceBlock","activeClassName","exact","createIncomeCategory","createIncomeCategoryAC","updateIncomeCategory","updateIncomeCategoryAC","deleteIncomeCategory","deleteIncomeCategoryAC","createChargeCategory","createChargeCategoryAC","updateChargeCategory","updateChargeCategoryAC","deleteChargeCategory","deleteChargeCategoryAC","Object","values","App","Navbar","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.769ab5fd.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = {\n  AccountBalance: <AccountBalance />,\n  AccountBalanceWallet: <AccountBalanceWallet />,\n  AllInbox: <AllInbox />,\n  ChildFriendly: <ChildFriendly />,\n  Cake: <Cake />,\n  DirectionsBike: <DirectionsBike />,\n  DriveEta: <DriveEta />,\n  EmojiSymbols: <EmojiSymbols />,\n  Fastfood: <Fastfood />,\n  Favorite: <Favorite />,\n  FitnessCenter: <FitnessCenter />,\n  Kitchen: <Kitchen />,\n  LocalDining: <LocalDining />,\n  MenuBook: <MenuBook />,\n  Pets: <Pets />,\n  PlayForWork: <PlayForWork />,\n  School: <School />,\n  ShoppingCart: <ShoppingCart />,\n  Waves: <Waves />,\n  WorkOutline: <WorkOutline />,\n};\n\nexport default (state = icons, _) => state;\n","import { icons } from './iconsReducer';\n\nconst CREATE_CATEGORY = 'CREATE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype incomeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons.Waves;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [\n  {\n    name: 'My mom',\n    description: 'Money from my mom',\n    date: new Date(2020, 7, 25),\n    icon: icons.PlayForWork,\n  },\n  {\n    name: 'Sale book',\n    description: 'Sold a book',\n    date: new Date(2020, 7, 24),\n    icon: icons.MenuBook,\n  },\n  { name: 'Work', description: '', date: new Date(2020, 7, 23), icon: icons.WorkOutline },\n  {\n    name: 'Donations',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 22),\n    icon: icons.PlayForWork,\n  },\n];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default incomeCategoriesReducer;\n","import { icons } from './iconsReducer';\n\nconst SET_CATEGORY = 'SET_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CATEGORY';\n\ntype chargeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons.Waves;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    name: 'Food',\n    description: 'For food',\n    date: new Date(2020, 7, 26),\n    icon: icons.LocalDining,\n  },\n  {\n    name: 'Clothes',\n    description: 'For clothes',\n    date: new Date(2020, 7, 25),\n    icon: icons.EmojiSymbols,\n  },\n  { name: 'Restoraunts', description: '', date: new Date(2020, 7, 24), icon: icons.Fastfood },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    icon: icons.AllInbox,\n  },\n  { name: 'Pets', description: 'For smth else', date: new Date(2020, 7, 21), icon: icons.Pets },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeCategoryAC = (\n  category: chargeCategoryType,\n): createChargeCategoryACType => ({\n  type: SET_CATEGORY,\n  category,\n});\n\nexport const updateChargeCategoryAC = (\n  index: number,\n  category: chargeCategoryType,\n): updateChargeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  index,\n  category,\n});\n\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default chargeCategoriesReducer;\n","const SET_NEW_CHARGE = 'SET_NEW_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype newChargeACType = {\n  type: typeof SET_NEW_CHARGE;\n  charge: chargeType;\n};\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: '22/08/20', money: 300 },\n  { category: 1, description: 'For clothes', date: '23/08/20', money: 500 },\n  { category: 2, description: '', date: '24/08/20', money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    money: 390,\n  },\n  { category: 4, description: '', date: '26/08/20', money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: newChargeACType): Array<chargeType> => {\n  switch (action.type) {\n    case SET_NEW_CHARGE:\n      return [...state, action.charge];\n    default:\n      return state;\n  }\n};\n\nexport const setNewChargeAC = (charge: chargeType): newChargeACType => ({\n  type: SET_NEW_CHARGE,\n  charge,\n});\n\nexport default chargesReducer;\n","const SET_NEW_INCOME = 'SET_NEW_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype newIncomeACType = {\n  type: typeof SET_NEW_INCOME;\n  income: incomeType;\n};\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: '22/08/20', money: 500 },\n  { category: 1, description: 'For selling a book', date: '23/08/20', money: 700 },\n  { category: 2, description: '', date: '24/08/20', money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: '26/08/20', money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: newIncomeACType): Array<incomeType> => {\n  switch (action.type) {\n    case SET_NEW_INCOME:\n      return [...state, action.income];\n    default:\n      return state;\n  }\n};\n\nexport const setNewIncomeAC = (income: incomeType): newIncomeACType => ({\n  type: SET_NEW_INCOME,\n  income,\n});\n\nexport default incomesReducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport iconsReducer from './iconsReducer';\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <div>LOGO</div>\n    {/* logo */}\n    {/* navigation */}\n    <NavLink to=\"/homepage\">home</NavLink>\n    <NavLink to=\"/charts\">charts</NavLink>\n    <NavLink to=\"/categories\">categories</NavLink>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\n\nconst HomeTable = ({ category, description, date, money }) => {\n\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{category}\n\t\t\t\t</td>\n\t\t\t\t<td>{description}</td>\n\t\t\t\t<td>{date}</td>\n\t\t\t\t<td>{money}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button>:</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t);\n};\n\nexport default HomeTable;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\n\nconst Charges = ({ props }) => {\n\treturn (\n\t\t\t<div>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Category</td>\n\t\t\t\t\t\t<td>Description</td>\n\t\t\t\t\t\t<td>Date</td>\n\t\t\t\t\t\t<td>Money</td>\n\t\t\t\t\t\t<td>Action</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{[\n\t\t\t\t\t\t...props.map((el, i) => (\n\t\t\t\t\t\t\t\t<HomeTable\n\t\t\t\t\t\t\t\t\t\tname={el.category}\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)),\n\t\t\t\t\t]}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t);\n};\n\nexport default Charges;","import React from \"react\";\nimport HomeTable from \"./HomeTable\"\n\nconst Incomes = ({ props }) => {\n\treturn (\n\t\t\t<div>\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Category</td>\n\t\t\t\t\t\t<td>Description</td>\n\t\t\t\t\t\t<td>Date</td>\n\t\t\t\t\t\t<td>Money</td>\n\t\t\t\t\t\t<td>Action</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{[\n\t\t\t\t\t\t...props.map((el, i) => (\n\t\t\t\t\t\t\t\t<HomeTable\n\t\t\t\t\t\t\t\t\t\tname={el.category}\n\t\t\t\t\t\t\t\t\t\tdescription={el.description}\n\t\t\t\t\t\t\t\t\t\tdate={el.date}\n\t\t\t\t\t\t\t\t\t\tmoney={el.money}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)),\n\t\t\t\t\t]}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t);\n};\n\nexport default Incomes;","import React from 'react';\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\nimport Charges from \"./Charges\";\nimport Incomes from \"./Incomes\";\n\n// in props you have two arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n//\n//\n//\n// to set new object use the following:\n\n// props.setIncome({newObj})\n// props.setCharge({newObj})\n\nconst HomePage = (props) => {\n  return (\n      <HashRouter>\n        <div>\n          <div>\n            <div>\n              <h2>HOMEPAGE</h2>\n            </div>\n            <div>\n              <h2>Balance</h2>\n              <h1>$2,652.07</h1>\n            </div>\n          </div>\n          <div>\n            <div>\n              <NavLink to=\"/homepage/charges\">Charges</NavLink>\n              <NavLink to=\"/homepage/incomes\">Incomes</NavLink>\n            </div>\n            <div>\n              <div>\n                {/*<h4>{props.title}</h4>*/}\n                <h4>Charges</h4>\n                {/*<HomeSelect />*/}\n              </div>\n              <button>Add more</button>\n            </div>\n          </div>\n          <div>\n            <Route\n                path=\"/homepage/charges\"\n                render={() => <Charges props={props.charges}/>}\n            />\n            <Route\n                path=\"/homepage/incomes\"\n                render={() => <Incomes props={props.incomes}/>}\n            />\n          </div>\n        </div>\n      </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { setNewChargeAC } from '../../redux/chargesReducer';\nimport { setNewIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setIncome: (income) => {\n      dispatch(setNewIncomeAC(income));\n    },\n    setCharge: (charge) => {\n      dispatch(setNewChargeAC(charge));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\nimport {Line} from 'react-chartjs-2';\n\nimport './Charts.css';\n\n// in props you have four arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n\nconst divStyle = {\n    width: '99%',\n    height: '400px'\n};\n\nconst startData = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0,0,0,400);\n    gradient.addColorStop(0, 'rgb(205,221,249)');\n    gradient.addColorStop(1, 'rgb(255,255,255)');\n\n    return {\n        labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n        datasets: [\n            {\n                lineTension: 0.5,\n                backgroundColor: gradient,\n                borderColor: 'rgb(93,143,238)',\n                borderWidth: 4,\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 11, 13, 9, 11, 12, 9]\n            },\n            {\n                lineTension: 0.5,\n                backgroundColor: 'rgb(222,232,251)',\n                borderColor: 'rgb(222,232,251)',\n                borderWidth: 4,\n                borderDash: [15, 5],\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)',\n                data: [12, 14, 11, 9, 13, 12, 10],\n                fill: false\n            }\n        ]\n    }\n}\n\nclass Charts extends React.Component {\n    render() {\n        return (\n            <div className=\"line-chart\" style={divStyle}>\n                <Line\n                    data={startData}\n                    options = {{\n                        title: {\n                            display: true,\n                            text: 'Summary',\n                            fontSize: 20\n                        },\n                        legend: {\n                            display: false\n                        },\n                        scales: {\n                            yAxes: [{\n                                display: false,\n                                ticks: {\n                                    suggestedMin: 5,\n                                    suggestedMax: 15\n                                },\n                                gridLines: {\n                                    display: false,\n                                }\n                            }],\n                            xAxes: [{\n                                gridLines: {\n                                    display: false\n                                }\n                            }]\n                        },\n                        maintainAspectRatio: false\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\n// const Charts = (props) => {\n//   return (\n//     <>\n//         <div>CHARTS</div>\n//         <div className=\"summary-line\">\n//\n//         </div>\n//     </>\n//   );\n// };\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React from \"react\";\nimport ReactDOM from 'react-dom'\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst useStyles = makeStyles({\n  categoryNameBlock:{\n    display: 'flex',\n    alignItems: 'center'\n  },\n  categoryIcon:{\n    display: 'flex',\n    marginRight: '10px',\n    color: 'grey'\n  },\n  categoryName:{\n    display: 'flex',\n  }\n});\n\nconst Category = ({ name, description, date, icon }) => {\n\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest('table'))\n  };\n\n  const handleClose = (e) => {\n    console.log(e.currentTarget);\n    if (e.target.innerText === \"Delete\") {\n      console.log(e.target.parentNode.parentNode.parentNode);\n      // console.log(ReactDOM.findDOMNode(this))\n\n    }\n\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{date}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}>Edit</MenuItem>\n          <MenuItem onClick={handleClose}>Delete</MenuItem>\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import React from 'react';\n\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n});\n\nconst Charges = ({ props }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Button\n        className={classes.addButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AddIcon />}>\n        Add more\n      </Button>\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  //icon={Object.values(props.icons)[el.icon]}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from 'react';\n\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Button\n        className={classes.addButton}\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AddIcon />}>\n        Add more\n      </Button>\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date.toString()}\n                  icon={el.icon}\n                  //icon={Object.values(props.icons)[el.icon]}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// У такому форматi redux очiкуе отримувати категорii. Дата може буди як датою, так i стрiнгою:\n// { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: props.icons.Pets },\n//\n//\n// for charge CRUD use the following:\n//\n// props.createChargeCategory({newCategory})\n// props.updateChargeCategory(index, {updatedCategory});\n// props.deleteChargeCategory(index);\n//\n//\n//\n// for income CRUD use the following:\n//\n// props.createIncomeCategory({newCategory})\n// props.updateIncomeCategory(index, {updatedCategory})\n// props.deleteIncomeCategory(index)\n\nconst useStyles = makeStyles({\n  Categories: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    float: 'left',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  headerBlock: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '100px',\n  },\n  balanceTitle: {\n    textAlign: 'right',\n    fontSize: '1.2em',\n    marginBottom: '10px',\n  },\n  balanceAmount: {\n    fontSize: '1.7em',\n    fontWeight: 'bold',\n  },\n});\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div>\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport {\n  createIncomeCategoryAC,\n  updateIncomeCategoryAC,\n  deleteIncomeCategoryAC,\n} from '../../redux/incomeCategoriesReducer';\nimport {\n  createChargeCategoryAC,\n  updateChargeCategoryAC,\n  deleteChargeCategoryAC,\n} from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncomeCategory: (category) => {\n      dispatch(createIncomeCategoryAC(category));\n    },\n    updateIncomeCategory: (index, category) => {\n      dispatch(updateIncomeCategoryAC(index, category));\n    },\n    deleteIncomeCategory: (index) => {\n      dispatch(deleteIncomeCategoryAC(index));\n    },\n    createChargeCategory: (category) => {\n      dispatch(createChargeCategoryAC(category));\n    },\n    updateChargeCategory: (index, category) => {\n      dispatch(updateChargeCategoryAC(index, category));\n    },\n    deleteChargeCategory: (index) => {\n      dispatch(deleteChargeCategoryAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import { Temp } from './Temp';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Temp);\n","import React from 'react';\n\nexport const Temp = (props) => {\n  return (\n    <div>\n      {Object.values(props.icons)}\n      {props.icons[0]}\n      <div>123</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\n\n// delete this component\nimport Temp from './components/TemporaryComponent/TempContainer';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"mainContent\">\n              <Route path=\"/homepage\" render={() => <HomePage />} />\n              <Route path=\"/charts\" render={() => <Charts />} />\n              <Route path=\"/categories\" render={() => <Categories />} />\n              <Route path=\"/temp\" render={() => <Temp />} />\n            </div>\n          </div>\n        </Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}