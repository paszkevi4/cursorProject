{"version":3,"sources":["redux/incomeCategoriesReducer.js","redux/chargeCategoriesReducer.js","redux/chargesReducer.js","redux/incomesReducer.js","redux/store.js","components/Navbar/Navbar.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","name","description","date","icon","incomeCategoriesReducer","state","action","type","category","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","reducers","combineReducers","incomes","charges","incomeCategories","chargeCategories","store","createStore","NavBar","to","HomePage","props","connect","dispatch","setIncome","setNewIncomeAC","setCharge","setNewChargeAC","Charts","Category","Charges","map","el","i","key","Categories","path","render","Incomes","setIncomeCategory","setIncomeCategoryAC","setChargeCategory","setChargeCategoryAC","App","className","Navbar","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93a70d5f.chunk.js","sourcesContent":["const SET_CATEGORY = 'SET_CATEGORY';\n\nlet initialState = [\n  { name: 'My mom', description: 'Money from my mom', date: '22/08/20', icon: '' },\n  { name: 'Sale book', description: 'Sold a book', date: '23/08/20', icon: '' },\n  { name: 'Work', description: '', date: '24/08/20', icon: '' },\n  {\n    name: 'Donations',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    icon: '',\n  },\n];\n\nconst incomeCategoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    default:\n      return state;\n  }\n};\n\nexport const setIncomeCategoryAC = (category) => ({ type: SET_CATEGORY, category });\n\nexport default incomeCategoriesReducer;\n","const SET_CATEGORY = 'SET_CATEGORY';\n\nlet initialState = [\n  { name: 'Food', description: 'For food', date: '22/08/20', icon: '' },\n  { name: 'Clothes', description: 'For clothes', date: '23/08/20', icon: '' },\n  { name: 'Restoraunts', description: '', date: '24/08/20', icon: '' },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    icon: '',\n  },\n  { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: '' },\n];\n\nconst chargeCategoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    default:\n      return state;\n  }\n};\n\nexport const setChargeCategoryAC = (category) => ({ type: SET_CATEGORY, category });\n\nexport default chargeCategoriesReducer;\n","const SET_NEW_CHARGE = 'SET_NEW_CHARGE';\n\nlet initialState = [\n  { category: 0, description: 'Diner with John', date: '22/08/20', money: '' },\n  { category: 1, description: 'For clothes', date: '23/08/20', icon: '' },\n  { category: 2, description: '', date: '24/08/20', icon: '' },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    icon: '',\n  },\n  { category: 4, description: '', date: '26/08/20', icon: '' },\n];\n\nconst chargesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEW_CHARGE:\n      return [...state, action.charge];\n    default:\n      return state;\n  }\n};\n\nexport const setNewChargeAC = (charge) => ({ type: SET_NEW_CHARGE, charge });\n\nexport default chargesReducer;\n","const SET_NEW_INCOME = 'SET_NEW_INCOME';\n\nlet initialState = [\n  { category: 0, description: 'From mom', date: '22/08/20', money: '' },\n  { category: 1, description: 'For selling a book', date: '23/08/20', icon: '' },\n  { category: 2, description: '', date: '24/08/20', icon: '' },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: '25/08/20',\n    icon: '',\n  },\n  { category: 0, description: 'Mom again', date: '26/08/20', icon: '' },\n];\n\nconst incomesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEW_INCOME:\n      return [...state, action.income];\n    default:\n      return state;\n  }\n};\n\nexport const setNewIncomeAC = (income) => ({ type: SET_NEW_INCOME, income });\n\nexport default incomesReducer;\n","import { createStore, combineReducers } from 'redux';\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nlet reducers = combineReducers({\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <div>LOGO</div>\n    {/* logo */}\n    {/* navigation */}\n    <NavLink to=\"/homepage\">home</NavLink>\n    <NavLink to=\"/charts\">charts</NavLink>\n    <NavLink to=\"/categories\">categories</NavLink>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\n\n// in props you have two arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n//\n//\n//\n// to set new object use the following:\n\n// props.setIncome({newObj})\n// props.setCharge({newObj})\n\nconst HomePage = (props) => {\n  return (\n    <>\n      <div>HOMEPAGE</div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { setNewChargeAC } from '../../redux/chargesReducer';\nimport { setNewIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setIncome: (income) => {\n      dispatch(setNewIncomeAC(income));\n    },\n    setCharge: (charge) => {\n      dispatch(setNewChargeAC(charge));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\n// in props you have four arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n\nconst Charts = (props) => {\n  return (\n    <>\n      <div>CHARTS</div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React from \"react\";\n\nconst Category = ({ name, description, date, icon }) => {\n  return (\n    <tr>\n      <td>\n        {icon}\n        {name}\n      </td>\n      <td>{description}</td>\n      <td>{date}</td>\n      <td>\n        <button>:</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Category;\n","import React from \"react\";\nimport Category from \"./Category\";\n\nconst Charges = ({ props }) => {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>Category</td>\n            <td>Description</td>\n            <td>Date</td>\n            <td>Action</td>\n          </tr>\n        </thead>\n        <tbody>\n          {[\n            ...props.map((el, i) => (\n              <Category\n                name={el.name}\n                description={el.description}\n                date={el.date}\n                icon={el.icon}\n                key={i}\n              />\n            )),\n          ]}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from \"react\";\nimport Category from \"./Category\";\n\nconst Charges = ({ props }) => {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <td>Category</td>\n            <td>Description</td>\n            <td>Date</td>\n            <td>Action</td>\n          </tr>\n        </thead>\n        <tbody>\n          {[\n            ...props.map((el, i) => (\n              <Category\n                name={el.name}\n                description={el.description}\n                date={el.date}\n                icon={el.icon}\n                key={i}\n              />\n            )),\n          ]}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from \"react\";\nimport { NavLink, Route, HashRouter } from \"react-router-dom\";\nimport Charges from \"./Charges\";\nimport Incomes from \"./Incomes\";\n\n// in props you have two arrays of objects:\n\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n//\n//\n//\n// to set new object use the following:\n\n// props.setIncomeCategory({newObj})\n// props.setChargeCategory({newObj})\n\nconst Categories = (props) => {\n  return (\n    <HashRouter>\n      <div>\n        <div>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div>\n            <div>Balance</div>\n            <div>$2,652.07</div>\n          </div>\n        </div>\n        <div>\n          <div>\n            <NavLink to=\"/categories/charges\">Charges</NavLink>\n            <NavLink to=\"/categories/incomes\">Incomes</NavLink>\n          </div>\n          <button>Add more</button>\n        </div>\n        <div>\n          <Route\n            path=\"/categories/charges\"\n            render={() => <Charges props={props.chargeCategories} />}\n          />\n          <Route\n            path=\"/categories/incomes\"\n            render={() => <Incomes props={props.incomeCategories}/>}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport { setIncomeCategoryAC } from '../../redux/incomeCategoriesReducer';\nimport { setChargeCategoryAC } from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    setIncomeCategory: (category) => {\n      dispatch(setIncomeCategoryAC(category));\n    },\n    setChargeCategory: (category) => {\n      dispatch(setChargeCategoryAC(category));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"mainContent\">\n              <Route path=\"/homepage\" render={() => <HomePage />} />\n              <Route path=\"/charts\" render={() => <Charts />} />\n              <Route path=\"/categories\" render={() => <Categories />} />\n            </div>\n          </div>\n        </Provider>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}