{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","incomesReducer","incomes","income","reducers","combineReducers","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","window","minWidth","iconSelect","color","nameSelect","iconPicker","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","connect","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","handlePeriodChange","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","handleCloseDialog","e","target","innerText","confirm","icon","handleClickAlert","handleChange","event","value","id","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","label","selected","onChange","fullWidth","map","el","i","MenuItem","key","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","Snackbar","autoHideDuration","severity","HomeTable","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","toLocaleDateString","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","Charges","filtered","setFiltered","selectVal","milliseconds","time","setTime","getTime","filter","arr","getClassNamesFor","undefined","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","Incomes","createIncome","updateIncome","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","useEffect","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","showIncomes","showCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","find","elOut","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataLine","labels","datasets","lineTension","backgroundColor","borderColor","hoverBorderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","summary","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","startDataBar","hoverBackgroundColor","barPercentage","startDataDoughnut","startForecast","round","options","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","seconds","setCurrentCategory","createChargeCategory","collection","add","catch","error","docId","doc","delete","ctegory","set","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","setSettingsThunk","onSnapshot","ss","docs","setChargeCategoriesThunk","setIncomeCategoriesThunk","setChargesThunk","fetchIncomesThunk","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.96ab67fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\r\n  authDomain: 'money-tr4cker.firebaseapp.com',\r\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\r\n  projectId: 'money-tr4cker',\r\n  storageBucket: 'money-tr4cker.appspot.com',\r\n  messagingSenderId: '166713825950',\r\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\r\n  measurementId: 'G-CN13J7CNRP',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import { db } from './firebase/firebase';\r\n\r\nconst UPDATE_USER = 'UPDATE_USER';\r\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\r\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\r\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\r\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\r\n\r\ntype stateType = {\r\n  avatar: any;\r\n  userName: string | null;\r\n  phoneNumber: any;\r\n  showWarning: boolean;\r\n  moneyLimit: number;\r\n  percentLimit?: number;\r\n};\r\n\r\ntype updateUserACType = {\r\n  type: typeof UPDATE_USER;\r\n  newUser: stateType;\r\n};\r\n\r\n// type updateUserNameACType = {\r\n//   type: typeof UPDATE_USER_NAME;\r\n//   newUserName: string;\r\n// };\r\n\r\n// type updatePhoneNumberACType = {\r\n//   type: typeof UPDATE_PHONE_NUMBER;\r\n//   newPhoneNumber: any;\r\n// };\r\n\r\n// type toggleWarningACType = {\r\n//   type: typeof TOGGLE_WARNING;\r\n//   showWarning: boolean;\r\n// };\r\n\r\n// type setLimitACType = {\r\n//   type: typeof SET_MONEY_LIMIT;\r\n//   newLimit: number;\r\n// };\r\n\r\n// type actionType =\r\n//   | updateUserACType\r\n//   | updateUserNameACType\r\n//   | updatePhoneNumberACType\r\n//   | toggleWarningACType\r\n//   | setLimitACType;\r\n\r\nconst initialState: stateType = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\r\n  userName: 'Ivan',\r\n  phoneNumber: '+380991234567',\r\n  showWarning: true,\r\n  moneyLimit: 800,\r\n  percentLimit: 40,\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      return { ...action.newUser };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\r\n  type: UPDATE_USER,\r\n  newUser,\r\n});\r\n\r\nexport const setSettingsThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('user-info').onSnapshot((ss: any) => {\r\n      dispatch(updateUserAC(ss.docs[0].data()));\r\n    });\r\n  };\r\n};\r\n\r\nexport default settingsReducer;\r\n","import React from 'react';\r\nimport {\r\n  AccountBalance,\r\n  AccountBalanceWallet,\r\n  AllInbox,\r\n  ChildFriendly,\r\n  Cake,\r\n  DirectionsBike,\r\n  DriveEta,\r\n  EmojiSymbols,\r\n  Fastfood,\r\n  Favorite,\r\n  FitnessCenter,\r\n  Kitchen,\r\n  LocalDining,\r\n  MenuBook,\r\n  Pets,\r\n  PlayForWork,\r\n  School,\r\n  ShoppingCart,\r\n  Waves,\r\n  WorkOutline,\r\n} from '@material-ui/icons';\r\n\r\nexport const icons = [\r\n  <AccountBalance />,\r\n  <AccountBalanceWallet />,\r\n  <AllInbox />,\r\n  <ChildFriendly />,\r\n  <Cake />,\r\n  <DirectionsBike />,\r\n  <DriveEta />,\r\n  <EmojiSymbols />,\r\n  <Fastfood />,\r\n  <Favorite />,\r\n  <FitnessCenter />,\r\n  <Kitchen />,\r\n  <LocalDining />,\r\n  <MenuBook />,\r\n  <Pets />,\r\n  <PlayForWork />,\r\n  <School />,\r\n  <ShoppingCart />,\r\n  <Waves />,\r\n  <WorkOutline />,\r\n];\r\n\r\nexport default (state = icons, _) => state;\r\n","import { db } from './firebase/firebase';\r\nimport { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\r\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\r\n\r\ntype chargeCategoryType = {\r\n  docId: string;\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  categories: Array<chargeCategoryType>;\r\n};\r\n\r\ntype createChargeCategoryACType = {\r\n  type: typeof SET_CATEGORY;\r\n  category: chargeCategoryType;\r\n};\r\n\r\ntype updateChargeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: chargeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createChargeCategoryACType\r\n  | updateChargeCategoryACType\r\n  | deleteChargeCategoryACType;\r\n\r\nlet initialState: Array<chargeCategoryType> = [];\r\n\r\nconst chargeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<chargeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      return [...action.categories];\r\n    case SET_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  categories,\r\n});\r\n\r\nexport const setChargeCategoriesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('charge-categories').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchChargeCategoriesAC(\r\n          ss.docs.map((el: any) => {\r\n            const category = el.data();\r\n            return { ...category, icon: icons[category.icon], docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default chargeCategoriesReducer;\r\n","import { db } from './firebase/firebase';\r\nimport { icons } from './iconsReducer';\r\n\r\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\r\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\r\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\r\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\r\n\r\ntype incomeCategoryType = {\r\n  docId: string;\r\n  name: string;\r\n  description: string;\r\n  date: Date | number;\r\n  icon: typeof icons[0];\r\n};\r\n\r\ntype fetchCategoriesACType = {\r\n  type: typeof FETCH_CATEGORIES;\r\n  categories: Array<incomeCategoryType>;\r\n};\r\n\r\ntype createIncomeCategoryACType = {\r\n  type: typeof CREATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n};\r\n\r\ntype updateIncomeCategoryACType = {\r\n  type: typeof UPDATE_CATEGORY;\r\n  category: incomeCategoryType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeCategoryACType = {\r\n  type: typeof DELETE_CATEGORY;\r\n  index: number;\r\n};\r\n\r\ntype actionType =\r\n  | fetchCategoriesACType\r\n  | createIncomeCategoryACType\r\n  | updateIncomeCategoryACType\r\n  | deleteIncomeCategoryACType;\r\n\r\nlet initialState: Array<incomeCategoryType> = [];\r\n\r\nconst incomeCategoriesReducer = (\r\n  state = initialState,\r\n  action: actionType,\r\n): Array<incomeCategoryType> => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORIES:\r\n      return [...action.categories];\r\n    case CREATE_CATEGORY:\r\n      return [...state, action.category];\r\n    case UPDATE_CATEGORY:\r\n      state.splice(action.index, 1, action.category);\r\n      return [...state];\r\n    case DELETE_CATEGORY:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchIncomeCategoriesAC = (\r\n  categories: Array<incomeCategoryType>,\r\n): fetchCategoriesACType => ({\r\n  type: FETCH_CATEGORIES,\r\n  categories,\r\n});\r\n\r\n// export const createIncomeCategoryAC = (\r\n//   category: incomeCategoryType,\r\n// ): createIncomeCategoryACType => ({\r\n//   type: CREATE_CATEGORY,\r\n//   category,\r\n// });\r\n\r\n// export const updateIncomeCategoryAC = (\r\n//   index: number,\r\n//   category: incomeCategoryType,\r\n// ): updateIncomeCategoryACType => ({\r\n//   type: UPDATE_CATEGORY,\r\n//   category,\r\n//   index,\r\n// });\r\n\r\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\r\n//   type: DELETE_CATEGORY,\r\n//   index,\r\n// });\r\n\r\nexport const setIncomeCategoriesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('income-categories').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchIncomeCategoriesAC(\r\n          ss.docs.map((el: any) => {\r\n            const category = el.data();\r\n            return { ...category, icon: icons[category.icon], docId: el.id };\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default incomeCategoriesReducer;\r\n","import { db } from './firebase/firebase';\r\n\r\nconst FETCH_CHARGES = 'FETCH_CHARGES';\r\nconst CREATE_CHARGE = 'CREATE_CHARGE';\r\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\r\nconst DELETE_CHARGE = 'DELETE_CHARGE';\r\n\r\ntype chargeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype fetchChargeACType = {\r\n  type: typeof FETCH_CHARGES;\r\n  charges: Array<chargeType>;\r\n};\r\n\r\ntype createChargeACType = {\r\n  type: typeof CREATE_CHARGE;\r\n  charge: chargeType;\r\n};\r\n\r\ntype updateChargeACType = {\r\n  type: typeof UPDATE_CHARGE;\r\n  charge: chargeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteChargeACType = {\r\n  type: typeof DELETE_CHARGE;\r\n  index: number;\r\n};\r\n\r\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType;\r\n\r\nlet initialState: Array<chargeType> = [\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 13),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\r\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\r\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\r\n  {\r\n    category: 3,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 24),\r\n    money: 390,\r\n  },\r\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\r\n];\r\n\r\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\r\n  switch (action.type) {\r\n    case FETCH_CHARGES:\r\n      return [...action.charges];\r\n    case CREATE_CHARGE:\r\n      return [...state, action.charge];\r\n    case UPDATE_CHARGE:\r\n      state.splice(action.index, 1, action.charge);\r\n      return [...state];\r\n    case DELETE_CHARGE:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\r\n  type: FETCH_CHARGES,\r\n  charges,\r\n});\r\n\r\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\r\n  type: CREATE_CHARGE,\r\n  charge,\r\n});\r\n\r\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\r\n  type: UPDATE_CHARGE,\r\n  charge,\r\n  index,\r\n});\r\n\r\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\r\n  type: DELETE_CHARGE,\r\n  index,\r\n});\r\n\r\n// THUNK\r\n\r\nexport const setChargesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('charges').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchChargesAC(\r\n          ss.docs.map((el: any) => {\r\n            return el.data();\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default chargesReducer;\r\n","import { db } from './firebase/firebase';\r\n\r\nconst FETCH_INCOMES = 'FETCH_INCOMES';\r\nconst CREATE_INCOME = 'SET_INCOME';\r\nconst UPDATE_INCOME = 'UPDATE_INCOME';\r\nconst DELETE_INCOME = 'DELEE_INCOME';\r\n\r\ntype incomeType = {\r\n  category: number;\r\n  description: string;\r\n  date: Date | string;\r\n  money: number;\r\n};\r\n\r\ntype fetchIncomesACType = {\r\n  type: typeof FETCH_INCOMES;\r\n  incomes: Array<incomeType>;\r\n};\r\n\r\ntype createIncomeACType = {\r\n  type: typeof CREATE_INCOME;\r\n  income: incomeType;\r\n};\r\n\r\ntype updateIncomeACType = {\r\n  type: typeof UPDATE_INCOME;\r\n  income: incomeType;\r\n  index: number;\r\n};\r\n\r\ntype deleteIncomeACType = {\r\n  type: typeof DELETE_INCOME;\r\n  index: number;\r\n};\r\n\r\ntype actionType = fetchIncomesACType | createIncomeACType | updateIncomeACType | deleteIncomeACType;\r\n\r\nlet initialState: Array<incomeType> = [\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 7, 23),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\r\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\r\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\r\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\r\n  {\r\n    category: 0,\r\n    description: 'Its a looooooooooooooooooooooooooooooong description',\r\n    date: new Date(2020, 8, 18),\r\n    money: 740,\r\n  },\r\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\r\n];\r\n\r\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\r\n  switch (action.type) {\r\n    case FETCH_INCOMES:\r\n      return [...action.incomes];\r\n    case CREATE_INCOME:\r\n      return [...state, action.income];\r\n    case UPDATE_INCOME:\r\n      state.splice(action.index, 1, action.income);\r\n      return [...state];\r\n    case DELETE_INCOME:\r\n      state.splice(action.index, 1);\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\r\n  type: FETCH_INCOMES,\r\n  incomes,\r\n});\r\n\r\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\r\n  type: CREATE_INCOME,\r\n  income,\r\n});\r\n\r\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\r\n  type: UPDATE_INCOME,\r\n  income,\r\n  index,\r\n});\r\n\r\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\r\n  type: DELETE_INCOME,\r\n  index,\r\n});\r\n\r\nexport const fetchIncomesThunk = () => {\r\n  return (dispatch: any) => {\r\n    db.collection('incomes').onSnapshot((ss: any) => {\r\n      dispatch(\r\n        fetchIncomesAC(\r\n          ss.docs.map((el: any) => {\r\n            return el.data();\r\n          }),\r\n        ),\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nexport default incomesReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\r\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\r\nimport chargesReducer from './chargesReducer';\r\nimport incomesReducer from './incomesReducer';\r\n\r\nimport iconsReducer from './iconsReducer';\r\nimport settingsReducer from './settingsReducer';\r\n\r\nlet reducers = combineReducers({\r\n  icons: iconsReducer,\r\n  settings: settingsReducer,\r\n  incomes: incomesReducer,\r\n  charges: chargesReducer,\r\n  incomeCategories: incomeCategoriesReducer,\r\n  chargeCategories: chargeCategoriesReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n//\r\n// Styles\r\nimport './Navbar.css';\r\nimport { List, makeStyles } from '@material-ui/core';\r\nimport logo from '../../assets/img/logo_white.png';\r\n\r\n//\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className='logo'>\r\n        <img src={logo} alt=\"logo\"/>\r\n        <h2>Money Tracker</h2>\r\n      </div>\r\n      <List>\r\n        <NavLink to=\"/homepage\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <HomeIcon />\r\n            <p>Home</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/charts\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <ShowChartIcon />\r\n            <p>Charts</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/categories\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <CategoryIcon />\r\n            <p>Categories</p>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to=\"/settings\" activeClassName='active'>\r\n          <div className='link-container'>\r\n            <SettingsIcon />\r\n            <p>Settings</p>\r\n          </div>\r\n        </NavLink>\r\n      </List>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const ModalStyles = {\r\n  window: {\r\n    minWidth: \"350px\",\r\n  },\r\n  iconSelect: {\r\n    color: \"grey\",\r\n  },\r\n  nameSelect: {\r\n    color: \"grey\",\r\n  },\r\n  iconPicker: {\r\n    color: \"grey\",\r\n  },\r\n};\r\n\r\nexport const TabsAreaStyles = {\r\n  sectionToggle: {\r\n    display: \"flex\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  toggleButton: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    letterSpacing: \"1px\",\r\n  },\r\n  toggleButtonActive: {\r\n    borderBottom: \"1px solid cornflowerblue\",\r\n  },\r\n};\r\n\r\nexport const CategoryStyles = {\r\n  categoryNameBlock: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  categoryIcon: {\r\n    display: \"flex\",\r\n    marginRight: \"10px\",\r\n    color: \"grey\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n};\r\n\r\nexport const TableStyles = {\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  tableWrapper:{\r\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\r\n    borderRadius: '25px'\r\n  },\r\n  tableHead: {\r\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\r\n  },\r\n  addButtonWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  homeMenu: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px 0\",\r\n    height: \"40px\",\r\n  },\r\n  homeSelect: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  homeMenuTitle: {\r\n    marginRight: \"20px\",\r\n  },\r\n};\r\n\r\nexport const ChartsStyles = {\r\n  root: {\r\n    marginLeft: \"3%\",\r\n    width: \"150px\",\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { ModalStyles } from '../Styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n/*const useStyles = makeStyles({\r\n  dialogWindow: {\r\n    minWidth: \"350px\",\r\n  },\r\n  nameSelect: {\r\n    color: \"grey\",\r\n  },\r\n  namePicker: {\r\n    color: \"grey\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minWidth: \"400px\",\r\n    padding: \"50px\",\r\n  },\r\n});*/\r\n\r\nconst useStyles = makeStyles(ModalStyles);\r\n\r\nconst AddCharges = ({\r\n  open,\r\n  handleClose,\r\n  createCharge,\r\n  currentTable = {\r\n    currentCategory: '',\r\n    currentName: '',\r\n    currentDescription: '',\r\n    currentDate: '',\r\n    currentMoney: '',\r\n    currentIcon: '',\r\n  },\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n  total,\r\n  handlePeriodChange,\r\n  ...props\r\n}) => {\r\n  debugger;\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [name, setName] = useState(`${currentTable.currentName}`);\r\n  const [category, setCategory] = useState(currentTable.currentCategory);\r\n  const [description, setDescription] = useState(currentTable.currentDescription);\r\n  const [date, setDate] = useState(\r\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate,\r\n  );\r\n  const [money, setMoney] = useState(currentTable.currentMoney);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n\r\n  const resetInputs = () => {\r\n    setName('');\r\n    setCategory('');\r\n    setDescription('');\r\n    setDate(values.currentDate);\r\n    setMoney('');\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === 'ADD') {\r\n      const gap = total - +money;\r\n      if (category >= 0 && money) {\r\n        if (gap <= 200) {\r\n          const isSure = window.confirm('Are you sure?');\r\n          if (isSure) {\r\n            updateCharge({\r\n              name: chargeCategories[category].name,\r\n              icon: chargeCategories[category].icon,\r\n              category: category,\r\n              description: description,\r\n              date: new Date(date),\r\n              money: +money,\r\n            });\r\n            handleClose();\r\n            resetInputs();\r\n            handleClickAlert();\r\n            handlePeriodChange();\r\n          }\r\n          return null;\r\n        } else {\r\n          updateCharge({\r\n            name: chargeCategories[category].name,\r\n            icon: chargeCategories[category].icon,\r\n            category: category,\r\n            description: description,\r\n            date: new Date(date),\r\n            money: +money,\r\n          });\r\n          handleClose();\r\n          resetInputs();\r\n          handlePeriodChange();\r\n          handleClickAlert();\r\n        }\r\n      }\r\n      handlePeriodChange();\r\n    } else if (e.target.innerText === 'CANCEL') {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n    // }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if (typeof event.target.value === 'number') {\r\n      setCategory(event.target.value);\r\n    } else if (event.target.id === 'selectName') {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === 'descriptionInput') {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === 'datePicker') {\r\n      setDate(event.target.value);\r\n    } else if (event.target.id === 'moneyInput') {\r\n      setMoney(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleClickAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-charge-title\"\r\n        aria-describedby=\"add-charge-description\">\r\n        <DialogTitle id=\"add-charge-title\">{'ADD NEW ITEM'}</DialogTitle>\r\n        <DialogContent className={classes.window}>\r\n          <div>\r\n            <TextField\r\n              id=\"selectName\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Category name (required)\"\r\n              selected={name}\r\n              value={category}\r\n              onChange={handleChange}\r\n              fullWidth>\r\n              {[\r\n                ...chargeCategories.map((el, i) => (\r\n                  <MenuItem key={i} value={i} className={classes.nameSelect}>\r\n                    {el.name}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className={classes.moneyInput}\r\n              margin=\"dense\"\r\n              id=\"moneyInput\"\r\n              label=\"Current money (required)\"\r\n              input\r\n              value={money}\r\n              type=\"number\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className={classes.pickerBlock}>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              // label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={openAlert} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"success\">\r\n          Added successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    showWarning: state.settings.showWarning,\r\n    moneyLimit: state.settings.moneyLimit,\r\n    percentLimit: state.settings.percentLimit,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AddCharges);\r\n","import React, { useState } from \"react\";\r\n// import ReactDOM from 'react-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddCharges from \"./AddCharges\";\r\nimport { CategoryStyles } from \"../Styles\";\r\n\r\n/*const useStyles = makeStyles({\r\n  categoryBlock: {\r\n    // display: 'flex',\r\n    alignItems: \"center\",\r\n  },\r\n  categoryName: {\r\n    display: \"flex\",\r\n  },\r\n});*/\r\n\r\nconst useStyles = makeStyles(CategoryStyles)\r\n\r\nconst HomeTable = ({\r\n  icon,\r\n  name,\r\n  description,\r\n  date,\r\n  money,\r\n  deleteMoney,\r\n  updateCharge,\r\n  charges,\r\n  chargeCategories,\r\n  avatar,\r\n  category,\r\n  total,\r\n  handlePeriodChange,\r\n}) => {\r\n  // console.log(propsDate.getDay());\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10\r\n        ? `0${propsDate.getMonth() + 1}`\r\n        : propsDate.getMonth() + 1,\r\n    day:\r\n      propsDate.getDate() < 10\r\n        ? +`0${propsDate.getDate()}`\r\n        : propsDate.getDate(),\r\n  };\r\n\r\n  const [currentTable, setCurrentTable] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentMoney: money,\r\n    currentDate: null,\r\n    currentCategory: category,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    console.log(e.target.closest(\"th\"));\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === \"Delete\") {\r\n      deleteMoney();\r\n      handlePeriodChange();\r\n    } else if (e.target.innerText === \"Edit\") {\r\n      setOpen(true);\r\n      setCurrentTable({\r\n        currentName: name,\r\n        currentCategory: category ,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentMoney: money,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n      console.log(\r\n        name,\r\n        description,\r\n        icon,\r\n        `${fullDate.year}-${fullDate.month}-${fullDate.day}`\r\n      );\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\r\n      <TableCell>{date.toLocaleDateString()}</TableCell>\r\n      <TableCell>{money}</TableCell>\r\n      <TableCell>\r\n        <img src={`${avatar}`} alt=\"avatar\" className={\"avatar\"} />\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"home-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleActionClick}\r\n          size=\"small\"\r\n        >\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"home-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleActionClose}\r\n        >\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n          {open && (\r\n            <AddCharges\r\n              open={open}\r\n              handleClose={handleClose}\r\n              currentTable={currentTable}\r\n              updateCharge={updateCharge}\r\n              charges={charges}\r\n              chargeCategories={chargeCategories}\r\n              total={total}\r\n              handlePeriodChange={handlePeriodChange}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default HomeTable;\r\n","import React from \"react\";\r\n\r\n const useSortTableData = (items, item, config = null) => {\r\n\tconst [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n\tconst sortedItems = React.useMemo(() => {\r\n\t\tlet sortableItems = [...items];\r\n\t\tlet sortedName = [...item];\r\n\r\n\t\tif (sortConfig !== null) {\r\n\t\t\tsortableItems.sort((a, b) => {\r\n\t\t\t\tif(sortConfig.key === \"category\" ){\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\r\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn sortableItems;\r\n\t}, [items, item, sortConfig]);\r\n\r\n\tconst requestSort = (key) => {\r\n\t\tlet direction = 'ascending';\r\n\t\tif (\r\n\t\t\t\tsortConfig &&\r\n\t\t\t\tsortConfig.key === key &&\r\n\t\t\t\tsortConfig.direction === 'ascending'\r\n\t\t) {\r\n\t\t\tdirection = 'descending';\r\n\t\t}\r\n\t\tsetSortConfig({ key, direction });\r\n\t};\r\n\r\n\treturn { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortTableData;\r\n","import React from 'react';\r\nimport HomeTable from './HomeTable';\r\nimport useSortTableData from './sortTable';\r\nimport AddCharges from './AddCharges';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { TableStyles } from '../Styles';\r\n// import FilterDate from \"./FilterDate\";\r\n// import Select from \"@material-ui/core/Select\";\r\n\r\n/*const useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'lightcyan',\r\n  },\r\n  addButton: {\r\n    display: 'flex',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minWidth: 300,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  homeSelect: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  homeMenu: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px 0',\r\n    height: '40px',\r\n  },\r\n  homeMenuTitle: {\r\n    marginRight: '20px',\r\n  },\r\n}));*/\r\n\r\nconst useStyles = makeStyles(TableStyles)\r\n\r\nconst Charges = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [filtered, setFiltered] = React.useState(props.charges); //items\r\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\r\n    if (+selectVal === 7 || +selectVal === 30) {\r\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\r\n      let currentDate = new Date();\r\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\r\n      return setFiltered([\r\n        ...props.charges.filter((arr) => {\r\n          // filtered:  ...items\r\n          console.log(arr.date.getTime() > time);\r\n          return arr.date.getTime() > time;\r\n        }),\r\n      ]);\r\n    } else if (selectVal === 'FULL_PERIOD') {\r\n      return setFiltered([...props.charges]); //items\r\n    }\r\n  };\r\n\r\n  const { items, requestSort, sortConfig } = useSortTableData(\r\n    filtered, //props.charges\r\n    props.categories,\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\r\n          <select\r\n            id=\"datePeriod\"\r\n            name=\"datePeriod\"\r\n            onChange={(event) => handlePeriodChange(event.target.value)}\r\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n            // selected={\"FULL_PERIOD\"}\r\n            defaultValue={'FULL_PERIOD'}\r\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\r\n          >\r\n            <option value=\"7\">This Week</option>\r\n            <option value=\"30\">This Month</option>\r\n            <option value=\"FULL_PERIOD\">Full period</option>\r\n          </select>\r\n          {/*<FilterDate filtered={items} />*/}\r\n        </div>\r\n\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}>\r\n          Add more\r\n        </Button>\r\n\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={props.createCharge}\r\n        charges={props.charges}\r\n        chargeCategories={props.categories}\r\n        total={props.total}\r\n        handlePeriodChange={handlePeriodChange}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table} aria-label=\"Table of Charges\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('category')}\r\n                  className={getClassNamesFor('category')}>\r\n                  {' '}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('description')}\r\n                  className={getClassNamesFor('description')}>\r\n                  {' '}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('date')}\r\n                  className={getClassNamesFor('date')}>\r\n                  {' '}\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={'table-direct'}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort('money')}\r\n                  className={getClassNamesFor('money')}>\r\n                  {' '}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell>Avatar</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...items.map((el, i) => ( \r\n                <HomeTable\r\n                  category={el.category}\r\n                  icon={props.categories[el.category]?.icon}\r\n                  name={props.categories[el.category]?.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i}\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    props.deleteMoney(i);\r\n                  }}\r\n                  updateCharge={(charge) => {\r\n                    props.updateCharge(i, charge);\r\n                  }}\r\n                  charges={props.charges}\r\n                  chargeCategories={props.categories}\r\n                  total={props.total}\r\n                  handlePeriodChange={handlePeriodChange}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import React from \"react\";\r\nimport HomeTable from \"./HomeTable\";\r\nimport AddCharges from \"./AddCharges\";\r\n//import HomeSelect from './HomeSelect';\r\nimport useSortTableData from \"./sortTable\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { TableStyles } from \"../Styles\";\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Incomes = (props) => {\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\r\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\r\n    if (+selectVal === 7 || +selectVal === 30) {\r\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\r\n      let currentDate = new Date();\r\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\r\n      return setFiltered([\r\n        ...props.incomes.filter((arr) => {\r\n          // filtered:  ...items\r\n          console.log(arr.date.getTime() > time);\r\n          return arr.date.getTime() > time;\r\n        }),\r\n      ]);\r\n    } else if (selectVal === 'FULL_PERIOD') {\r\n      return setFiltered([...props.incomes]); //items\r\n    }\r\n  };\r\n\r\n  const { items, requestSort, sortConfig } = useSortTableData(\r\n    filtered, //props.incomes,\r\n    props.categories\r\n  );\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.homeMenu}>\r\n        <div className={classes.homeSelect}>\r\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\r\n          <select\r\n              id=\"datePeriod\"\r\n              name=\"datePeriod\"\r\n              onChange={(event) => handlePeriodChange(event.target.value)}\r\n              className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\r\n              // selected={\"FULL_PERIOD\"}\r\n              defaultValue={'FULL_PERIOD'}\r\n              // value={filter ? filter.value : \"FULL_PERIOD\"}\r\n          >\r\n            <option value=\"7\">This Week</option>\r\n            <option value=\"30\">This Month</option>\r\n            <option value=\"FULL_PERIOD\">Full period</option>\r\n          </select>\r\n          {/*<FilterDate filtered={items} />*/}\r\n\r\n        </div>\r\n        <Button\r\n          className={classes.addButton}\r\n          type=\"button\"\r\n          onClick={handleClickOpen}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n        >\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCharges\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCharge={props.createIncome}\r\n        charges={props.incomes}\r\n        chargeCategories={props.categories}\r\n        handlePeriodChange={handlePeriodChange}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"category\")}\r\n                  className={getClassNamesFor(\"category\")}\r\n                >\r\n                  {\" \"}\r\n                  Category\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"description\")}\r\n                  className={getClassNamesFor(\"description\")}\r\n                >\r\n                  {\" \"}\r\n                  Description\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"date\")}\r\n                  className={getClassNamesFor(\"date\")}\r\n                >\r\n                  Date\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => requestSort(\"money\")}\r\n                  className={getClassNamesFor(\"money\")}\r\n                >\r\n                  {\" \"}\r\n                  Money\r\n                </button>\r\n              </TableCell>\r\n              <TableCell className={\"table-direct\"}>Avatar</TableCell>\r\n              <TableCell className={\"table-direct\"}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...items.map((el, i) => (\r\n                <HomeTable\r\n                  category={el.category}\r\n                  name={props.categories[el.category].name}\r\n                  icon={props.categories[el.category].icon}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  money={el.money}\r\n                  key={i} //el.name\r\n                  avatar={props.avatar}\r\n                  deleteMoney={() => {\r\n                    props.deleteMoney(i);\r\n                  }}\r\n                  updateCharge={(income) => {\r\n                    props.updateIncome(i, income);\r\n                  }}\r\n                  charges={props.incomes}\r\n                  chargeCategories={props.categories}\r\n                  handlePeriodChange={handlePeriodChange}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","export const totalCounter = (incomes, charges) => {\r\n  return totalIncomes(incomes) - totalCharges(charges);\r\n};\r\n\r\nexport const totalIncomes = (incomes) => {\r\n  return incomes.reduce((prev, curr) => {\r\n    return prev + curr.money;\r\n  }, 0);\r\n};\r\n\r\nconst totalCharges = (charges) => {\r\n  return charges.reduce((prev, curr) => {\r\n    return prev + curr.money;\r\n  }, 0);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { totalCounter, totalIncomes } from '../Functions';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  const [incomes, setIncomes] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [toWarn, setToWarn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIncomes(totalIncomes(props.incomes));\r\n  }, [props.incomes]);\r\n\r\n  useEffect(() => {\r\n    setTotal(totalCounter(props.incomes, props.charges));\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    // prettier-ignore\r\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\r\n      setToWarn(true);\r\n    } else {\r\n      setToWarn(false);\r\n    }\r\n  }, [total, incomes, props]);\r\n\r\n  return (\r\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\r\n      <div className={style.header_category}>\r\n        <h2>{props.title}</h2>\r\n      </div>\r\n      {toWarn && <p> BE aware of low budget</p>}\r\n      <div className={style.header_balance}>\r\n        <h2 className={style.header_balance__title}>Balance</h2>\r\n        <h1 className={style.header_balance__amount}>\r\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\r\n\r\n//\r\n// Styles\r\nimport './HomePage.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//\r\n// Components\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\n//\r\n//\r\n//\r\nimport { totalCounter } from '../Common/Functions';\r\nimport { TabsAreaStyles } from '../Styles';\r\n//\r\n// totalCounter(props.incomes, props.charges)\r\n//\r\n//\r\nconst useStyles = makeStyles(TabsAreaStyles)\r\n\r\nconst HomePage = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.home}>\r\n        <Header title=\"Homepage\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/homepage/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/homepage/\">\r\n            <Redirect to=\"/homepage/charges\" />\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/homepage/charges\"\r\n            render={() => (\r\n              <Charges\r\n                charges={props.charges}\r\n                categories={props.chargeCategories}\r\n                deleteMoney={props.deleteCharge}\r\n                updateCharge={props.updateCharge}\r\n                createCharge={props.createCharge}\r\n                avatar={props.avatar}\r\n                total={totalCounter(props.incomes, props.charges)}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/homepage/incomes\"\r\n            render={() => (\r\n              <Incomes\r\n                incomes={props.incomes}\r\n                categories={props.incomeCategories}\r\n                deleteMoney={props.deleteIncome}\r\n                updateIncome={props.updateIncome}\r\n                createIncome={props.createIncome}\r\n                avatar={props.avatar}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from './HomePage';\r\nimport { connect } from 'react-redux';\r\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\r\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    avatar: state.settings.avatar,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createIncome: (income) => {\r\n      dispatch(createIncomeAC(income));\r\n    },\r\n    updateIncome: (index, income) => {\r\n      dispatch(updateIncomeAC(index, income));\r\n    },\r\n    deleteIncome: (index) => {\r\n      dispatch(deleteIncomeAC(index));\r\n    },\r\n    createCharge: (charge) => {\r\n      dispatch(createChargeAC(charge));\r\n    },\r\n    updateCharge: (index, charge) => {\r\n      dispatch(updateChargeAC(index, charge));\r\n    },\r\n    deleteCharge: (index) => {\r\n      dispatch(deleteChargeAC(index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useState } from 'react';\r\n\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './Charts.css';\r\nimport { ChartsStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(ChartsStyles);\r\n\r\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\r\n  const [activePeriod, setActivePeriod] = useState(8);\r\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\r\n  const [isShowCharges, setIsShowCharges] = useState(true);\r\n\r\n  const getWeekDay = (day) => {\r\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    return days[new Date(day).getDay()];\r\n  };\r\n\r\n  const getWeek = () => setActivePeriod(8);\r\n  const getMonth = () => setActivePeriod(31);\r\n\r\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\r\n  const showCharges = () => setIsShowCharges(!isShowCharges);\r\n\r\n  const allDates = [];\r\n  const allDatesForDay = [];\r\n  const allDays = [];\r\n  const categoriesBar = [];\r\n  const categoriesDoughnut = [];\r\n  const trueDataCharges = [];\r\n  const trueDataIncomes = [];\r\n  const trueMoneyChargesDoughnut = [];\r\n  const trueMoneyIncomesBar = [];\r\n  const trueMoneyIncomes = [];\r\n  const moneyIn = [];\r\n  const moneyOut = [];\r\n  const trueMoneyCharges = [];\r\n  const allMoney = [];\r\n  let lastWeekIn = 0;\r\n  let penultimateWeekIn = 0;\r\n  let lastWeekOut = 0;\r\n  let penultimateWeekOut = 0;\r\n\r\n  for (let i = 0; i < activePeriod - 1; i++) {\r\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\r\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\r\n  }\r\n\r\n  allDates.reverse();\r\n  allDatesForDay.reverse();\r\n\r\n  allDatesForDay.map((el) => {\r\n    allDays.push(getWeekDay(el));\r\n    return allDays;\r\n  });\r\n\r\n  const fullIncomes = incomeCategories.slice();\r\n  const fullCharges = chargeCategories.slice();\r\n\r\n  fullIncomes.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  fullCharges.forEach((el, i) => {\r\n    el.id = i;\r\n    el.sum = 0;\r\n  });\r\n\r\n  incomes.map((el) => {\r\n    allMoney.push(+el.money);\r\n    if (Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < activePeriod) {\r\n      trueDataIncomes.push(el);\r\n      trueMoneyIncomes.push(el.money);\r\n      allMoney.push(+el.money);\r\n\r\n      if(fullIncomes[el.category]) {\r\n        fullIncomes[el.category].sum += el.money; \r\n      }\r\n    }\r\n\r\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\r\n      lastWeekIn += el.money\r\n    }\r\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 && Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 15) {\r\n      penultimateWeekIn += el.money\r\n    }\r\n    \r\n  });\r\n\r\n  charges.map((el) => {\r\n    if (Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < activePeriod) {\r\n      trueDataCharges.push(el);\r\n      trueMoneyCharges.push(el.money);\r\n      allMoney.push(+el.money);\r\n\r\n      if(fullCharges[el.category]) {\r\n        fullCharges[el.category].sum += el.money;\r\n      }\r\n    }\r\n    \r\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\r\n      lastWeekOut += el.money\r\n    }\r\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 && Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 15) {\r\n      penultimateWeekOut += el.money\r\n    }\r\n  });\r\n\r\n  allDates.forEach((d) => {\r\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\r\n    if (elIn) {\r\n      moneyIn.push(elIn.money);\r\n    } else {\r\n      moneyIn.push(0);\r\n    }\r\n    if (elOut) {\r\n      moneyOut.push(elOut.money);\r\n    } else {\r\n      moneyOut.push(0);\r\n    }\r\n  });\r\n\r\n  fullIncomes.map((el) => {\r\n    if (el.sum > 0) {\r\n      categoriesBar.push(el.name);\r\n      trueMoneyIncomesBar.push(el.sum);\r\n    }\r\n  });\r\n\r\n  fullCharges.map((el) => {\r\n    if (el.sum > 0) {\r\n      categoriesDoughnut.push(el.name);\r\n      trueMoneyChargesDoughnut.push(el.sum);\r\n    }\r\n  });\r\n\r\n\r\n  const maxSum = Math.max(...allMoney);\r\n  const minSum = Math.min(...allMoney);\r\n\r\n  const futureWeekIn = ((lastWeekIn - penultimateWeekIn) / penultimateWeekIn) * lastWeekIn + lastWeekIn;\r\n  const futureWeekOut = ((lastWeekOut - penultimateWeekOut) / penultimateWeekOut) * lastWeekOut + lastWeekOut;\r\n\r\n  const startDataLine = {\r\n      labels: activePeriod === 8 ? allDays : allDates,\r\n      datasets: [\r\n        {\r\n          label: 'Incomes',\r\n          lineTension: 0.5,\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          borderColor: 'rgb(93,143,238)',\r\n          hoverBorderColor: 'rgba(0,0,0,0)',\r\n          borderWidth: 4,\r\n          pointBackgroundColor: 'rgb(93,143,238)',\r\n          pointBorderColor: 'rgb(93,143,238)',\r\n          data: isShowIncomes ? moneyIn : null,\r\n        },\r\n        {\r\n          label: 'Charges',\r\n          lineTension: 0.5,\r\n          backgroundColor: 'rgb(254,132,2)',\r\n          borderColor: 'rgb(254,132,2)',\r\n          hoverBorderColor: 'rgba(0,0,0,0)',\r\n          borderWidth: 4,\r\n          borderDash: [15, 5],\r\n          pointBackgroundColor: 'rgb(254,132,2)',\r\n          pointBorderColor: 'rgb(254,132,2)',\r\n          data: isShowCharges ? moneyOut : null,\r\n          fill: false,\r\n        },\r\n      ]\r\n  };\r\n\r\n  const summary = {\r\n    title: {\r\n      display: true,\r\n      text: 'Summary',\r\n      position: 'top',\r\n      fontSize: 20\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: false,\r\n          ticks: {\r\n            suggestedMin: minSum,\r\n            suggestedMax: maxSum,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  const incomes_cat = {\r\n    title: {\r\n      display: true,\r\n      text: 'Income categories',\r\n      fontSize: 20,\r\n      fontColor: 'white',\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            suggestedMin: 0,\r\n            suggestedMax: 500,\r\n            fontColor: 'white',\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: 'white',\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  const startDataBar = {\r\n    labels: categoriesBar,\r\n    datasets: [\r\n      {\r\n        backgroundColor: 'white',\r\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 0,\r\n        barPercentage: 0.4,\r\n        data: trueMoneyIncomesBar,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const charges_cat = {\r\n    title: {\r\n      display: true,\r\n      text: 'Charges categories',\r\n      fontSize: 20,\r\n      fontColor: 'white',\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: 'right',\r\n      labels: {\r\n        fontColor: 'white',\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  const startDataDoughnut = {\r\n    labels: categoriesDoughnut,\r\n    datasets: [\r\n      {\r\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\r\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\r\n        borderWidth: 0,\r\n        data: trueMoneyChargesDoughnut,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const forecast_money = {\r\n    title:{\r\n      display:true,\r\n      text:'Forecast for incomes and charges',\r\n      fontSize:20\r\n    },\r\n    legend:{\r\n      display:true,\r\n      position:'right'\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  const startForecast = {\r\n    labels: ['Penultimate week', 'Last week', 'Future week'],\r\n    datasets: [\r\n      {\r\n        label: 'Incomes',\r\n        fill: false,\r\n        borderColor: 'rgb(93,143,238)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        pointBackgroundColor: 'rgb(93,143,238)',\r\n        pointBorderColor: 'rgb(93,143,238)',\r\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)]\r\n      },\r\n      {\r\n        label: 'Charges',\r\n        fill: false,\r\n        backgroundColor: 'rgb(254,132,2)',\r\n        borderColor: 'rgb(254,132,2)',\r\n        hoverBorderColor: 'rgba(0,0,0,0)',\r\n        borderWidth: 4,\r\n        pointBackgroundColor: 'rgb(254,132,2)',\r\n        pointBorderColor: 'rgb(254,132,2)',\r\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)]\r\n      }\r\n    ]\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"charts\">\r\n        <div className=\"line-chart__container\">\r\n          <div className=\"line-chart\">\r\n            <Line\r\n              data={startDataLine}\r\n              options={summary}\r\n            />\r\n          </div>\r\n          <div className=\"chart-buttons\">\r\n            <div className=\"chart-buttons__btn\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 31 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getMonth}>\r\n                Month\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={activePeriod === 8 ? 'btn-active' : null}\r\n                classes={{ root: classes.root, label: classes.label }}\r\n                onClick={getWeek}>\r\n                Week\r\n              </Button>\r\n            </div>\r\n            <div className=\"chart-buttons__checkbox\">\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\r\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\r\n                  Incomes\r\n                </label>\r\n              </span>\r\n              <span>\r\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\r\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\r\n                  Charges\r\n                </label>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"buttons_separated\">\r\n          <div className=\"buttons_btn__separated\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={activePeriod === 31 ? 'btn-active' : null}\r\n              classes={{ root: classes.root, label: classes.label }}\r\n              onClick={getMonth}>\r\n              Month\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={activePeriod === 8 ? 'btn-active' : null}\r\n              classes={{ root: classes.root, label: classes.label }}\r\n              onClick={getWeek}>\r\n              Week\r\n            </Button>\r\n          </div>\r\n          <div className=\"buttons_checkbox__separated\">\r\n            <span>\r\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\r\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\r\n                Incomes\r\n              </label>\r\n            </span>\r\n            <span>\r\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\r\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\r\n                Charges\r\n              </label>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bar-chart\">\r\n          <Bar\r\n            data={startDataBar}\r\n            options={incomes_cat}\r\n          />\r\n        </div>\r\n        <div className=\"doughnut-chart\">\r\n          <Doughnut\r\n            data={startDataDoughnut}\r\n            options={charges_cat}\r\n          />\r\n        </div>\r\n        <div className=\"forecast__container\">\r\n          <div className=\"forecast-chart\">\r\n            <Line\r\n              data={startForecast}\r\n              options={forecast_money}\r\n            />\r\n          </div>\r\n          <div className=\"forecast_descr\">\r\n              <h3>Your budget has changed in the last week</h3>\r\n              <p>If this continues, your incomes will <span>{lastWeekIn < penultimateWeekIn ? 'decrease or remain unchanged' : 'increase'}</span> and your charges will <span>{lastWeekOut < penultimateWeekOut ? 'decrease or remain unchanged' : 'increase'}</span>.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Charts;","import Charts from './Charts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    incomes: state.incomes,\r\n    charges: state.charges,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ModalStyles } from \"../Styles\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  MenuItem,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(ModalStyles);\r\n\r\nconst AddCategory = ({\r\n  open,\r\n  handleClose,\r\n  currentCategory = {\r\n    currentName: \"\",\r\n    currentDescription: \"\",\r\n    currentDate: \"\",\r\n    currentIcon: \"\",\r\n  },\r\n  updateCategory,\r\n  icons,\r\n}) => {\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n\r\n  const values = {\r\n    currentDate: `${today.getFullYear()}-${\r\n      today.getMonth() + 1 < 10\r\n        ? `0${today.getMonth() + 1}`\r\n        : today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n  };\r\n\r\n  const [name, setName] = useState(`${currentCategory.currentName}`);\r\n  const [description, setDescription] = useState(\r\n    currentCategory.currentDescription\r\n  );\r\n  const [date, setDate] = useState(\r\n    currentCategory.currentDate\r\n      ? currentCategory.currentDate\r\n      : values.currentDate\r\n  );\r\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\r\n\r\n  const resetInputs = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setDate(values.currentDate);\r\n    setIcon(\"\");\r\n  };\r\n\r\n  const handleCloseDialog = (e) => {\r\n    if (e.target.innerText === \"ADD\") {\r\n      if (name && icon !== \"object\" && icon) {\r\n        updateCategory({\r\n          name: name,\r\n          description: description,\r\n          date: new Date(date),\r\n          icon: icons.indexOf(icon),\r\n        });\r\n        handleClose();\r\n        resetInputs();\r\n        handleClickSuccess()\r\n      }\r\n    } else if (e.target.innerText === \"CANCEL\") {\r\n      handleClose();\r\n      resetInputs();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n      handleClickSuccess()\r\n\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.id === \"nameInput\") {\r\n      setName(event.target.value);\r\n    } else if (event.target.id === \"descriptionInput\") {\r\n      setDescription(event.target.value);\r\n    } else if (event.target.id === \"datePicker\") {\r\n      setDate(event.target.value);\r\n    } else if (typeof event.target.value === \"object\") {\r\n      setIcon(event.target.value);\r\n    }\r\n  };\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  const handleClickSuccess = () => {\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const handleCloseSuccess = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"add-category-title\"\r\n        aria-describedby=\"add-category-description\"\r\n      >\r\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\r\n        <DialogContent className={classes.window}>\r\n          <div>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"nameInput\"\r\n              label=\"Category name (required)\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={name}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"descriptionInput\"\r\n              label=\"Category description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className={classes.pickersBlock}>\r\n            <TextField\r\n              className={classes.iconPicker}\r\n              id=\"selectIcon\"\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Select category icon (required)\"\r\n              value={icon}\r\n              onChange={handleChange}\r\n              //   helperText=\"Select category icon\"\r\n              fullWidth\r\n            >\r\n              {[\r\n                ...icons.map((el, i) => (\r\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\r\n                    {el}\r\n                  </MenuItem>\r\n                )),\r\n              ]}\r\n            </TextField>\r\n            <TextField\r\n              className={classes.datePicker}\r\n              margin=\"dense\"\r\n              id=\"datePicker\"\r\n              label=\"Current date\"\r\n              type=\"date\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={date}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={openSuccess} autoHideDuration={4000} onClose={handleCloseSuccess}>\r\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n          Added successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState } from \"react\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@material-ui/core/\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport { CategoryStyles } from \"../Styles\";\r\n\r\nconst useStyles = makeStyles(CategoryStyles);\r\n\r\nconst Category = ({\r\n  name,\r\n  description,\r\n  date,\r\n  icon,\r\n  deleteCategory,\r\n  updateCategory,\r\n  icons,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const propsDate = new Date(date?.seconds * 1000);\r\n\r\n  const fullDate = {\r\n    year: propsDate.getFullYear(),\r\n    month:\r\n      propsDate.getMonth() + 1 < 10\r\n        ? `0${propsDate.getMonth() + 1}`\r\n        : propsDate.getMonth() + 1,\r\n    day:\r\n      propsDate.getDate() < 10\r\n        ? `0${propsDate.getDate()}`\r\n        : propsDate.getDate(),\r\n  };\r\n\r\n  const [currentCategory, setCurrentCategory] = useState({\r\n    currentName: name,\r\n    currentDescription: description,\r\n    currentIcon: icon,\r\n    currentDate: null,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleActionClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  const handleActionClose = (e) => {\r\n    if (e.target.innerText === \"Delete\") {\r\n      deleteCategory();\r\n    } else if (e.target.innerText === \"Edit\") {\r\n      setOpen(true);\r\n      setCurrentCategory({\r\n        currentName: name,\r\n        currentDescription: description,\r\n        currentIcon: icon,\r\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\r\n      });\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        <div className={classes.categoryNameBlock}>\r\n          <div className={classes.categoryIcon}>{icon}</div>\r\n          <div className={classes.categoryName}>{name}</div>\r\n        </div>\r\n      </TableCell>\r\n      <TableCell>{description}</TableCell>\r\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          aria-controls=\"category-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleActionClick}\r\n          size=\"small\"\r\n        >\r\n          <MoreVertIcon color=\"action\" />\r\n        </Button>\r\n        <Menu\r\n          id=\"category-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleActionClose}\r\n        >\r\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\r\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\r\n          {open && (\r\n            <AddCategory\r\n              open={open}\r\n              handleClose={handleClose}\r\n              icons={icons}\r\n              currentCategory={currentCategory}\r\n              updateCategory={updateCategory}\r\n            />\r\n          )}\r\n        </Menu>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import { db } from './firebase';\r\n\r\nexport const createChargeCategory = (category) => {\r\n  db.collection('charge-categories')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateChargeCategory = (docId, ctegory) => {\r\n  db.collection('charge-categories')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteChargeCategory = (docId) => {\r\n  db.collection('charge-categories')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport Category from './Category';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  createChargeCategory,\r\n  updateChargeCategory,\r\n  deleteChargeCategory,\r\n} from '../../redux/firebase/chargeCategoriesFB';\r\nimport { TableStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Charges = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={createChargeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.chargeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    deleteChargeCategory(el.docId);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    updateChargeCategory(el.docId, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charges;\r\n","import { db } from './firebase';\r\n\r\nexport const createIncomeCategory = (category) => {\r\n  db.collection('income-categories')\r\n    .add(category)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const updateIncomeCategory = (docId, ctegory) => {\r\n  db.collection('income-categories')\r\n    .doc(docId)\r\n    .set(ctegory)\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const deleteIncomeCategory = (docId) => {\r\n  db.collection('income-categories')\r\n    .doc(docId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCategory from \"./AddCategory\";\r\nimport Category from \"./Category\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport {\r\n  createIncomeCategory,\r\n  updateIncomeCategory,\r\n  deleteIncomeCategory,\r\n} from \"../../redux/firebase/incomeCategoriesFB\";\r\nimport {TableStyles} from '../Styles'\r\n\r\n\r\nconst useStyles = makeStyles(TableStyles);\r\n\r\nconst Incomes = ({ props }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div className={classes.addButtonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}\r\n        >\r\n          Add more\r\n        </Button>\r\n      </div>\r\n      <AddCategory\r\n        open={open}\r\n        handleClose={handleClose}\r\n        updateCategory={createIncomeCategory}\r\n        icons={props.icons}\r\n      />\r\n      <TableContainer component={Paper} className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableHead className={classes.tableHead}>\r\n            <TableRow>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Description</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[\r\n              ...props.incomeCategories.map((el, i, arr) => (\r\n                <Category\r\n                  name={el.name}\r\n                  description={el.description}\r\n                  date={el.date}\r\n                  icon={el.icon}\r\n                  key={`${el.name}${i}`}\r\n                  deleteCategory={() => {\r\n                    deleteIncomeCategory(el.docId);\r\n                  }}\r\n                  updateCategory={(category) => {\r\n                    updateIncomeCategory(el.docId, category);\r\n                  }}\r\n                  icons={props.icons}\r\n                />\r\n              )),\r\n            ]}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport Charges from './Charges';\r\nimport Incomes from './Incomes';\r\nimport Header from '../Common/Header/HedaerContainer';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {TabsAreaStyles } from '../Styles';\r\n\r\nconst useStyles = makeStyles(TabsAreaStyles);\r\n\r\nconst Categories = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <HashRouter>\r\n      <div className={classes.Categories}>\r\n        {/* <div className={classes.headerBlock}>\r\n          <div>\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className={classes.balanceBlock}>\r\n            <div className={classes.balanceTitle}>Balance</div>\r\n            <div className={classes.balanceAmount}>$2,652.07</div>\r\n          </div>\r\n        </div> */}\r\n        <Header title=\"Categories\" />\r\n        <div className={classes.sectionToggle}>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/charges\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Charges\r\n            </NavLink>\r\n          </Button>\r\n          <Button color=\"primary\">\r\n            <NavLink\r\n              to=\"/categories/incomes\"\r\n              className={classes.toggleButton}\r\n              activeClassName={classes.toggleButtonActive}>\r\n              Incomes\r\n            </NavLink>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Route exact path=\"/categories/\">\r\n            <Redirect to=\"/categories/charges\" />\r\n          </Route>\r\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\r\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport Categories from './Categories';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    icons: state.icons,\r\n    incomeCategories: state.incomeCategories,\r\n    chargeCategories: state.chargeCategories,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Categories);\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\n\r\nconst AvatarUpload = ({ img, updateInState }) => {\r\n  const updateImage = (e) => {\r\n    e.target.files[0] && updateInState(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={style.avatar}>\r\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\r\n        <img src={img} alt=\"avatar\" />\r\n      </label>\r\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUpload;\r\n\r\n// // Add a new document in collection \"cities\"\r\n// const littleUpdate = () => {\r\n//   db.collection('user-info')\r\n//     .doc('NEW')\r\n//     .set({\r\n//       userName: 'Avocado',\r\n//       moneyLimit: 2500,\r\n//       avatar: imageAsFile,\r\n//     })\r\n//     .then(function () {\r\n//       console.log('Document successfully written!');\r\n//     })\r\n//     .catch(function (error) {\r\n//       console.error('Error writing document: ', error);\r\n//     });\r\n// };\r\n\r\n// const handleFireBaseUpload = (e) => {\r\n//   e.preventDefault();\r\n//   console.log('start of upload');\r\n//   // async magic goes here...\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n// };\r\n\r\n// const updateUpload = () => {\r\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n//   uploadTask.on(\r\n//     'state_changed',\r\n//     (snapshot) => {},\r\n//     (error) => {\r\n//       console.log(error);\r\n//     },\r\n//     () => {\r\n//       storage\r\n//         .ref('images')\r\n//         .child(imageAsFile.name)\r\n//         .getDownloadURL()\r\n//         .then((url) => {\r\n//           db.collection('user-info')\r\n//             .add({\r\n//               userName: 'Ivan',\r\n//               moneyLimit: 2300,\r\n//               avatar: url,\r\n//             })\r\n//             .then(function () {\r\n//               console.log('Document successfully written!');\r\n//             });\r\n//           // db.collection('user-info')\r\n//           //   .doc('NEW')\r\n//           //   .set({\r\n//           //     userName: 'Ivan',\r\n//           //     moneyLimit: 2500,\r\n//           //   })\r\n//           //   .then(function () {\r\n//           //     console.log('Document successfully written!');\r\n//           //   })\r\n//           //   .catch(function (error) {\r\n//           //     console.error('Error writing document: ', error);\r\n//           //   });\r\n//           setImage(null);\r\n//         });\r\n//     },\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport style from '../Settings.module.css';\r\nimport { ButtonGroup, Button } from '@material-ui/core/';\r\n\r\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\r\n  const handleDecreaseLimit = () => {\r\n    if (title === 'amount') {\r\n      setLimit(limit > 100 ? limit - step : 100);\r\n    } else {\r\n      setLimit(limit > 10 ? limit - step : 10);\r\n    }\r\n  };\r\n  const handleIncreaseLimit = () => {\r\n    if (title === 'percent') {\r\n      setLimit(limit < 90 ? limit + step : 90);\r\n    } else {\r\n      setLimit(limit + step);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Remain {title}</h3>\r\n      <span className={style.limit}>{limit}</span>\r\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\r\n        <Button onClick={handleDecreaseLimit}>-</Button>\r\n        <Button onClick={handleIncreaseLimit}>+</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Limits;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  handleFireBaseUploadInfo,\r\n  handleFireBaseUploadAvatar,\r\n} from '../../redux/firebase/profileFB';\r\n\r\n// components\r\nimport Avatar from './components/AvatarUpload';\r\nimport Limits from './components/Limits';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport 'react-phone-input-2/lib/material.css';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n  const [avatarNew, setAvatarNew] = useState(null);\r\n  const [avatar, setAvatar] = useState(props.avatar);\r\n  const [name, setName] = useState(props.userName);\r\n  const [phone, setPhone] = useState(props.phoneNumber);\r\n  const [showWarning, setWarning] = useState(props.showWarning);\r\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\r\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\r\n  const [showSaved, setShowSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAvatar(props.avatar);\r\n    setName(props.userName);\r\n    setPhone(props.phoneNumber);\r\n    setWarning(props.showWarning);\r\n    setCurrentMoneyLimit(props.moneyLimit);\r\n    setCurrentPercentLimit(props.percentLimit);\r\n  }, [props]);\r\n\r\n  const uploadNewData = () => {\r\n    if (avatarNew) {\r\n      handleFireBaseUploadAvatar(\r\n        setAvatarNew,\r\n        avatarNew,\r\n        name,\r\n        phone,\r\n        showWarning,\r\n        currentMoneyLimit,\r\n        currentPercentLimit,\r\n        setShowSaved,\r\n      );\r\n    } else {\r\n      handleFireBaseUploadInfo(\r\n        avatar,\r\n        name,\r\n        phone,\r\n        showWarning,\r\n        currentMoneyLimit,\r\n        currentPercentLimit,\r\n        setShowSaved,\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Avatar img={avatar} updateInState={setAvatarNew} />\r\n      <div className={style.main}>\r\n        <div className={style.main_inner}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n          <PhoneInput\r\n            inputStyle={{ width: '100%' }}\r\n            id=\"phone\"\r\n            value={phone}\r\n            country=\"ua\"\r\n            onChange={(e) => setPhone(e)}\r\n          />\r\n        </div>\r\n        <div className={style.main_inner}>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={showWarning}\r\n                  onChange={() => {\r\n                    setWarning(!showWarning);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Warn me when remains:\"\r\n            />\r\n          </div>\r\n          <Limits\r\n            title=\"amount\"\r\n            limit={currentMoneyLimit}\r\n            setLimit={setCurrentMoneyLimit}\r\n            step={100}\r\n            disabled={!showWarning}\r\n          />\r\n          <Limits\r\n            title=\"percent\"\r\n            limit={currentPercentLimit}\r\n            setLimit={setCurrentPercentLimit}\r\n            step={5}\r\n            disabled={!showWarning}\r\n          />\r\n        </div>\r\n        <div className={style.settings_button}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\r\n            SAVE\r\n          </Button>\r\n        </div>\r\n\r\n        {showSaved && (\r\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\r\n            Your profile has been updated\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { db, storage } from './firebase';\r\n\r\nexport const handleFireBaseUploadInfo = (\r\n  avatar,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  db.collection('user-info')\r\n    .doc('INFO')\r\n    .set({\r\n      avatar: avatar,\r\n      userName: name,\r\n      phoneNumber: phone,\r\n      showWarning: showWarning,\r\n      moneyLimit: currentMoneyLimit,\r\n      percentLimit: currentPercentLimit,\r\n    })\r\n    .then(() => {\r\n      console.log('Document successfully written without avatar!');\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n};\r\n\r\nexport const handleFireBaseUploadAvatar = (\r\n  setAvatarNew,\r\n  avatarNew,\r\n  name,\r\n  phone,\r\n  showWarning,\r\n  currentMoneyLimit,\r\n  currentPercentLimit,\r\n  setShowSaved,\r\n) => {\r\n  setShowSaved(true);\r\n  setTimeout(() => setShowSaved(false), 2000);\r\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\r\n  console.log('start of upload');\r\n  uploadTask.on('state_changed', () => {\r\n    storage\r\n      .ref('images')\r\n      .child(`avatar.jpg`)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        db.collection('user-info')\r\n          .doc('INFO')\r\n          .set({\r\n            avatar: url,\r\n            userName: name,\r\n            phoneNumber: phone,\r\n            showWarning: showWarning,\r\n            moneyLimit: currentMoneyLimit,\r\n            percentLimit: currentPercentLimit,\r\n          })\r\n          .then(() => {\r\n            console.log('Document successfully written with avatar!');\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error: ', error);\r\n          });\r\n        setAvatarNew(null);\r\n      });\r\n  });\r\n};\r\n","import Settings from './Settings';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    ...state.settings,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Settings);\r\n","import React, { useEffect } from 'react';\r\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\n//\r\n// Redux\r\nimport { connect, Provider } from 'react-redux';\r\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\r\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\r\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\r\nimport { setChargesThunk } from '../src/redux/chargesReducer';\r\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\r\n\r\nimport store from './redux/store';\r\n\r\n//\r\n// Components\r\nimport Sidebar from './components/Navbar/Navbar';\r\nimport HomePage from './components/HomePage/HomePageContainer';\r\nimport Charts from './components/Charts/ChartsContainer';\r\nimport Categories from './components/Categories/CategoriesContainer';\r\nimport Settings from './components/Settings/SettingsContainer';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.setSettingsThunk();\r\n    props.setChargeCategoriesThunk();\r\n    props.setIncomeCategoriesThunk();\r\n    //props.setChargesThunk();\r\n    //props.fetchIncomesThunk();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar />\r\n      <main>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/homepage\" />\r\n        </Route>\r\n        <Route path=\"/homepage\" render={() => <HomePage />} />\r\n        <Route path=\"/charts\" render={() => <Charts />} />\r\n        <Route path=\"/categories\" render={() => <Categories />} />\r\n        <Route path=\"/settings\" render={() => <Settings />} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppContainer = connect(null, {\r\n  setSettingsThunk,\r\n\r\n  setChargeCategoriesThunk,\r\n  setIncomeCategoriesThunk,\r\n\r\n  setChargesThunk,\r\n  fetchIncomesThunk,\r\n})(App);\r\n\r\nconst MainAppContainer = (props) => {\r\n  return (\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default MainAppContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__28MIz\",\"avatar\":\"Settings_avatar__2X2vT\",\"main_inner\":\"Settings_main_inner__2aGPH\",\"settings_button\":\"Settings_settings_button__2pinT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VQk2\",\"header__warning\":\"Header_header__warning__1-QI2\",\"header_category\":\"Header_header_category__44h_d\",\"header_balance\":\"Header_header_balance__1C8DW\",\"header_balance__title\":\"Header_header_balance__title__1_tuK\",\"header_balance__amount\":\"Header_header_balance__amount__28jaQ\",\"header_balance__red\":\"Header_header_balance__red__12UAn\"};"],"sourceRoot":""}