{"version":3,"sources":["assets/img/logo_white.png","components/Settings/Settings.module.css","redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/settingsReducer.ts","redux/store.js","components/HomePage/HomeTable.js","components/HomePage/HomeSelect.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/Settings.js","components/Settings/SettingsContainer.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js","components/Common/Header/Header.module.css"],"names":["module","exports","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","initialState","name","description","date","Date","icon","incomeCategoriesReducer","state","action","type","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","newUserName","newPhoneNumber","newLimit","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","useStyles","makeStyles","categoryBlock","alignItems","categoryName","display","HomeTable","classes","React","useState","anchorEl","setAnchorEl","propsDate","fullDate","year","getFullYear","month","getMonth","day","getDay","handleClose","e","console","log","currentTarget","target","innerText","parentNode","TableRow","TableCell","component","scope","className","categoryIcon","Button","aria-controls","aria-haspopup","onClick","closest","size","color","id","keepMounted","open","Boolean","onClose","MenuItem","HomeSelect","onChange","val","handlePeriodChange","value","selected","useSortTableData","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","theme","table","minWidth","tableHead","backgroundColor","addButton","float","modal","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","spacing","homeSelect","homeMenu","margin","height","homeMenuTitle","marginRight","Charges","props","setOpen","getClassNamesFor","undefined","variant","startIcon","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","el","i","categories","Incomes","toString","Header","setIncomes","setCharges","total","setTotal","toWarn","setToWarn","useEffect","reduce","prev","curr","style","header","header_category","title","Alert","severity","header_balance__red","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","connect","dispatch","home","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","HomePage","to","activeClassName","exact","path","render","createIncome","createIncomeAC","updateIncome","updateIncomeAC","deleteIncome","deleteIncomeAC","createCharge","createChargeAC","updateCharge","updateChargeAC","deleteCharge","deleteChargeAC","root","marginLeft","width","label","textTransform","Charts","categoriesBar","categoriesDoughnut","incomeDates","item","push","startDataBar","labels","datasets","hoverBackgroundColor","borderColor","borderWidth","barPercentage","data","startDataDoughnut","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","pointBackgroundColor","pointBorderColor","borderDash","fill","options","text","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","position","dialogWindow","iconSelect","iconPicker","AddCategory","createCategory","currentCategory","currentName","currentDescription","currentDate","currentIcon","updateCategory","today","values","getDate","setName","setDescription","setDate","setIcon","resetInputs","handleCloseDialog","handleChange","event","Dialog","DialogTitle","DialogContent","TextField","autoFocus","fullWidth","pickersBlock","select","datePicker","DialogActions","categoryNameBlock","Category","deleteCategory","setCurrentCategory","handleActionClose","addButtonWrapper","paddingBottom","createChargeCategory","arr","deleteChargeCategory","updateChargeCategory","createIncomeCategory","deleteIncomeCategory","updateIncomeCategory","Categories","createIncomeCategoryAC","updateIncomeCategoryAC","deleteIncomeCategoryAC","createChargeCategoryAC","updateChargeCategoryAC","deleteChargeCategoryAC","Settings","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","phone","setPhone","main","inputStyle","country","updateUserName","updateUserNameAC","toolbar","mixins","drawerPaper","link","Navbar","List","ListItem","button","ListItemIcon","ListItemText","drawer","breakpoints","up","flexShrink","appBar","paddingTop","menuButton","content","flexGrow","mainLogo","maxWidth","App","window","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","container","document","body","CssBaseline","AppBar","Toolbar","IconButton","edge","Typography","noWrap","src","logo","alt","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac7bf4da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\"};","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { icons } from './iconsReducer';\n\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [\n  {\n    name: 'My mom',\n    description: 'Money from my mom',\n    date: new Date(2020, 7, 25),\n    icon: icons[15],\n  },\n  {\n    name: 'Sale book',\n    description: 'Sold a book',\n    date: new Date(2020, 7, 24),\n    icon: icons[13],\n  },\n  { name: 'Work', description: '', date: new Date(2020, 7, 23), icon: icons[19] },\n  {\n    name: 'Donations',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 22),\n    icon: icons[15],\n  },\n];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default incomeCategoriesReducer;\n","import { icons } from './iconsReducer';\n\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | string;\n  icon: typeof icons[0];\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    name: 'Food',\n    description: 'For food',\n    date: new Date(2020, 7, 26),\n    icon: icons[12],\n  },\n  {\n    name: 'Clothes',\n    description: 'For clothes',\n    date: new Date(2020, 7, 25),\n    icon: icons[7],\n  },\n  { name: 'Restoraunts', description: '', date: new Date(2020, 7, 24), icon: icons[8] },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    icon: icons[2],\n  },\n  { name: 'Pets', description: 'For smth else', date: new Date(2020, 7, 21), icon: icons[14] },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeCategoryAC = (\n  category: chargeCategoryType,\n): createChargeCategoryACType => ({\n  type: SET_CATEGORY,\n  category,\n});\n\nexport const updateChargeCategoryAC = (\n  index: number,\n  category: chargeCategoryType,\n): updateChargeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  index,\n  category,\n});\n\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default chargeCategoriesReducer;\n","const CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport default chargesReducer;\n","const CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(2020, 7, 29), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 7, 28), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 7, 25), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport default incomesReducer;\n","const UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserNameACType = {\n  type: typeof UPDATE_USER_NAME;\n  newUserName: string;\n};\n\ntype updatePhoneNumberACType = {\n  type: typeof UPDATE_PHONE_NUMBER;\n  newPhoneNumber: any;\n};\n\ntype toggleWarningACType = {\n  type: typeof TOGGLE_WARNING;\n  showWarning: boolean;\n};\n\ntype setLimitACType = {\n  type: typeof SET_MONEY_LIMIT;\n  newLimit: number;\n};\n\ntype actionType =\n  | updateUserNameACType\n  | updatePhoneNumberACType\n  | toggleWarningACType\n  | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: null,\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER_NAME:\n      return { ...state, userName: action.newUserName };\n    case UPDATE_PHONE_NUMBER:\n      return { ...state, phoneNumber: action.newPhoneNumber };\n    case TOGGLE_WARNING:\n      return { ...state, showWarning: action.showWarning };\n    case SET_MONEY_LIMIT:\n      return { ...state, moneyLimit: action.newLimit };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserNameAC = (newUserName: string): updateUserNameACType => ({\n  type: UPDATE_USER_NAME,\n  newUserName,\n});\n\nexport const updatePhoneNumberAC = (newPhoneNumber: any): updatePhoneNumberACType => ({\n  type: UPDATE_PHONE_NUMBER,\n  newPhoneNumber,\n});\n\nexport const toggleWarningAC = (showWarning = !initialState.showWarning): toggleWarningACType => ({\n  type: TOGGLE_WARNING,\n  showWarning,\n});\n\nexport const setLimitACType = (newLimit: number): setLimitACType => ({\n  type: SET_MONEY_LIMIT,\n  newLimit,\n});\n\nexport default settingsReducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers);\n\nexport default store;\n","import React from \"react\";\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import HomeModal from \"./HomeModal\";\n\nconst useStyles = makeStyles({\n\tcategoryBlock:{\n\t\t// display: 'flex',\n\t\talignItems: 'center'\n\t},\n\tcategoryName:{\n\t\tdisplay: 'flex',\n\t}\n});\n\nconst HomeTable = ({ icon, name, description, date, money }) => {\n\n\tconst classes = useStyles();\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst handleClick = (e) => {\n\t\tsetAnchorEl(e.currentTarget);\n\t\tconsole.log(e.target.closest('th'))\n\t};\n\n\tconst propsDate = new Date(date);\n\n\tconst fullDate = {\n\t\tyear: propsDate.getFullYear(),\n\t\tmonth:\n\t\t\t\tpropsDate.getMonth() + 1 < 10\n\t\t\t\t\t\t? `0${propsDate.getMonth() + 1}`\n\t\t\t\t\t\t: propsDate.getMonth() + 1,\n\t\tday:\n\t\t\t\tpropsDate.getDay() + 1 < 10\n\t\t\t\t\t\t? `0${propsDate.getDay() + 1}`\n\t\t\t\t\t\t: propsDate.getDay() + 1,\n\t};\n\n\tconst handleClose = (e) => {\n\t\tconsole.log(e.currentTarget);\n\t\tif (e.target.innerText === \"Delete\") {\n\t\t\tconsole.log(e.target.parentNode.parentNode.parentNode);\n\t\t\t// console.log(ReactDOM.findDOMNode(this))\n\t\t}\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t\t<TableRow>\n\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t<div className={classes.categoryBlock}>\n\t\t\t\t\t\t<div className={classes.categoryName}>{name}</div>\n\t\t\t\t\t\t\t<div className={classes.categoryIcon}>{icon}</div>\n\t\t\t\t\t\t{/*<div className={classes.categoryName}>`{category: {name + icon}}`</div>*/}\n\t\t\t\t\t</div>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell>{description}</TableCell>\n\t\t\t\t<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n\t\t\t\t<TableCell>{money}</TableCell>\n\t\t\t\t<TableCell>\n\t\t\t\t\t<Button\n\t\t\t\t\t\t\taria-controls=\"home-menu\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<MoreVertIcon color=\"action\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"home-menu\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem onClick={handleClose}>Edit</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={handleClose}>Delete</MenuItem>\n\t\t\t\t\t</Menu>\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t);\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n// const MySelect = React.createClass({\n// \tgetInitialState: function() {\n// \t\treturn {\n// \t\t\tvalue: 'select'\n// \t\t}\n// \t},\n// \tchange: function(event){\n// \t\tthis.setState({value: event.target.value});\n// \t},\n// \trender: function(){\n// \t\treturn(\n// \t\t\t\t<div>\n// \t\t\t\t\t<select id=\"lang\" onChange={this.change} value={this.state.value}>\n// \t\t\t\t\t\t<option value=\"select\">Select</option>\n// \t\t\t\t\t\t<option value=\"Java\">Java</option>\n// \t\t\t\t\t\t<option value=\"C++\">C++</option>\n// \t\t\t\t\t</select>\n// \t\t\t\t\t<p></p>\n// \t\t\t\t\t<p>{this.state.value}</p>\n// \t\t\t\t</div>\n// \t\t);\n// \t}\n// });\n//\n// React.render(<MySelect />, document.body);\n\n// handlePeriodChange(selVal) {\n// \tthis.props.handlePeriodChange(selVal);\n// \tif (selVal===Date.now()){return selVal.filter()}\n// }\n\n\nconst HomeSelect = ()=>{\nreturn (\n\t<select onChange={(val) => this.handlePeriodChange(val.target.value)}\n\t\t\t\tclassName=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n\t<option value=\"TODAY\">Today</option>\n\t<option value=\"THIS_WEEK\">This Week</option>\n\t<option value=\"THIS_MONTH\">This Month</option>\n\t<option value=\"THIS_YEAR\">This Year</option>\n\t<option selected value=\"LAST_AVAILABLE_DAY\">Last Availabe Day</option>\n</select>\n)\n};\n\nexport default HomeSelect;","import React from \"react\";\n\n const useSortTableData = (items, config = null) => {\n\n\tconst [sortConfig, setSortConfig] = React.useState(config);\n\n\tconst sortedItems = React.useMemo(() => {\n\t\tlet sortableItems = [...items];\n\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t}\n\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, sortConfig]);\n\n\tconst requestSort = (key) => {\n\t\tlet direction = 'ascending';\n\t\tif (\n\t\t\t\tsortConfig &&\n\t\t\t\tsortConfig.key === key &&\n\t\t\t\tsortConfig.direction === 'ascending'\n\t\t) {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\treturn { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortTableData;","import React from 'react';\nimport HomeTable from './HomeTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport HomeSelect from './HomeSelect';\nimport useSortTableData from \"./sortTable\";\n// import HomeModal from \"./HomeModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(props.charges);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          <HomeSelect />\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('category')}\n                  className={getClassNamesFor('category')}> Category\n                </button>\n              </TableCell>\n              <TableCell>\n                <button\n                    type=\"button\"\n                    onClick={() => requestSort('description')}\n                    className={getClassNamesFor('description')}> Description\n                </button>\n              </TableCell>\n              <TableCell>\n                <button\n                    type=\"button\"\n                    onClick={() => requestSort('date')}\n                    className={getClassNamesFor('date')}>  Date\n                </button>\n               </TableCell>\n              <TableCell>\n                <button\n                    type=\"button\"\n                    onClick={() => requestSort('money')}\n                    className={getClassNamesFor('money')}> Money\n                </button>\n              </TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[...items.map((el, i) => (\n                <HomeTable\n                  icon={props.categories[el.category].icon}\n                  name={props.categories[el.category].name}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\nexport default Charges;\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport HomeSelect from './HomeSelect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    float: 'right',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));\n\nconst Incomes = ({ incomes, categories }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <HomeSelect />\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Money</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...categories.map((el, i) => (\n                <HomeTable\n                  name={el.name}\n                  icon={el.icon}\n                  description={el.description}\n                  date={el.date.toString()}\n                  money={el.money}\n                  key={i}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React, { useState, useEffect } from 'react';\nimport style from './Header.module.css';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [charges, setCharges] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(\n      props.incomes.reduce((prev, curr) => {\n        return prev + curr.money;\n      }, 0),\n    );\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setCharges(\n      props.charges.reduce((prev, curr) => {\n        return prev + curr.money;\n      }, 0),\n    );\n  }, [props.charges]);\n\n  useEffect(() => {\n    setTotal(incomes - charges);\n  }, [incomes, charges]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total]);\n\n  return (\n    <div className={style.header}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && (\n        <Alert variant=\"outlined\" severity=\"warning\">\n          Be aware of low budget\n        </Alert>\n      )}\n      <div className={toWarn ? style.header_balance__red : style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\n// in props you have two arrays of objects:\n\n// props.incomes = [{category, description, date, money}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, money}, {-||-} ... {-||-}]\n//\n//\n//\n// for charge CRUD use the following:\n//\n// props.createIncome({newIncome})\n// props.updateIncome(index, {updatedIncome})\n// props.deleteIncome(index)\n//\n//\n// for income CRUD use the following:\n//\n// props.createCharge({newCharge})\n// props.updateCharge(index, {updatedCharge})\n// props.deleteCharge(index)\n\nconst useStyles = makeStyles({\n  home: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  // headerBlock: {\n  //   display: 'flex',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'top',\n  //   // marginBottom: '100px',\n  // },\n  // headerBalance: {\n  //   display: 'flex',\n  //   flexDirection: 'column',\n  //   // justifyContent: 'space-between',\n  //   alignItems: 'center',\n  //   marginBottom: '100px',\n  // },\n  // balanceTitle: {\n  //   textAlign: 'right',\n  //   fontSize: '1.2em',\n  //   marginBottom: '10px',\n  // },\n  // balanceAmount: {\n  //   fontSize: '1.7em',\n  //   fontWeight: 'bold',\n  // },\n});\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>HOMEPAGE</h2>\n          </div>\n          <div className={classes.headerBalance}>\n            <h2 className={classes.balanceTitle}>Balance</h2>\n            <h1 className={classes.balanceAmount}>$2,652.07</h1>\n          </div>\n        </div> */}\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => <Charges charges={props.charges} categories={props.chargeCategories} />}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => <Incomes incomes={props.incomes} categories={props.incomeCategories} />}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\n\nimport {Bar, Doughnut, Line} from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\n\n// in props you have four arrays of objects:\n\n// props.incomes = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.charges = [{category, description, date, icon}, {-||-} ... {-||-}]\n// props.incomeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n// props.chargeCategories = [{name, description, date, icon}, {-||-} ... {-||-}]\n\nconst useStyles = makeStyles({\n    root: {\n      marginLeft: '3%',\n      width: '150px'\n    },\n    label: {\n        textTransform: 'capitalize',\n    },\n  });\n\nconst Charts = (props) => {\n    let categoriesBar = [];\n    let categoriesDoughnut = [];\n    let incomeDates = [];\n\n\n    props.incomeCategories.map( item => categoriesBar.push(item.name) );\n    props.chargeCategories.map( item =>  categoriesDoughnut.push(item.name) );\n    props.incomes.map( item =>  incomeDates.push(item.date) );\n\n    const startDataLine = (canvas) => {\n        const ctx = canvas.getContext('2d');\n        const gradient = ctx.createLinearGradient(0,0,0,400);\n        gradient.addColorStop(0, 'rgb(205,221,249)');\n        gradient.addColorStop(1, 'rgb(255,255,255)');\n    \n        return {\n            labels: incomeDates,\n            datasets: [\n                {\n                    lineTension: 0.5,\n                    backgroundColor: gradient,\n                    borderColor: 'rgb(93,143,238)',\n                    borderWidth: 4,\n                    pointBackgroundColor: 'rgba(0,0,0,0)',\n                    pointBorderColor: 'rgba(0,0,0,0)',\n                    data: [12, 11, 13, 9, 11]\n                },\n                {\n                    lineTension: 0.5,\n                    backgroundColor: 'rgb(222,232,251)',\n                    borderColor: 'rgb(222,232,251)',\n                    borderWidth: 4,\n                    borderDash: [15, 5],\n                    pointBackgroundColor: 'rgba(0,0,0,0)',\n                    pointBorderColor: 'rgba(0,0,0,0)',\n                    data: [12, 14, 11, 9, 13],\n                    fill: false\n                }\n            ]\n        }\n    }\n\n    const startDataBar = {\n        labels: categoriesBar,\n        datasets: [\n            {\n                backgroundColor: 'rgba(75,192,192,1)',\n                hoverBackgroundColor:'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 0,\n                barPercentage: 0.4,\n                data: [500,450,410,400]\n            }\n        ]\n    };\n\n    const startDataDoughnut = {\n        labels: categoriesDoughnut,\n        datasets: [\n            {\n                backgroundColor: [\n                    'rgb(197,218,3)',\n                    'rgb(6,120,207)',\n                    'rgb(253,40,36)',\n                    'rgb(254,132,2)'\n                ],\n                hoverBackgroundColor: [\n                    'rgba(197,218,3,0.6)',\n                    'rgba(6,120,207,0.6)',\n                    'rgba(253,40,36,0.6)',\n                    'rgba(254,132,2,0.6)'\n                ],\n                borderWidth: 0,\n                data: [100,100, 100, 100, 100]\n            }\n        ]\n    };\n\n    const classes = useStyles();\n    \n    return (\n        <>\n            <div className=\"btn-wrapper\">\n                <Button variant=\"outlined\" classes={{ root: classes.root,label: classes.label }}>\n                    Month\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" classes={{ root: classes.root, label: classes.label }}>\n                    Week\n                </Button>\n            </div>\n            <div className=\"charts\">\n                <div className=\"line-chart\">\n                    <Line\n                        data={startDataLine}\n                        options = {{\n                            title: {\n                                display: true,\n                                text: 'Summary',\n                                fontSize: 20\n                            },\n                            legend: {\n                                display: false\n                            },\n                            scales: {\n                                yAxes: [{\n                                    display: false,\n                                    ticks: {\n                                        suggestedMin: 5,\n                                        suggestedMax: 15\n                                    },\n                                    gridLines: {\n                                        display: false,\n                                    }\n                                }],\n                                xAxes: [{\n                                    gridLines: {\n                                        display: false\n                                    }\n                                }]\n                            },\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </div>\n                <div className=\"bar-chart\">\n                    <Bar\n                        data={startDataBar}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Income categories',\n                                fontSize: 20\n                            },\n                            legend: {\n                                display: false\n                            },\n                            scales: {\n                                yAxes: [{\n\n                                    ticks: {\n                                        suggestedMin: 0,\n                                        suggestedMax: 500\n                                    },\n                                    gridLines: {\n                                        display: false,\n                                    }\n                                }],\n                                xAxes: [{\n                                    gridLines: {\n                                        display: false\n                                    }\n                                }]\n                            },\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </div>\n                <div className=\"doughnut-chart\">\n                    <Doughnut\n                        data={startDataDoughnut}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Charges categories',\n                                fontSize: 20\n                            },\n                            legend:{\n                                display:true,\n                                position:'right'\n                            },\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\n// const Charts = (props) => {\n//   return (\n//     <>\n//         <div>CHARTS</div>\n//         <div className=\"summary-line\">\n//\n//         </div>\n//     </>\n//   );\n// };\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  iconPicker: {\n    color: \"grey\",\n  },\n});\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  createCategory,\n  currentCategory = {\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentIcon: \"\",\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(\n    currentCategory.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentCategory.currentDate\n      ? currentCategory.currentDate\n      : values.currentDate\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName(name);\n    setDescription(description);\n    setDate(values.currentDate);\n    setIcon(icon);\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      if (name && icon) {\n        updateCategory({\n          name: name,\n          description: description,\n          date: Date(date),\n          icon: icons[icon],\n        });\n        handleClose();\n        resetInputs();\n      }\n    } else {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (typeof event.target.value === \"number\") {\n      setIcon(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name (required)\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon (required)\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\n\nconst useStyles = makeStyles({\n  categoryNameBlock: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  categoryIcon: {\n    display: 'flex',\n    marginRight: '10px',\n    color: 'grey',\n  },\n  categoryName: {\n    display: 'flex',\n  },\n});\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDay() + 1 < 10 ? `0${propsDate.getDay() + 1}` : propsDate.getDay() + 1,\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={props.createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={el.name}\n                  deleteCategory={() => {\n                    props.deleteChargeCategory(i);\n                  }}\n                  updateCategory={(category) => {\n                    props.updateChargeCategory(i, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={props.createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={el.name}\n                  deleteCategory={() => {\n                    props.deleteIncomeCategory(i);\n                  }}\n                  updateCategory={(category) => {\n                    props.updateIncomeCategory(i, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n// У такому форматi redux очiкуе отримувати категорii. Дата може буди як датою, так i стрiнгою:\n// { name: 'Pets', description: 'For smth else', date: '26/08/20', icon: props.icons[0] },\n//\n//\n// for charge CRUD use the following:\n//\n// props.createChargeCategory({newCategory})\n// props.updateChargeCategory(index, {updatedCategory});\n// props.deleteChargeCategory(index);\n//\n//\n//\n// for income CRUD use the following:\n//\n// props.createIncomeCategory({newCategory})\n// props.updateIncomeCategory(index, {updatedCategory})\n// props.deleteIncomeCategory(index)\n\nconst useStyles = makeStyles({\n  Categories: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  // headerBlock: {\n  //   display: 'flex',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'center',\n  //   marginBottom: '100px',\n  // },\n  // balanceTitle: {\n  //   textAlign: 'right',\n  //   fontSize: '1.2em',\n  //   marginBottom: '10px',\n  // },\n  // balanceAmount: {\n  //   fontSize: '1.7em',\n  //   fontWeight: 'bold',\n  // },\n});\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport {\n  createIncomeCategoryAC,\n  updateIncomeCategoryAC,\n  deleteIncomeCategoryAC,\n} from '../../redux/incomeCategoriesReducer';\nimport {\n  createChargeCategoryAC,\n  updateChargeCategoryAC,\n  deleteChargeCategoryAC,\n} from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncomeCategory: (category) => {\n      dispatch(createIncomeCategoryAC(category));\n    },\n    updateIncomeCategory: (index, category) => {\n      dispatch(updateIncomeCategoryAC(index, category));\n    },\n    deleteIncomeCategory: (index) => {\n      dispatch(deleteIncomeCategoryAC(index));\n    },\n    createChargeCategory: (category) => {\n      dispatch(createChargeCategoryAC(category));\n    },\n    updateChargeCategory: (index, category) => {\n      dispatch(updateChargeCategoryAC(index, category));\n    },\n    deleteChargeCategory: (index) => {\n      dispatch(deleteChargeCategoryAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = ({ userName, phoneNumber, showWarning, moneyLimit, percentLimit }) => {\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(percentLimit);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  return (\n    <div className={style.main}>\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        label=\"Name\"\n        id=\"name\"\n        value={name}\n        onChange={(e) => {\n          setName(e.target.value);\n        }}\n      />\n      <PhoneInput\n        inputStyle={{ width: '100%' }}\n        id=\"phone\"\n        value={phone}\n        country=\"ua\"\n        onChange={(e) => setPhone(e)}\n      />\n      <div>\n        <h2>Warn me when remains:</h2>\n      </div>\n      <div>\n        <h3>\n          Remain amount\n          <button\n            onClick={() => {\n              setCurrentMoneyLimit(currentMoneyLimit - 100);\n            }}>\n            less\n          </button>\n          <button\n            onClick={() => {\n              setCurrentMoneyLimit(currentMoneyLimit + 100);\n            }}>\n            more\n          </button>\n        </h3>\n        {currentMoneyLimit}\n      </div>\n      <div>\n        <h3>\n          Remain percent\n          <button\n            onClick={() => {\n              setCurrentPercentLimit(currentPercentLimit - 5);\n            }}>\n            less\n          </button>\n          <button\n            onClick={() => {\n              setCurrentPercentLimit(currentPercentLimit + 5);\n            }}>\n            more\n          </button>\n        </h3>\n        {currentPercentLimit}\n      </div>\n      <button>SAVE</button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\nimport { updateUserNameAC } from '../../redux/settingsReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserName: (newUserName) => {\n      dispatch(updateUserNameAC(newUserName));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from \"react\";\n\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  icon: {\n    color: \"white\",\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      <List>\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))} */}\n        <NavLink to=\"/homepage\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <HomeIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText>Home</ListItemText>\n          </ListItem>\n        </NavLink>\n        <NavLink to=\"/charts\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <ShowChartIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText>Charts</ListItemText>\n          </ListItem>\n        </NavLink>\n        <NavLink to=\"/categories\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <CategoryIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText>Categories</ListItemText>\n          </ListItem>\n        </NavLink>\n        <NavLink to=\"/settings\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <SettingsIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText>Settings</ListItemText>\n          </ListItem>\n        </NavLink>\n      </List>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { HashRouter, Route , Redirect} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport logo from \"./assets/img/logo_white.png\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n  AppBar,\n  CssBaseline,\n  Drawer,\n  Hidden,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport HomePage from \"./components/HomePage/HomePageContainer\";\nimport Charts from \"./components/Charts/ChartsContainer\";\nimport Categories from \"./components/Categories/CategoriesContainer\";\nimport Settings from \"./components/Settings/SettingsContainer\";\nimport Sidebar from \"./components/Navbar/Navbar\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      paddingTop: \"10px\",\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  // toolbar: theme.mixins.toolbar,\n\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#3f51b5\",\n    border: \"none\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingTop: \"100px\",\n  },\n  mainLogo: {\n    maxWidth: \"50px\",\n  },\n}));\n\nconst App = (props) => {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h3\" noWrap>\n                <img src={logo} alt=\"main_logo\" className={classes.mainLogo} />\n                Money Tracker\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                <Sidebar />\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                <Sidebar />\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            {/* <div className={classes.toolbar} /> */}\n            <Route exact path=\"/\">\n              <Redirect to=\"/homepage\"/>\n            </Route>\n            <Route path=\"/homepage\" render={() => <HomePage />} />\n            <Route path=\"/charts\" render={() => <Charts />} />\n            <Route path=\"/categories\" render={() => <Categories />} />\n            <Route path=\"/settings\" render={() => <Settings />} />\n          </main>\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n};\n\n// ResponsiveDrawer.propTypes = {\n//   /**\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//    */\n//   window: PropTypes.func,\n// };\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}