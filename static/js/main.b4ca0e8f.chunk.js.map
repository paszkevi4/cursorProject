{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/appReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","redux/firebase/chargesFB.js","components/HomePage/Charges.js","redux/firebase/incomeFB.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","sortingBy","wasSorted","console","log","sort","a","b","toUpperCase","seconds","incomesReducer","incomes","income","initialized","appReducer","reducers","combineReducers","app","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","window","minWidth","iconSelect","color","nameSelect","iconPicker","chargeConfirm","zIndex","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","connect","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","totalIncome","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","addEditItem","gap","gapPercent","length","confirm","temp","handleClickAlert","handleCloseDialog","e","target","innerText","handleChange","event","id","value","keyCode","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","pickerBlock","TextField","datePicker","label","fullWidth","onChange","error","autoFocus","select","selected","map","el","i","MenuItem","key","docId","onKeyUp","moneyInput","input","DialogActions","Button","onClick","Snackbar","autoHideDuration","severity","HomeTable","icon","Block","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","TableRow","TableCell","component","scope","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","collection","add","catch","Charges","React","wasSortedByCategory","setWasSortedByCategory","wasSortedByDate","setWasSortedByDate","wasSortedByDescription","setWasSortedByDescription","wasSortedByMoney","setWasSortedByMoney","sortChargesFunc","sortCharges","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","find","innerEl","doc","delete","ctegory","set","createIncome","Incomes","sortIncomesFunc","sortIncomes","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","useEffect","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","updateIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","sortChargesAC","sortIncomesAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","showIncomes","showCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","trueMoneyCharges","moneyIn","moneyOut","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","toLocaleDateString","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","tempIn","tempOut","elIn","filter","elOut","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataLine","labels","datasets","lineTension","backgroundColor","borderColor","hoverBorderColor","borderWidth","pointBackgroundColor","pointBorderColor","data","borderDash","fill","summary","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","startDataBar","hoverBackgroundColor","barPercentage","startDataDoughnut","startForecast","round","options","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","addEditCategoryHandler","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","setCurrentCategory","createChargeCategory","arr","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","initializeAppThunk","onSnapshot","ss","docs","chargeCats","incomeCats","Promise","all","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b4ca0e8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\n// type updateUserNameACType = {\n//   type: typeof UPDATE_USER_NAME;\n//   newUserName: string;\n// };\n\n// type updatePhoneNumberACType = {\n//   type: typeof UPDATE_PHONE_NUMBER;\n//   newPhoneNumber: any;\n// };\n\n// type toggleWarningACType = {\n//   type: typeof TOGGLE_WARNING;\n//   showWarning: boolean;\n// };\n\n// type setLimitACType = {\n//   type: typeof SET_MONEY_LIMIT;\n//   newLimit: number;\n// };\n\n// type actionType =\n//   | updateUserACType\n//   | updateUserNameACType\n//   | updatePhoneNumberACType\n//   | toggleWarningACType\n//   | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<chargeCategoryType>;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\nexport const setChargeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charge-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<incomeCategoryType>;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (\n  categories: Array<incomeCategoryType>,\n): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\n// export const createIncomeCategoryAC = (\n//   category: incomeCategoryType,\n// ): createIncomeCategoryACType => ({\n//   type: CREATE_CATEGORY,\n//   category,\n// });\n\n// export const updateIncomeCategoryAC = (\n//   index: number,\n//   category: incomeCategoryType,\n// ): updateIncomeCategoryACType => ({\n//   type: UPDATE_CATEGORY,\n//   category,\n//   index,\n// });\n\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n//   type: DELETE_CATEGORY,\n//   index,\n// });\n\nexport const setIncomeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('income-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomeCategoriesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_CHARGES = 'FETCH_CHARGES';\nconst CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\nconst SORT_CHARGES = 'SORT_CHARGES';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchChargeACType = {\n  type: typeof FETCH_CHARGES;\n  charges: Array<chargeType>;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype sortChargesACType = {\n  type: typeof SORT_CHARGES;\n  sortingBy: string;\n  wasSorted: boolean;\n};\n\n\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType | sortChargesACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case FETCH_CHARGES:\n      return [...action.charges];\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    case SORT_CHARGES:\n      if(action.sortingBy === 'Category'){\n        if(action.wasSorted){\n          console.log('alphabetic');\n        }\n        else{\n          console.log('non alphabetic');\n        }\n      }\n      else if(action.sortingBy === 'Description'){\n        if(action.wasSorted){\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() < b.description?.toUpperCase())? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() > b.description?.toUpperCase())? -1 : 1)]\n        }  \n      }\n      else if(action.sortingBy === 'Date'){\n        if(action.wasSorted){\n        return [...state.sort((a: any,b: any) => (a.date.seconds < b.date.seconds)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.date.seconds > b.date.seconds)? -1 : 1)]\n        }       \n      }\n      else if(action.sortingBy === 'Money'){\n        if(action.wasSorted){\n            return [...state.sort((a: any,b: any) => (a.money < b.money)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.money > b.money)? -1 : 1)]\n        }       \n      }\n    default:\n      return state;\n  }\n};\n\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\n  type: FETCH_CHARGES,\n  charges,\n});\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport const sortChargesAC = (sortingBy: string, wasSorted: boolean): sortChargesACType => ({\n  type: SORT_CHARGES,\n  sortingBy,\n  wasSorted\n});\n\n// THUNK\n\nexport const setChargesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charges1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargesAC(\n          ss.docs.map((el: any) => {\n            const charge = el.data();\n            return { ...charge, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_INCOMES = 'FETCH_INCOMES';\nconst CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELETE_INCOME';\nconst SORT_INCOMES = 'SORT_INCOMES';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchIncomesACType = {\n  type: typeof FETCH_INCOMES;\n  incomes: Array<incomeType>;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype sortIncomesACType = {\n  type: typeof SORT_INCOMES;\n  sortingBy: string;\n  wasSorted: boolean;\n};\n\ntype actionType = fetchIncomesACType | createIncomeACType | updateIncomeACType | deleteIncomeACType | sortIncomesACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 7, 23),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  // { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  // { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  // { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  // {\n  //   category: 0,\n  //   description: 'Its a looooooooooooooooooooooooooooooong description',\n  //   date: new Date(2020, 8, 18),\n  //   money: 740,\n  // },\n  // { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case FETCH_INCOMES:\n      return [...action.incomes];\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    case SORT_INCOMES:\n      if(action.sortingBy === 'Category'){\n        if(action.wasSorted){\n          console.log('alphabetic');\n        }\n        else{\n          console.log('non alphabetic');\n        }\n      }\n      else if(action.sortingBy === 'Description'){\n        if(action.wasSorted){\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() < b.description?.toUpperCase())? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.description?.toUpperCase() > b.description?.toUpperCase())? -1 : 1)]\n        }  \n      }\n      else if(action.sortingBy === 'Date'){\n        if(action.wasSorted){\n        return [...state.sort((a: any,b: any) => (a.date.seconds < b.date.seconds)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.date.seconds > b.date.seconds)? -1 : 1)]\n        }       \n      }\n      else if(action.sortingBy === 'Money'){\n        if(action.wasSorted){\n            return [...state.sort((a: any,b: any) => (a.money < b.money)? -1 : 1)]\n        } \n        else{\n          return [...state.sort((a: any,b: any) => (a.money > b.money)? -1 : 1)]\n        }       \n      }\n    default:\n      return state;\n  }\n};\n\nconst fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\n  type: FETCH_INCOMES,\n  incomes,\n});\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport const sortIncomesAC = (sortingBy: string, wasSorted: boolean): sortIncomesACType => ({\n  type: SORT_INCOMES,\n  sortingBy,\n  wasSorted\n});\n\nexport const fetchIncomesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('incomes1').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomesAC(\n          ss.docs.map((el: any) => {\n            const income = el.data();\n            return { ...income, docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomesReducer;\n","import { setSettingsThunk } from './settingsReducer';\nimport { setChargeCategoriesThunk } from './chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from './incomeCategoriesReducer';\nimport { setChargesThunk } from './chargesReducer';\nimport { fetchIncomesThunk } from './incomesReducer';\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\ntype setInitializedACType = {\n  type: typeof SET_INITIALIZED;\n};\n\nlet initialState = {\n  initialized: false,\n};\n\nconst appReducer = (state = initialState, action: setInitializedACType) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setInitializedAC = (): setInitializedACType => {\n  return { type: SET_INITIALIZED };\n};\n\nexport const initializeAppThunk = () => (dispatch: any) => {\n  const settings = dispatch(setSettingsThunk());\n  const charges = dispatch(setChargesThunk());\n  const incomes = dispatch(fetchIncomesThunk());\n  const chargeCats = dispatch(setChargeCategoriesThunk());\n  const incomeCats = dispatch(setIncomeCategoriesThunk());\n  Promise.all([settings, charges, incomes, chargeCats, incomeCats]).then(() => {\n    dispatch(setInitializedAC());\n  });\n};\n\nexport default appReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport appReducer from './appReducer';\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  app: appReducer,\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List, makeStyles } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className='logo'>\n        <img src={logo} alt=\"logo\"/>\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName='active'>\n          <div className='link-container'>\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName='active'>\n          <div className='link-container'>\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName='active'>\n          <div className='link-container'>\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName='active'>\n          <div className='link-container'>\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const ModalStyles = {\n  window: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  iconPicker: {\n    color: \"grey\",\n  },\n  chargeConfirm:{\n    zIndex: '999999999'\n  }\n};\n\nexport const TabsAreaStyles = {\n  sectionToggle: {\n    display: \"flex\",\n    marginBottom: \"20px\",\n  },\n  toggleButton: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n  },\n  toggleButtonActive: {\n    borderBottom: \"1px solid cornflowerblue\",\n  },\n};\n\nexport const CategoryStyles = {\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n};\n\nexport const TableStyles = {\n  table: {\n    minWidth: 300,\n  },\n  tableWrapper:{\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\n    borderRadius: '25px'\n  },\n  tableHead: {\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n};\n\nexport const ChartsStyles = {\n  root: {\n    marginLeft: \"3%\",\n    width: \"150px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { ModalStyles } from \"../Styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n  total,\n  totalIncome,\n  // handlePeriodChange,\n  ...props\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(currentTable.currentCategory);\n  const [description, setDescription] = useState(\n    currentTable.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n  const [money, setMoney] = useState(currentTable.currentMoney);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney(\"\");\n  };\n\n  const addEditItem = () => {\n    const gap = total - +money;\n    const gapPercent = ((total - +money) / totalIncome) * 100;\n    if (category && money > 0 && money && date.length === 10) {\n      if (\n        props.showWarning &&\n        (gap <= props.moneyLimit || gapPercent < props.percentLimit)\n      ) {\n        const isSure = window.confirm(\"Are you sure?\");\n        if (isSure) {\n          const temp = {\n            category: category,\n            description: description,\n            date: new Date(date),\n            money: +money,\n          };\n          updateCharge(temp);\n          handleClose();\n          resetInputs();\n          handleClickAlert();\n          // handlePeriodChange();\n        }\n        return null;\n      } else {\n        updateCharge({\n          //   name: chargeCategories[category].name,\n          //   icon: chargeCategories[category].icon,\n          category: category,\n          description: description,\n          date: new Date(date),\n          money: +money,\n        });\n        handleClose();\n        resetInputs();\n        handleClickAlert();\n        // handlePeriodChange();\n      }\n    }\n    // handlePeriodChange();\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditItem();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"selectName\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n      if (event.keyCode === 13) {\n        addEditItem();\n      }\n    } else {\n      setCategory(event.target.value);\n    }\n  };\n\n  const handleClickAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              autoFocus\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name*\"\n              selected={name}\n              value={category}\n              onChange={handleChange}\n              error={category.length < 1 ? true : false}\n              fullWidth\n            >\n              {[\n                chargeCategories.map((el, i) => (\n                  <MenuItem\n                    key={i}\n                    value={el.docId}\n                    className={classes.nameSelect}\n                  >\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money*\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              error={money <= 0 ? true : false}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={4000}\n        onClose={handleCloseAlert}\n      >\n        <Alert onClose={handleCloseAlert} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    showWarning: state.settings.showWarning,\n    moneyLimit: state.settings.moneyLimit,\n    percentLimit: state.settings.percentLimit,\n  };\n};\n\nexport default connect(mapStateToProps, null)(AddCharges);\n","import React, { useState } from 'react';\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCharges from './AddCharges';\nimport { CategoryStyles } from '../Styles';\n\nimport { Block } from '@material-ui/icons';\n\n/*const useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});*/\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst HomeTable = ({\n  icon = <Block />,\n  name = 'deleted category',\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n  category,\n  total,\n  totalIncome,\n  // handlePeriodChange,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n    currentCategory: category,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest('th'));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteMoney();\n      // handlePeriodChange();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentCategory: category,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      console.log(name, description, icon, `${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n      // handlePeriodChange();\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={'avatar'} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n              total={total}\n              totalIncome={totalIncome}\n              // handlePeriodChange={handlePeriodChange}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import { db } from './firebase';\n\nexport const createCharge = (category) => {\n  db.collection('charges1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateCharge = (docId, ctegory) => {\n  db.collection('charges1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteCharge = (docId) => {\n  db.collection('charges1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport HomeTable from \"./HomeTable\";\nimport useSortTableData from \"./sortTable\";\nimport AddCharges from \"./AddCharges\";\nimport {\n  createCharge,\n  updateCharge,\n  deleteCharge,\n} from \"../../redux/firebase/chargesFB\";\n\n//\n// Styles\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TableStyles } from \"../Styles\";\n\n//\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [filtered, setFiltered] = React.useState(props.charges); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered(\n        props.charges.filter((arr) => {\n          return arr.date.seconds * 1000 > time;\n        }),\n      );\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.charges]); //items\n    }\n  };\n\n\n  const [wasSortedByCategory, setWasSortedByCategory] = useState(false);\n  const [wasSortedByDate, setWasSortedByDate] = useState(false);\n  const [wasSortedByDescription, setWasSortedByDescription] = useState(false);\n  const [wasSortedByMoney, setWasSortedByMoney] = useState(false);\n\n  const sortChargesFunc = (e) => {\n    if (e.target.innerText === \"Category\") {\n      props.sortCharges(\"Category\", wasSortedByCategory);\n      setWasSortedByCategory(!wasSortedByCategory);\n    } else if (e.target.innerText === \"Date\") {\n      props.sortCharges(\"Date\", wasSortedByDate);\n      setWasSortedByDate(!wasSortedByDate);\n    } else if (e.target.innerText === \"Description\") {\n      props.sortCharges(\"Description\", wasSortedByDescription);\n      setWasSortedByDescription(!wasSortedByDescription);\n    } else if (e.target.innerText === \"Money\") {\n      props.sortCharges(\"Money\", wasSortedByMoney);\n      setWasSortedByMoney(!wasSortedByMoney);\n    }\n  };\n\n  // const [filtered, setFiltered] = React.useState(props.charges); //items\n  // const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n  //   if (+selectVal === 7 || +selectVal === 30) {\n  //     let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n  //     let currentDate = new Date();\n  //     let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n  //     return setFiltered([\n  //       ...props.charges.filter((arr) => {\n  //         // filtered:  ...items\n  //         console.log(arr.date.getTime() > time);\n  //         return arr.date.getTime() > time;\n  //       }),\n  //     ]);\n  //   } else if (selectVal === 'FULL_PERIOD') {\n  //     return setFiltered([...props.charges]); //items\n  //   }\n  // };\n\n  // const { items, requestSort, sortConfig } = useSortTableData(\n  //   filtered, //props.charges\n  //   props.categories,\n  // );\n  // const getClassNamesFor = (name) => {\n  //   if (!sortConfig) {\n  //     return;\n  //   }\n  //   return sortConfig.key === name ? sortConfig.direction : undefined;\n  // };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            // onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={\"FULL_PERIOD\"}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n        total={props.total}\n        totalIncome={props.totalIncome}\n        // handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('category')}\n                  // className={getClassNamesFor(\"category\")}\n                  onClick={sortChargesFunc}\n                >\n                  {\" \"}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('description')}\n                  // className={getClassNamesFor(\"description\")}\n                >\n                  {\" \"}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('date')}\n                  // className={getClassNamesFor(\"date\")}\n                >\n                  {\" \"}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={sortChargesFunc}\n\n                  // onClick={() => requestSort('money')}\n                  // className={getClassNamesFor(\"money\")}\n                >\n                  {\" \"}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              props.charges.map((el, i) => (\n                <HomeTable\n                  // icon={props.categories[el.category]?.icon}\n                  //name={props.categories[el.category]?.name}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteCharge(el.docId);\n                  }}\n                  updateCharge={(charge) => {\n                    updateCharge(el.docId, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                  total={props.total}\n                  totalIncome={props.totalIncome}\n                  // handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncome = (category) => {\n  db.collection('incomes1')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncome = (docId, ctegory) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncome = (docId) => {\n  db.collection('incomes1')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\nimport HomeTable from './HomeTable';\nimport AddCharges from './AddCharges';\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from './sortTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n\nimport { createIncome, updateIncome, deleteIncome } from '../../redux/firebase/incomeFB';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [wasSortedByCategory, setWasSortedByCategory] = useState(false)\n  const [wasSortedByDate, setWasSortedByDate] = useState(false)\n  const [wasSortedByDescription, setWasSortedByDescription] = useState(false)\n  const [wasSortedByMoney, setWasSortedByMoney] = useState(false)\n  \nconst sortIncomesFunc = (e)=>{\n  if(e.target.innerText === 'Category'){\n    props.sortIncomes('Category', wasSortedByCategory)\n    setWasSortedByCategory(!wasSortedByCategory);\n  }\n  else if(e.target.innerText === 'Date'){\n    props.sortIncomes('Date', wasSortedByDate)\n    setWasSortedByDate(!wasSortedByDate);\n  }\n  else if(e.target.innerText === 'Description'){\n    props.sortIncomes('Description', wasSortedByDescription)\n    setWasSortedByDescription(!wasSortedByDescription);\n  }\n  else if(e.target.innerText === 'Money'){\n    props.sortIncomes('Money', wasSortedByMoney)\n    setWasSortedByMoney(!wasSortedByMoney);\n  }\n}\n\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.incomes.filter((arr) => {\n          return arr.date.seconds * 1000 > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.incomes]); //items\n    }\n  };\n\n  // const [filtered, setFiltered] = React.useState(props.incomes); //items\n  // const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n  //   if (+selectVal === 7 || +selectVal === 30) {\n  //     let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n  //     let currentDate = new Date();\n  //     let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n  //     return setFiltered([\n  //       ...props.incomes.filter((arr) => {\n  //         // filtered:  ...items\n  //         console.log(arr.date.getTime() > time);\n  //         return arr.date.getTime() > time;\n  //       }),\n  //     ]);\n  //   } else if (selectVal === 'FULL_PERIOD') {\n  //     return setFiltered([...props.incomes]); //items\n  //   }\n  // };\n\n  // const { items, requestSort, sortConfig } = useSortTableData(\n  //   filtered, //props.incomes,\n  //   props.categories,\n  // );\n  // const getClassNamesFor = (name) => {\n  //   if (!sortConfig) {\n  //     return;\n  //   }\n  //   return sortConfig.key === name ? sortConfig.direction : undefined;\n  // };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            // onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n        // handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('category')}\n                  // className={getClassNamesFor('category')}\n                  onClick={sortIncomesFunc}\n                  >\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('description')}\n                  // className={getClassNamesFor('description')}\n                  onClick={sortIncomesFunc}\n                  >\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('date')}\n                  // className={getClassNamesFor('date')}\n                  onClick={sortIncomesFunc}\n                  >\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  // onClick={() => requestSort('money')}\n                  // className={getClassNamesFor('money')}\n                  onClick={sortIncomesFunc}\n                  >\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>Avatar</TableCell>\n              <TableCell className={'table-direct'}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              // ...items.map((el, i) => (\n              ...props.incomes.map((el, i) => (\n                <HomeTable\n                  // name={props.categories[el.category]?.name}\n                  // icon={props.categories[el.category]?.icon}\n                  category={el.category}\n                  icon={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.icon\n                  }\n                  name={\n                    props.categories.find((innerEl) => {\n                      return innerEl.docId === el.category;\n                    })?.name\n                  }\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    deleteIncome(el.docId);\n                  }}\n                  updateCharge={(income) => {\n                    updateIncome(el.docId, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                  // handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","export const totalCounter = (incomes, charges) => {\n  return totalIncomes(incomes) - totalCharges(charges);\n};\n\nexport const totalIncomes = (incomes) => {\n  return incomes.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n\nconst totalCharges = (charges) => {\n  return charges.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n","import React, { useState, useEffect } from 'react';\nimport { totalCounter, totalIncomes } from '../Functions';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(totalIncomes(props.incomes));\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setTotal(totalCounter(props.incomes, props.charges));\n  }, [props]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\n\n//\n// Styles\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// Components\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n//\n//\nimport { totalCounter } from '../Common/Functions';\nimport { totalIncomes } from '../Common/Functions';\nimport { TabsAreaStyles } from '../Styles';\n//\n// totalCounter(props.incomes, props.charges)\n//\n//\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                sortCharges={props.sortCharges}\n                avatar={props.avatar}\n                total={totalCounter(props.incomes, props.charges)}\n                totalIncome={totalIncomes(props.incomes)}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n                sortIncomes={props.sortIncomes}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC, sortChargesAC} from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC, sortIncomesAC} from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n    sortCharges: (sortingBy, wasSorted) => {\n      dispatch(sortChargesAC(sortingBy, wasSorted));\n    },\n    sortIncomes: (sortingBy, wasSorted) => {\n      dispatch(sortIncomesAC(sortingBy, wasSorted));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\nimport { ChartsStyles } from '../Styles';\n\nconst useStyles = makeStyles(ChartsStyles);\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => setActivePeriod(8);\n  const getMonth = () => setActivePeriod(31);\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const trueMoneyCharges = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const allMoney = [];\n\n  let lastWeekIn = 0;\n  let penultimateWeekIn = 0;\n  let lastWeekOut = 0;\n  let penultimateWeekOut = 0;\n  \n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = el.docId;\n    el.sum = 0;\n  });\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataIncomes.push(el);\n      trueMoneyIncomes.push(el.money);\n      allMoney.push(+el.money);\n      if (fullIncomes.find((innerEl) => innerEl.docId === el.category)) {\n        fullIncomes.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekIn += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekIn += el.money;\n    }\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < activePeriod)\n    ) {\n      trueDataCharges.push(el);\n      trueMoneyCharges.push(el.money);\n      allMoney.push(+el.money);\n\n      if (fullCharges.find((innerEl) => innerEl.docId === el.category)) {\n        fullCharges.find((innerEl) => innerEl.docId === el.category).sum += el.money;\n      }\n    }\n\n    if (Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate()) < 8)) {\n      lastWeekOut += el.money;\n    }\n    if (\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) >= 8 &&\n      Math.ceil(Math.abs(new Date(el.date * 1000).getDate() - new Date().getDate())) < 15\n    ) {\n      penultimateWeekOut += el.money;\n    }\n  });\n\n  allDates.forEach((d) => {\n    let tempIn = 0;\n    let tempOut = 0;\n    let elIn = trueDataIncomes.filter((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    let elOut = trueDataCharges.filter((el) => new Date(el.date * 1000).getDate() == d.slice(0, 2));\n    \n    if (elIn) {\n      elIn.map(el => {\n        tempIn += el.money\n      })\n      moneyIn.push(tempIn);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      elOut.map(el => {\n        tempOut += el.money \n      })\n      moneyOut.push(tempOut);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum > 0) {\n      categoriesBar.push(el.name);\n      trueMoneyIncomesBar.push(el.sum);\n    }\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum > 0) {\n      categoriesDoughnut.push(el.name);\n      trueMoneyChargesDoughnut.push(el.sum);\n    }\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  const futureWeekIn = lastWeekIn > penultimateWeekIn ? lastWeekIn - penultimateWeekIn + lastWeekIn : 0;\n  const futureWeekOut = lastWeekOut > penultimateWeekOut ? lastWeekOut - penultimateWeekOut + lastWeekOut : 0;\n\n  const startDataLine = {\n    labels: activePeriod === 8 ? allDays : allDates,\n    datasets: [\n      {\n        label: 'Incomes',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(0,0,0,0)',\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: isShowIncomes ? moneyIn : null,\n      },\n      {\n        label: 'Charges',\n        lineTension: 0.5,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        borderDash: [15, 5],\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: isShowCharges ? moneyOut : null,\n        fill: false,\n      },\n    ],\n  };\n\n  const summary = {\n    title: {\n      display: true,\n      text: 'Summary',\n      position: 'top',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          display: false,\n          ticks: {\n            suggestedMin: minSum,\n            suggestedMax: maxSum,\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const incomes_cat = {\n    title: {\n      display: true,\n      text: 'Income categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 500,\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            fontColor: 'white',\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const charges_cat = {\n    title: {\n      display: true,\n      text: 'Charges categories',\n      fontSize: 20,\n      fontColor: 'white',\n    },\n    legend: {\n      display: true,\n      position: 'right',\n      labels: {\n        fontColor: 'white',\n      },\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const forecast_money = {\n    title: {\n      display: true,\n      text: 'Forecast for incomes and charges',\n      fontSize: 20,\n    },\n    legend: {\n      display: true,\n      position: 'right',\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  const startForecast = {\n    labels: ['Penultimate week', 'Last week', 'Future week'],\n    datasets: [\n      {\n        label: 'Incomes',\n        fill: false,\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(93,143,238)',\n        pointBorderColor: 'rgb(93,143,238)',\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)],\n      },\n      {\n        label: 'Charges',\n        fill: false,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgb(254,132,2)',\n        pointBorderColor: 'rgb(254,132,2)',\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)],\n      },\n    ],\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"charts\">\n        <div className=\"line-chart__container\">\n          <div className=\"line-chart\">\n            <Line data={startDataLine} options={summary} />\n          </div>\n          <div className=\"chart-buttons\">\n            <div className=\"chart-buttons__btn\">\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 31 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getMonth}\n              >\n                Month\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 8 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getWeek}\n              >\n                Week\n              </Button>\n            </div>\n            <div className=\"chart-buttons__checkbox\">\n              <span>\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                  Incomes\n                </label>\n              </span>\n              <span>\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                  Charges\n                </label>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons_separated\">\n          <div className=\"buttons_btn__separated\">\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 31 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getMonth}\n            >\n              Month\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 8 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getWeek}\n            >\n              Week\n            </Button>\n          </div>\n          <div className=\"buttons_checkbox__separated\">\n            <span>\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                Incomes\n              </label>\n            </span>\n            <span>\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                Charges\n              </label>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"bar-chart\">\n          <Bar data={startDataBar} options={incomes_cat} />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut data={startDataDoughnut} options={charges_cat} />\n        </div>\n        <div className=\"forecast__container\">\n          <div className=\"forecast-chart\">\n            <Line data={startForecast} options={forecast_money} />\n          </div>\n          <div className=\"forecast_descr\">\n            <h3>Your budget has changed in the last week</h3>\n            <p>\n              If this continues, your incomes will{' '}\n              <span>\n                {lastWeekIn < penultimateWeekIn ? 'decrease' : 'increase'}\n              </span>{' '}\n              and charges will{' '}\n              <span>\n                {lastWeekOut < penultimateWeekOut ? 'decrease' : 'increase'}\n              </span>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useEffect, useState } from \"react\";\n\nimport { ModalStyles } from \"../Styles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  currentCategory = {\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentIcon: \"\",\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(\n    currentCategory.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentCategory.currentDate\n      ? currentCategory.currentDate\n      : values.currentDate\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setIcon(\"\");\n  };\n\n  const addEditCategoryHandler = () => {\n    if (\n      name.length >= 3 &&\n      name &&\n      icon !== \"object\" &&\n      icon &&\n      date.length === 10\n    ) {\n      updateCategory({\n        name: name,\n        description: description,\n        date: new Date(date),\n        icon: icons.indexOf(icon),\n      });\n      handleClose();\n      resetInputs();\n      handleClickSuccess();\n    }\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      addEditCategoryHandler();\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n      if (event.keyCode === 13) {\n        addEditCategoryHandler();\n      }\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === \"object\") {\n      setIcon(event.target.value);\n    }\n  };\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const handleClickSuccess = () => {\n    setOpenSuccess(true);\n  };\n\n  const handleCloseSuccess = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSuccess(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div className={classes.pickersBlock}>\n          <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date*\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n              error={date.length !== 10 ? true : false}\n            />\n            <TextField\n              autoFocus\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon*\"\n              value={icon}\n              onChange={handleChange}\n              error={typeof icon === \"string\" ? true : false}\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            \n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name*\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={name}\n              error={name.length < 3 ? true : false}\n            />\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              onKeyUp={handleChange}\n              value={description}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={4000}\n        onClose={handleCloseSuccess}\n      >\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\nimport { CategoryStyles } from '../Styles';\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.day}.${fullDate.month}.${fullDate.year}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import { db } from './firebase';\n\nexport const createChargeCategory = (category) => {\n  db.collection('charge-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateChargeCategory = (docId, ctegory) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteChargeCategory = (docId) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createChargeCategory,\n  updateChargeCategory,\n  deleteChargeCategory,\n} from '../../redux/firebase/chargeCategoriesFB';\nimport { TableStyles } from '../Styles';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteChargeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateChargeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncomeCategory = (category) => {\n  db.collection('income-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncomeCategory = (docId, ctegory) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncomeCategory = (docId) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport {\n  createIncomeCategory,\n  updateIncomeCategory,\n  deleteIncomeCategory,\n} from \"../../redux/firebase/incomeCategoriesFB\";\nimport {TableStyles} from '../Styles'\n\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteIncomeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateIncomeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {TabsAreaStyles } from '../Styles';\n\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport Categories from './Categories';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport {\n  handleFireBaseUploadInfo,\n  handleFireBaseUploadAvatar,\n} from '../../redux/firebase/profileFB';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  const uploadNewData = () => {\n    if (avatarNew) {\n      handleFireBaseUploadAvatar(\n        setAvatarNew,\n        avatarNew,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    } else {\n      handleFireBaseUploadInfo(\n        avatar,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    }\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <div className={style.main_inner}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Name\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n          <PhoneInput\n            inputStyle={{ width: '100%' }}\n            id=\"phone\"\n            value={phone}\n            country=\"ua\"\n            onChange={(e) => setPhone(e)}\n          />\n        </div>\n        <div className={style.main_inner}>\n          <div>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showWarning}\n                  onChange={() => {\n                    setWarning(!showWarning);\n                  }}\n                />\n              }\n              label=\"Warn me when remains:\"\n            />\n          </div>\n          <Limits\n            title=\"amount\"\n            limit={currentMoneyLimit}\n            setLimit={setCurrentMoneyLimit}\n            step={100}\n            disabled={!showWarning}\n          />\n          <Limits\n            title=\"percent\"\n            limit={currentPercentLimit}\n            setLimit={setCurrentPercentLimit}\n            step={5}\n            disabled={!showWarning}\n          />\n        </div>\n        <div className={style.settings_button}>\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n            SAVE\n          </Button>\n        </div>\n\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n//\n// Redux\nimport { initializeAppThunk } from '../src/redux/appReducer';\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\nimport { setChargesThunk } from '../src/redux/chargesReducer';\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\n\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initializeAppThunk();\n    // props.setSettingsThunk();\n    // props.setChargeCategoriesThunk();\n    // props.setIncomeCategoriesThunk();\n    // props.setChargesThunk();\n    // props.fetchIncomesThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      {props.initialized && (\n        <main>\n          <Route exact path=\"/\">\n            <Redirect to=\"/homepage\" />\n          </Route>\n          <Route path=\"/homepage\" render={() => <HomePage />} />\n          <Route path=\"/charts\" render={() => <Charts />} />\n          <Route path=\"/categories\" render={() => <Categories />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n        </main>\n      )}\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nconst AppContainer = connect(mapStateToProps, { initializeAppThunk })(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"avatar\":\"Settings_avatar__Y8NHF\",\"main_inner\":\"Settings_main_inner__3Vnrn\",\"settings_button\":\"Settings_settings_button__2RL5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}