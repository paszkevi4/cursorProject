{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/Styles.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","description","date","Date","money","chargesReducer","charges","charge","incomesReducer","incomes","income","reducers","combineReducers","settings","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","ModalStyles","window","minWidth","iconSelect","color","nameSelect","iconPicker","TabsAreaStyles","sectionToggle","display","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","CategoryStyles","categoryNameBlock","alignItems","categoryIcon","marginRight","categoryName","TableStyles","table","tableWrapper","boxShadow","borderRadius","tableHead","background","addButtonWrapper","justifyContent","paddingBottom","homeMenu","margin","height","homeSelect","homeMenuTitle","Alert","props","elevation","variant","useStyles","makeStyles","AddCharges","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","total","handlePeriodChange","classes","today","values","getFullYear","getMonth","getDate","useState","name","setName","setCategory","setDescription","setDate","setMoney","openAlert","setOpenAlert","resetInputs","handleCloseDialog","e","target","innerText","confirm","icon","handleClickAlert","handleChange","event","value","id","handleCloseAlert","reason","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","label","selected","onChange","fullWidth","map","el","i","MenuItem","key","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","Snackbar","autoHideDuration","severity","HomeTable","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","toLocaleDateString","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","Charges","filtered","setFiltered","selectVal","milliseconds","time","setTime","getTime","filter","arr","getClassNamesFor","undefined","defaultValue","addButton","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","Incomes","createIncome","updateIncome","totalCounter","totalIncomes","totalCharges","reduce","prev","curr","Header","setIncomes","setTotal","toWarn","setToWarn","useEffect","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","connect","dispatch","HomePage","home","exact","path","render","deleteCharge","deleteIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","lastWeekIn","penultimateWeekIn","lastWeekOut","penultimateWeekOut","push","now","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","find","elOut","showIncomes","showCharges","maxSum","max","minSum","min","futureWeekIn","futureWeekOut","startDataBar","labels","datasets","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","barPercentage","data","startDataDoughnut","startForecast","fill","hoverBorderColor","pointBackgroundColor","pointBorderColor","round","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","borderDash","options","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","defaultChecked","htmlFor","fontColor","AddCategory","updateCategory","setIcon","indexOf","handleClickSuccess","openSuccess","setOpenSuccess","handleCloseSuccess","pickersBlock","Category","deleteCategory","seconds","setCurrentCategory","createChargeCategory","collection","add","catch","error","docId","doc","delete","ctegory","set","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","main_inner","inputStyle","country","FormControlLabel","control","Switch","checked","settings_button","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","marginTop","AppContainer","setSettingsThunk","onSnapshot","ss","docs","setChargeCategoriesThunk","setIncomeCategoriesThunk","setChargesThunk","fetchIncomesThunk","MainAppContainer","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d0810b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\n// type updateUserNameACType = {\n//   type: typeof UPDATE_USER_NAME;\n//   newUserName: string;\n// };\n\n// type updatePhoneNumberACType = {\n//   type: typeof UPDATE_PHONE_NUMBER;\n//   newPhoneNumber: any;\n// };\n\n// type toggleWarningACType = {\n//   type: typeof TOGGLE_WARNING;\n//   showWarning: boolean;\n// };\n\n// type setLimitACType = {\n//   type: typeof SET_MONEY_LIMIT;\n//   newLimit: number;\n// };\n\n// type actionType =\n//   | updateUserACType\n//   | updateUserNameACType\n//   | updatePhoneNumberACType\n//   | toggleWarningACType\n//   | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<chargeCategoryType>;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\nexport const setChargeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charge-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<incomeCategoryType>;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (\n  categories: Array<incomeCategoryType>,\n): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\n// export const createIncomeCategoryAC = (\n//   category: incomeCategoryType,\n// ): createIncomeCategoryACType => ({\n//   type: CREATE_CATEGORY,\n//   category,\n// });\n\n// export const updateIncomeCategoryAC = (\n//   index: number,\n//   category: incomeCategoryType,\n// ): updateIncomeCategoryACType => ({\n//   type: UPDATE_CATEGORY,\n//   category,\n//   index,\n// });\n\n// export const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n//   type: DELETE_CATEGORY,\n//   index,\n// });\n\nexport const setIncomeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('income-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomeCategoriesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_CHARGES = 'FETCH_CHARGES';\nconst CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchChargeACType = {\n  type: typeof FETCH_CHARGES;\n  charges: Array<chargeType>;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = fetchChargeACType | createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case FETCH_CHARGES:\n      return [...action.charges];\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchChargesAC = (charges: Array<chargeType>): fetchChargeACType => ({\n  type: FETCH_CHARGES,\n  charges,\n});\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\n// THUNK\n\nexport const setChargesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charges').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargesAC(\n          ss.docs.map((el: any) => {\n            return el.data();\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargesReducer;\n","import { db } from './firebase/firebase';\n\nconst FETCH_INCOMES = 'FETCH_INCOMES';\nconst CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype fetchIncomesACType = {\n  type: typeof FETCH_INCOMES;\n  incomes: Array<incomeType>;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = fetchIncomesACType | createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 18),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case FETCH_INCOMES:\n      return [...action.incomes];\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nconst fetchIncomesAC = (incomes: Array<incomeType>): fetchIncomesACType => ({\n  type: FETCH_INCOMES,\n  incomes,\n});\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport const fetchIncomesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('incomes').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomesAC(\n          ss.docs.map((el: any) => {\n            return el.data();\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List, makeStyles } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className='logo'>\n        <img src={logo} alt=\"logo\"/>\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName='active'>\n          <div className='link-container'>\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName='active'>\n          <div className='link-container'>\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName='active'>\n          <div className='link-container'>\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName='active'>\n          <div className='link-container'>\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const ModalStyles = {\n  window: {\n    minWidth: \"350px\",\n  },\n  iconSelect: {\n    color: \"grey\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  iconPicker: {\n    color: \"grey\",\n  },\n};\n\nexport const TabsAreaStyles = {\n  sectionToggle: {\n    display: \"flex\",\n    marginBottom: \"20px\",\n  },\n  toggleButton: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n  },\n  toggleButtonActive: {\n    borderBottom: \"1px solid cornflowerblue\",\n  },\n};\n\nexport const CategoryStyles = {\n  categoryNameBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  categoryIcon: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    color: \"grey\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n};\n\nexport const TableStyles = {\n  table: {\n    minWidth: 300,\n  },\n  tableWrapper:{\n    boxShadow: '10px 10px 20px -7px rgba(0, 0, 0)',\n    borderRadius: '25px'\n  },\n  tableHead: {\n    background: \"linear-gradient(20deg,#00ffff,#ccffff)\",\n  },\n  addButtonWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    paddingBottom: \"20px\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n};\n\nexport const ChartsStyles = {\n  root: {\n    marginLeft: \"3%\",\n    width: \"150px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { ModalStyles } from \"../Styles\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n/*const useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  namePicker: {\n    color: \"grey\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: \"400px\",\n    padding: \"50px\",\n  },\n});*/\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n  total,\n  handlePeriodChange,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n\n  const [name, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(currentTable.currentCategory);\n  const [description, setDescription] = useState(currentTable.currentDescription);\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n  const [money, setMoney] = useState(currentTable.currentMoney);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney(\"\");\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      const gap = total - +money  ;\n      if (category >= 0 && money ) {\n        if (gap <= 200) {\n          const isSure = window.confirm(\"Are you sure?\");\n          if (isSure) {\n            updateCharge({\n              name: chargeCategories[category].name,\n              icon: chargeCategories[category].icon,\n              category: category,\n\t      description: description,\n\t      date: new Date(date),\n\t      money: +money,\n\t    });\n\t    handleClose();\n\t    resetInputs();\n      handleClickAlert();\n\t    handlePeriodChange();\n        }\n        return null;\n        } else {\n          updateCharge({\n            name: chargeCategories[category].name,\n            icon: chargeCategories[category].icon,\n            category: category,\n            description: description,\n            date: new Date(date),\n            money: +money,\n          });\n          handleClose();\n          resetInputs();\n          handlePeriodChange();\n          handleClickAlert();\n        }\n      }\n      handlePeriodChange();\n    } else if (e.target.innerText === \"CANCEL\") {\n          handleClose();\n          resetInputs();\n        }\n    // }\n  };\n\n  const handleChange = (event) => {\n    if (typeof event.target.value === \"number\") {\n      setCategory(event.target.value);\n    } else if (event.target.id === \"selectName\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n    }\n  };\n\n  const handleClickAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div>\n            <TextField\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name (required)\"\n              selected={name}\n              value={category}\n              onChange={handleChange}\n              fullWidth\n            >\n              {[\n                ...chargeCategories.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.nameSelect}>\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money (required)\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n            />\n          </div>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              // label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={4000}\n        onClose={handleCloseAlert}\n      >\n        <Alert onClose={handleCloseAlert} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AddCharges;\n","import React, { useState } from \"react\";\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AddCharges from \"./AddCharges\";\nimport { CategoryStyles } from \"../Styles\";\n\n/*const useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});*/\n\nconst useStyles = makeStyles(CategoryStyles)\n\nconst HomeTable = ({\n  icon,\n  name,\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n  category,\n  total,\n  handlePeriodChange,\n}) => {\n  // console.log(propsDate.getDay());\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10\n        ? `0${propsDate.getMonth() + 1}`\n        : propsDate.getMonth() + 1,\n    day:\n      propsDate.getDate() < 10\n        ? +`0${propsDate.getDate()}`\n        : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n    currentCategory: category,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest(\"th\"));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === \"Delete\") {\n      deleteMoney();\n      handlePeriodChange();\n    } else if (e.target.innerText === \"Edit\") {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentCategory: category ,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n      console.log(\n        name,\n        description,\n        icon,\n        `${fullDate.year}-${fullDate.month}-${fullDate.day}`\n      );\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n      <TableCell>{date.toLocaleDateString()}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={\"avatar\"} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}\n        >\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n              total={total}\n              handlePeriodChange={handlePeriodChange}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n const useSortTableData = (items, item, config = null) => {\n\tconst [sortConfig, setSortConfig] = React.useState(config);\n\n\tconst sortedItems = React.useMemo(() => {\n\t\tlet sortableItems = [...items];\n\t\tlet sortedName = [...item];\n\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\tif(sortConfig.key === \"category\" ){\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, item, sortConfig]);\n\n\tconst requestSort = (key) => {\n\t\tlet direction = 'ascending';\n\t\tif (\n\t\t\t\tsortConfig &&\n\t\t\t\tsortConfig.key === key &&\n\t\t\t\tsortConfig.direction === 'ascending'\n\t\t) {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\treturn { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortTableData;\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport useSortTableData from './sortTable';\nimport AddCharges from './AddCharges';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { TableStyles } from '../Styles';\n// import FilterDate from \"./FilterDate\";\n// import Select from \"@material-ui/core/Select\";\n\n/*const useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    display: 'flex',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 300,\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));*/\n\nconst useStyles = makeStyles(TableStyles)\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [filtered, setFiltered] = React.useState(props.charges); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.charges.filter((arr) => {\n          // filtered:  ...items\n          console.log(arr.date.getTime() > time);\n          return arr.date.getTime() > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.charges]); //items\n    }\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    filtered, //props.charges\n    props.categories,\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n        total={props.total}\n        handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('category')}\n                  className={getClassNamesFor('category')}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('description')}\n                  className={getClassNamesFor('description')}>\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('date')}\n                  className={getClassNamesFor('date')}>\n                  {' '}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('money')}\n                  className={getClassNamesFor('money')}>\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((el, i) => ( \n                <HomeTable\n                  category={el.category}\n                  icon={props.categories[el.category]?.icon}\n                  name={props.categories[el.category]?.name}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(charge) => {\n                    props.updateCharge(i, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                  total={props.total}\n                  handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\nimport AddCharges from \"./AddCharges\";\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from \"./sortTable\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TableStyles } from \"../Styles\";\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [filtered, setFiltered] = React.useState(props.incomes); //items\n  const handlePeriodChange = (selectVal = 'FULL_PERIOD') => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.incomes.filter((arr) => {\n          // filtered:  ...items\n          console.log(arr.date.getTime() > time);\n          return arr.date.getTime() > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      return setFiltered([...props.incomes]); //items\n    }\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    filtered, //props.incomes,\n    props.categories\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          <select\n              id=\"datePeriod\"\n              name=\"datePeriod\"\n              onChange={(event) => handlePeriodChange(event.target.value)}\n              className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n              // selected={\"FULL_PERIOD\"}\n              defaultValue={'FULL_PERIOD'}\n              // value={filter ? filter.value : \"FULL_PERIOD\"}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<FilterDate filtered={items} />*/}\n\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n        handlePeriodChange={handlePeriodChange}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"category\")}\n                  className={getClassNamesFor(\"category\")}\n                >\n                  {\" \"}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"description\")}\n                  className={getClassNamesFor(\"description\")}\n                >\n                  {\" \"}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"date\")}\n                  className={getClassNamesFor(\"date\")}\n                >\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"money\")}\n                  className={getClassNamesFor(\"money\")}\n                >\n                  {\" \"}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>Avatar</TableCell>\n              <TableCell className={\"table-direct\"}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((el, i) => (\n                <HomeTable\n                  category={el.category}\n                  name={props.categories[el.category].name}\n                  icon={props.categories[el.category].icon}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(income) => {\n                    props.updateIncome(i, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                  handlePeriodChange={handlePeriodChange}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","export const totalCounter = (incomes, charges) => {\n  return totalIncomes(incomes) - totalCharges(charges);\n};\n\nexport const totalIncomes = (incomes) => {\n  return incomes.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n\nconst totalCharges = (charges) => {\n  return charges.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n","import React, { useState, useEffect } from 'react';\nimport { totalCounter, totalIncomes } from '../Functions';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(totalIncomes(props.incomes));\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setTotal(totalCounter(props.incomes, props.charges));\n  }, [props]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\n\n//\n// Styles\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// Components\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n//\n//\nimport { totalCounter } from '../Common/Functions';\nimport { TabsAreaStyles } from '../Styles';\n//\n// totalCounter(props.incomes, props.charges)\n//\n//\nconst useStyles = makeStyles(TabsAreaStyles)\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                avatar={props.avatar}\n                total={totalCounter(props.incomes, props.charges)}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\nimport { ChartsStyles } from '../Styles';\n\nconst useStyles = makeStyles(ChartsStyles);\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => {\n    setActivePeriod(8);\n  };\n\n  const getMonth = () => {\n    setActivePeriod(31);\n  };\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const trueMoneyCharges = [];\n  const allMoney = [];\n  let lastWeekIn = 0;\n  let penultimateWeekIn = 0;\n  let lastWeekOut = 0;\n  let penultimateWeekOut = 0;\n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  incomes.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullIncomes[el.category].sum += el.money;\n    }\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  charges.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullCharges[el.category].sum += el.money;\n    }\n  });\n\n  incomes.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyIncomes.push(el.money);\n    }\n    return trueMoneyIncomes;\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyCharges.push(el.money);\n    }\n    return trueMoneyCharges;\n  });\n\n  charges.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataCharges.push(item);\n    }\n    return trueDataCharges;\n  });\n\n  incomes.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataIncomes.push(item);\n    }\n    return trueDataIncomes;\n  });\n\n  allDates.forEach((d) => {\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    if (elIn) {\n      moneyIn.push(elIn.money);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      moneyOut.push(elOut.money);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum !== 0) {\n      categoriesBar.push(el.name);\n    }\n    return categoriesBar;\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum !== 0) {\n      categoriesDoughnut.push(el.name);\n    }\n    return categoriesDoughnut;\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum > 0) {\n      trueMoneyChargesDoughnut.push(el.sum);\n    }\n    return trueMoneyChargesDoughnut\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum > 0) {\n      trueMoneyIncomesBar.push(el.sum);\n    }\n    return trueMoneyIncomesBar\n  });\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  charges.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  incomes.map(el => {\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\n      lastWeekIn += el.money\n    }\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 && Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 15) {\n      penultimateWeekIn += el.money\n    }\n  });\n\n  charges.map(el => {\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 8) {\n      lastWeekOut += el.money\n    }\n    if(Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) >= 8 && Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) < 15) {\n      penultimateWeekOut += el.money\n    }\n  });\n\n  const futureWeekIn = ((lastWeekIn - penultimateWeekIn) / penultimateWeekIn) * lastWeekIn + lastWeekIn;\n  const futureWeekOut = ((lastWeekOut - penultimateWeekOut) / penultimateWeekOut) * lastWeekOut + lastWeekOut;\n\n  const startDataLine = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, '#F2DB51');\n    gradient.addColorStop(1, '#ECC32F');\n\n    return {\n      labels: activePeriod === 8 ? allDays : allDates,\n      datasets: [\n        {\n          label: 'Incomes',\n          lineTension: 0.5,\n          backgroundColor: gradient,\n          borderColor: 'rgb(93,143,238)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowIncomes ? moneyIn : null,\n        },\n        {\n          label: 'Charges',\n          lineTension: 0.5,\n          backgroundColor: 'rgb(254,132,2)',\n          borderColor: 'rgb(254,132,2)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          borderDash: [15, 5],\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowCharges ? moneyOut : null,\n          fill: false,\n        },\n      ],\n    };\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const startForecast = {\n    labels: ['Penultimate week', 'Last week', 'Future week'],\n    datasets: [\n      {\n        label: 'Incomes',\n        fill: false,\n        borderColor: 'rgb(93,143,238)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgba(0,0,0,0)',\n        pointBorderColor: 'rgba(0,0,0,0)',\n        data: [Math.round(penultimateWeekIn), Math.round(lastWeekIn), Math.round(futureWeekIn)]\n      },\n      {\n        label: 'Charges',\n        fill: false,\n        backgroundColor: 'rgb(254,132,2)',\n        borderColor: 'rgb(254,132,2)',\n        hoverBorderColor: 'rgba(0,0,0,0)',\n        borderWidth: 4,\n        pointBackgroundColor: 'rgba(0,0,0,0)',\n        pointBorderColor: 'rgba(0,0,0,0)',\n        data: [Math.round(penultimateWeekOut), Math.round(lastWeekOut), Math.round(futureWeekOut)]\n      }\n    ]\n  }\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"charts\">\n        <div className=\"line-chart__container\">\n          <div className=\"line-chart\">\n            <Line\n              data={startDataLine}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Summary',\n                  position: 'top',\n                  fontSize: 20\n                },\n                legend: {\n                  display: false,\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      display: false,\n                      ticks: {\n                        suggestedMin: minSum,\n                        suggestedMax: maxSum,\n                      },\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                },\n                maintainAspectRatio: false,\n              }}\n            />\n          </div>\n          <div className=\"chart-buttons\">\n            <div className=\"chart-buttons__btn\">\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 31 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getMonth}>\n                Month\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 8 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getWeek}>\n                Week\n              </Button>\n            </div>\n            <div className=\"chart-buttons__checkbox\">\n              <span>\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                  Incomes\n                </label>\n              </span>\n              <span>\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                  Charges\n                </label>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons_separated\">\n          <div className=\"buttons_btn__separated\">\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 31 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getMonth}>\n              Month\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 8 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getWeek}>\n              Week\n            </Button>\n          </div>\n          <div className=\"buttons_checkbox__separated\">\n            <span>\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                Incomes\n              </label>\n            </span>\n            <span>\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                Charges\n              </label>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"bar-chart\">\n          <Bar\n            data={startDataBar}\n            options={{\n              title: {\n                display: true,\n                text: 'Income categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      suggestedMin: 0,\n                      suggestedMax: 500,\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n                xAxes: [\n                  {\n                    ticks: {\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut\n            data={startDataDoughnut}\n            options={{\n              title: {\n                display: true,\n                text: 'Charges categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: true,\n                position: 'right',\n                labels: {\n                  fontColor: 'white',\n                },\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n        <div className=\"forecast__container\">\n          <div className=\"forecast-chart\">\n            <Line\n              data={startForecast}\n              options={{\n                title:{\n                  display:true,\n                  text:'Forecast for incomes and charges',\n                  fontSize:20\n                },\n                legend:{\n                  display:true,\n                  position:'right'\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      display: false,\n                      gridLines: {\n                        display: true,\n                      },\n                    },\n                  ],\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                },\n                maintainAspectRatio: false,\n              }}\n            />\n          </div>\n          <div className=\"forecast_descr\">\n              <h3>Your budget has changed in the last week</h3>\n              <p>If this continues, your incomes will <span>{lastWeekIn < penultimateWeekIn ? 'decrease' : 'increase'}</span> and your charges will <span>{lastWeekOut < penultimateWeekOut ? 'decrease' : 'increase'}</span>.</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useEffect, useState } from \"react\";\n\nimport { ModalStyles } from \"../Styles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Snackbar\n} from \"@material-ui/core\";\n\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(ModalStyles);\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  currentCategory = {\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentIcon: \"\",\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(\n    currentCategory.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentCategory.currentDate\n      ? currentCategory.currentDate\n      : values.currentDate\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setIcon(\"\");\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      if (name && icon !== \"object\" && icon) {\n        updateCategory({\n          name: name,\n          description: description,\n          date: new Date(date),\n          icon: icons.indexOf(icon),\n        });\n        handleClose();\n        resetInputs();\n        handleClickSuccess()\n      }\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n  useEffect(() => {\n\n    return () => {\n      handleClickSuccess()\n\n    }\n  }, [])\n\n  const handleChange = (event) => {\n    if (event.target.id === \"nameInput\") {\n      setName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === \"object\") {\n      setIcon(event.target.value);\n    }\n  };\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const handleClickSuccess = () => {\n    setOpenSuccess(true);\n  };\n\n  const handleCloseSuccess = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSuccess(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\"\n      >\n        <DialogTitle id=\"add-category-title\">{\"ADD NEW CATEGORY\"}</DialogTitle>\n        <DialogContent className={classes.window}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name (required)\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon (required)\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth\n            >\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={openSuccess} autoHideDuration={4000} onClose={handleCloseSuccess}>\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\n          Added successfully\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from \"react\";\n\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  TableCell,\n  TableRow,\n} from \"@material-ui/core/\";\nimport AddCategory from \"./AddCategory\";\nimport { CategoryStyles } from \"../Styles\";\n\nconst useStyles = makeStyles(CategoryStyles);\n\nconst Category = ({\n  name,\n  description,\n  date,\n  icon,\n  deleteCategory,\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10\n        ? `0${propsDate.getMonth() + 1}`\n        : propsDate.getMonth() + 1,\n    day:\n      propsDate.getDate() < 10\n        ? `0${propsDate.getDate()}`\n        : propsDate.getDate(),\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === \"Delete\") {\n      deleteCategory();\n    } else if (e.target.innerText === \"Edit\") {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}\n        >\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import { db } from './firebase';\n\nexport const createChargeCategory = (category) => {\n  db.collection('charge-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateChargeCategory = (docId, ctegory) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteChargeCategory = (docId) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createChargeCategory,\n  updateChargeCategory,\n  deleteChargeCategory,\n} from '../../redux/firebase/chargeCategoriesFB';\nimport { TableStyles } from '../Styles';\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteChargeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateChargeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncomeCategory = (category) => {\n  db.collection('income-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncomeCategory = (docId, ctegory) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncomeCategory = (docId) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from \"react\";\n\nimport AddCategory from \"./AddCategory\";\nimport Category from \"./Category\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport {\n  createIncomeCategory,\n  updateIncomeCategory,\n  deleteIncomeCategory,\n} from \"../../redux/firebase/incomeCategoriesFB\";\nimport {TableStyles} from '../Styles'\n\n\nconst useStyles = makeStyles(TableStyles);\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper} className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteIncomeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateIncomeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {TabsAreaStyles } from '../Styles';\n\nconst useStyles = makeStyles(TabsAreaStyles);\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport Categories from './Categories';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport {\n  handleFireBaseUploadInfo,\n  handleFireBaseUploadAvatar,\n} from '../../redux/firebase/profileFB';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  const uploadNewData = () => {\n    if (avatarNew) {\n      handleFireBaseUploadAvatar(\n        setAvatarNew,\n        avatarNew,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    } else {\n      handleFireBaseUploadInfo(\n        avatar,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    }\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <div className={style.main_inner}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"Name\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n          <PhoneInput\n            inputStyle={{ width: '100%' }}\n            id=\"phone\"\n            value={phone}\n            country=\"ua\"\n            onChange={(e) => setPhone(e)}\n          />\n        </div>\n        <div className={style.main_inner}>\n          <div>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showWarning}\n                  onChange={() => {\n                    setWarning(!showWarning);\n                  }}\n                />\n              }\n              label=\"Warn me when remains:\"\n            />\n          </div>\n          <Limits\n            title=\"amount\"\n            limit={currentMoneyLimit}\n            setLimit={setCurrentMoneyLimit}\n            step={100}\n            disabled={!showWarning}\n          />\n          <Limits\n            title=\"percent\"\n            limit={currentPercentLimit}\n            setLimit={setCurrentPercentLimit}\n            step={5}\n            disabled={!showWarning}\n          />\n        </div>\n        <div className={style.settings_button}>\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n            SAVE\n          </Button>\n        </div>\n\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n//\n// Redux\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\nimport { setChargesThunk } from '../src/redux/chargesReducer';\nimport { fetchIncomesThunk } from '../src/redux/incomesReducer';\n\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.setSettingsThunk();\n    props.setChargeCategoriesThunk();\n    props.setIncomeCategoriesThunk();\n    //props.setChargesThunk();\n    //props.fetchIncomesThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <main>\n        <Route exact path=\"/\">\n          <Redirect to=\"/homepage\" />\n        </Route>\n        <Route path=\"/homepage\" render={() => <HomePage />} />\n        <Route path=\"/charts\" render={() => <Charts />} />\n        <Route path=\"/categories\" render={() => <Categories />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n      </main>\n    </div>\n  );\n};\n\nconst AppContainer = connect(null, {\n  setSettingsThunk,\n\n  setChargeCategoriesThunk,\n  setIncomeCategoriesThunk,\n\n  setChargesThunk,\n  fetchIncomesThunk,\n})(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"avatar\":\"Settings_avatar__Y8NHF\",\"main_inner\":\"Settings_main_inner__3Vnrn\",\"settings_button\":\"Settings_settings_button__2RL5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}