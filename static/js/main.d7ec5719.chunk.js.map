{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/incomeCategoriesReducer.ts","redux/chargeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","components/Categories/Charges.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profile.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","name","description","date","Date","parse","icon","incomeCategoriesReducer","category","splice","index","chargeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","useStyles","makeStyles","dialogWindow","minWidth","nameSelect","color","namePicker","modal","display","alignItems","justifyContent","padding","AddCharges","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","classes","today","values","getFullYear","getMonth","getDate","useState","setCategory","setDescription","setDate","setMoney","resetInputs","handleCloseDialog","e","target","innerText","handleChange","event","value","id","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","margin","label","onChange","fullWidth","map","el","i","MenuItem","key","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","categoryBlock","categoryName","HomeTable","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","categoryIcon","toLocaleDateString","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","theme","table","tableHead","backgroundColor","addButton","paper","palette","background","border","boxShadow","shadows","spacing","homeSelect","homeMenu","height","homeMenuTitle","marginRight","Charges","props","categories","getClassNamesFor","undefined","val","selectVal","handlePeriodChange","now","filter","selected","variant","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","fontWeight","Incomes","createIncome","updateIncome","Header","setIncomes","setCharges","total","setTotal","toWarn","setToWarn","useEffect","reduce","prev","curr","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","connect","dispatch","home","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","HomePage","exact","path","render","deleteCharge","deleteIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","push","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","getTime","d","elIn","find","elOut","maxSum","max","minSum","min","startDataBar","labels","datasets","hoverBackgroundColor","borderColor","borderWidth","barPercentage","data","startDataDoughnut","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","hoverBorderColor","pointBackgroundColor","pointBorderColor","borderDash","fill","options","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","defaultChecked","htmlFor","fontColor","iconSelect","iconPicker","AddCategory","createCategory","updateCategory","setName","setIcon","pickersBlock","categoryNameBlock","Category","deleteCategory","seconds","setCurrentCategory","addButtonWrapper","paddingBottom","createChargeCategory","arr","deleteChargeCategory","updateChargeCategory","createIncomeCategory","deleteIncomeCategory","updateIncomeCategory","Categories","collection","onSnapshot","ss","docs","fetchChargeCategories","fetchChargeCategoriesAC","createIncomeCategoryAC","updateIncomeCategoryAC","deleteIncomeCategoryAC","fetchIncomeCategories","fetchIncomeCategoriesAC","createChargeCategoryAC","updateChargeCategoryAC","deleteChargeCategoryAC","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","inputStyle","country","FormControlLabel","control","Switch","checked","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","doc","set","catch","error","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","Alert","marginTop","severity","AppContainer","setSettingsThunk","MainAppContainer","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d7ec5719.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\ntype updateUserNameACType = {\n  type: typeof UPDATE_USER_NAME;\n  newUserName: string;\n};\n\ntype updatePhoneNumberACType = {\n  type: typeof UPDATE_PHONE_NUMBER;\n  newPhoneNumber: any;\n};\n\ntype toggleWarningACType = {\n  type: typeof TOGGLE_WARNING;\n  showWarning: boolean;\n};\n\ntype setLimitACType = {\n  type: typeof SET_MONEY_LIMIT;\n  newLimit: number;\n};\n\ntype actionType =\n  | updateUserACType\n  | updateUserNameACType\n  | updatePhoneNumberACType\n  | toggleWarningACType\n  | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: actionType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  category: incomeCategoryType;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [\n  {\n    name: 'My mom',\n    description: 'Money from my mom',\n    date: Date.parse('2020-7-25'),\n    icon: icons[15],\n  },\n  {\n    name: 'Sale book',\n    description: 'Sold a book',\n    date: Date.parse('2020-7-24'),\n    icon: icons[13],\n  },\n  { name: 'Work', description: '', date: Date.parse('2020-7-23'), icon: icons[19] },\n];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      //@ts-ignore\n      return [...state, { ...action.category, icon: icons[action.category.icon] }];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (category: incomeCategoryType): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  category,\n});\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default incomeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  category: chargeCategoryType;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    name: 'Food',\n    description: 'For food',\n    date: Date.parse('2020-7-26'),\n    icon: icons[12],\n  },\n  {\n    name: 'Clothes',\n    description: 'For clothes',\n    date: Date.parse('2020-7-25'),\n    icon: icons[7],\n  },\n  { name: 'Restoraunts', description: '', date: Date.parse('2020-7-24'), icon: icons[8] },\n  {\n    name: 'Utility bills',\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: Date.parse('2020-7-23'),\n    icon: icons[2],\n  },\n  { name: 'Pets', description: 'For smth else', date: Date.parse('2020-7-21'), icon: icons[14] },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      //@ts-ignore\n      return [...state, { ...action.category, icon: icons[action.category.icon] }];\n    case SET_CATEGORY:\n      //@ts-ignore\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchChargeCategoriesAC = (category: chargeCategoryType): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  category,\n});\n\nexport const createChargeCategoryAC = (\n  category: chargeCategoryType,\n): createChargeCategoryACType => ({\n  type: SET_CATEGORY,\n  category,\n});\n\nexport const updateChargeCategoryAC = (\n  index: number,\n  category: chargeCategoryType,\n): updateChargeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  index,\n  category,\n});\n\nexport const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport default chargeCategoriesReducer;\n","const CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport default chargesReducer;\n","const CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 18),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport default incomesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className=\"logo\">\n        <img src={logo} alt=\"logo\" />\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  namePicker: {\n    color: \"grey\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: \"400px\",\n    padding: \"50px\",\n  },\n});\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n  // const values = { currentDate: today.toLocaleDateString()};\n\n  // const [name1, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(`${currentTable.currentCategory}`);\n  const [description, setDescription] = useState(\n    currentTable.currentDescription\n  );\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n\n  const [money, setMoney] = useState(currentTable.currentMoney);\n\n  const resetInputs = () => {\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney();\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      if (category >= 0 && money) {\n        updateCharge({\n          // category: charges[category].category,\n          name: chargeCategories[category].name,\n          icon: chargeCategories[category].icon,\n          category: category,\n          description: description,\n          date: new Date(date),\n          money: +money,\n        });\n        handleClose();\n        resetInputs();\n      }\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (typeof event.target.value === \"number\") {\n      setCategory(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name (required)\"\n              value={category}\n              onChange={handleChange}\n              fullWidth\n            >\n              {[\n                ...chargeCategories.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.nameSelect}>\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money (required)\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n            />\n          </div>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              // label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCharges;\n","import React, { useState } from \"react\";\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AddCharges from \"./AddCharges\";\n\nconst useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});\n\nconst HomeTable = ({\n  icon,\n  name,\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n}) => {\n  // let propsDate = new Date(date)\n  // console.log(propsDate.getDay());\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10\n        ? `0${propsDate.getMonth() + 1}`\n        : propsDate.getMonth() + 1,\n    day:\n      propsDate.getDate() < 10\n        ? +`0${propsDate.getDate()}`\n        : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest(\"th\"));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === \"Delete\") {\n      deleteMoney();\n    } else if (e.target.innerText === \"Edit\") {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money, ///null\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`, ///null\n      });\n      console.log(\n        name,\n        description,\n        icon,\n        `${fullDate.year}-${fullDate.month}-${fullDate.day}`\n      );\n    }\n    setAnchorEl(null);\n  };\n\n  // const handleClick = (e) => {\n  // \tsetAnchorEl(e.currentTarget);\n  // \tconsole.log(e.target.closest('th'))\n  // };\n\n  // const propsDate = new Date(date);\n  //\n  // const fullDate = {\n  // \tyear: propsDate.getFullYear(),\n  // \tmonth:\n  // \t\t\tpropsDate.getMonth() + 1 < 10\n  // \t\t\t\t\t? `0${propsDate.getMonth() + 1}`\n  // \t\t\t\t\t: propsDate.getMonth() + 1,\n  // \tday:\n  // \t\t\tpropsDate.getDay() + 1 < 10\n  // \t\t\t\t\t? `0${propsDate.getDay() + 1}`\n  // \t\t\t\t\t: propsDate.getDay() + 1,\n  // };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryBlock}>\n          <div className={classes.categoryName}>{name}</div>\n          <div className={classes.categoryIcon}>{icon}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n\n      <TableCell>{date.toLocaleDateString()}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={\"avatar\"} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          // onClick={handleClick}\n          onClick={handleActionClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          // onClose={handleClose}>\n          onClose={handleActionClose}\n        >\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {/*<MenuItem onClick={handleClose}>Edit</MenuItem>*/}\n          {/*<MenuItem onClick={handleClose}>Delete</MenuItem>*/}\n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n const useSortTableData = (items, item, config = null) => {\n\tconst [sortConfig, setSortConfig] = React.useState(config);\n\n\tconst sortedItems = React.useMemo(() => {\n\t\tlet sortableItems = [...items];\n\t\tlet sortedName = [...item];\n\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\tif(sortConfig.key === \"category\" ){\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, item, sortConfig]);\n\n\tconst requestSort = (key) => {\n\t\tlet direction = 'ascending';\n\t\tif (\n\t\t\t\tsortConfig &&\n\t\t\t\tsortConfig.key === key &&\n\t\t\t\tsortConfig.direction === 'ascending'\n\t\t) {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\treturn { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortTableData;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\nimport useSortTableData from \"./sortTable\";\n// import HomeModal from \"./HomeModal\";\nimport AddCharges from \"./AddCharges\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\n// import HomeSelect from './HomeSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n  },\n  addButton: {\n    display: \"flex\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: 300,\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n}));\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //---------------------\n  // const selectVal = {\n  //   \"TODAY\": Date.now,\n  //   \"THIS_WEEK\": 6,\n  //   \"THIS_MONTH\": 30,\n  //   \"THIS_YEAR\": 256\n  // }\n  const handlePeriodChange = (selectVal) => {\n    // handlePeriodChange(selectVal){\n    this.props.handlePeriodChange(selectVal);\n    if (selectVal === Date.now) {\n      console.log(selectVal.filter(this.props.date));\n      return selectVal.filter();\n    }\n  };\n  //------------------------\n  const { items, requestSort, sortConfig } = useSortTableData(\n    props.charges,\n    props.categories\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          {/*<HomeSelect updateCategory={props.createChargeCategory}/>*/}\n\n          <select\n            onChange={(val) => handlePeriodChange(val.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n          >\n            <option value=\"TODAY\">Today</option>\n            <option value=\"THIS_WEEK\">This Week</option>\n            <option value=\"THIS_MONTH\">This Month</option>\n            <option value=\"THIS_YEAR\">This Year</option>\n            <option selected value=\"FULL_PERIOD\">\n              Full period\n            </option>\n          </select>\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"category\")}\n                  className={getClassNamesFor(\"category\")}\n                >\n                  {\" \"}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"description\")}\n                  className={getClassNamesFor(\"description\")}\n                >\n                  {\" \"}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"date\")}\n                  className={getClassNamesFor(\"date\")}\n                >\n                  {\" \"}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"money\")}\n                  className={getClassNamesFor(\"money\")}\n                >\n                  {\" \"}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((el, i) => (\n                <HomeTable\n                  category={el.category}\n                  icon={props.categories[el.category].icon}\n                  name={props.categories[el.category].name}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(charge) => {\n                    props.updateCharge(i, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\nimport AddCharges from \"./AddCharges\";\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from \"./sortTable\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n    fontWeight: \"700\",\n  },\n  addButton: {\n    display: \"flex\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n}));\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    props.incomes,\n    props.categories\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          {/*  <HomeSelect />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"category\")}\n                  className={getClassNamesFor(\"category\")}\n                >\n                  {\" \"}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"description\")}\n                  className={getClassNamesFor(\"description\")}\n                >\n                  {\" \"}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"date\")}\n                  className={getClassNamesFor(\"date\")}\n                >\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"money\")}\n                  className={getClassNamesFor(\"money\")}\n                >\n                  {\" \"}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>Avatar</TableCell>\n              <TableCell className={\"table-direct\"}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((el, i) => (\n                <HomeTable\n                  category={el.category}\n                  name={props.categories[el.category].name}\n                  icon={props.categories[el.category].icon}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(income) => {\n                    props.updateIncome(i, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React, { useState, useEffect } from 'react';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [charges, setCharges] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(\n      props.incomes.reduce((prev, curr) => {\n        return prev + curr.money;\n      }, 0),\n    );\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setCharges(\n      props.charges.reduce((prev, curr) => {\n        return prev + curr.money;\n      }, 0),\n    );\n  }, [props.charges]);\n\n  useEffect(() => {\n    setTotal(incomes - charges);\n  }, [incomes, charges]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\nconst useStyles = makeStyles({\n  home: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n});\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                avatar={props.avatar}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Charts.css';\n\nconst useStyles = makeStyles({\n  root: {\n    marginLeft: '3%',\n    width: '150px',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n});\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => {\n    setActivePeriod(8);\n  };\n\n  const getMonth = () => {\n    setActivePeriod(31);\n  };\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const trueMoneyCharges = [];\n\n  const allMoney = [];\n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  incomes.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullIncomes[el.category].sum += el.money;\n    }\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  charges.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullCharges[el.category].sum += el.money;\n    }\n  });\n\n  incomes.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyIncomes.push(el.money);\n    }\n    return trueMoneyIncomes;\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyCharges.push(el.money);\n    }\n    return trueMoneyCharges;\n  });\n\n  charges.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataCharges.push(item);\n    }\n    return trueDataCharges;\n  });\n\n  incomes.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataIncomes.push(item);\n    }\n    return trueDataIncomes;\n  });\n\n  allDates.forEach((d) => {\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    if (elIn) {\n      moneyIn.push(elIn.money);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      moneyOut.push(elOut.money);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum !== 0) {\n      categoriesBar.push(el.name);\n    }\n    return categoriesBar;\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum !== 0) {\n      categoriesDoughnut.push(el.name);\n    }\n    return categoriesDoughnut;\n  });\n\n  fullCharges.map((el) => trueMoneyChargesDoughnut.push(el.sum));\n  fullIncomes.map((el) => trueMoneyIncomesBar.push(el.sum));\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  charges.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  const startDataLine = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, '#F2DB51');\n    gradient.addColorStop(1, '#ECC32F');\n\n    return {\n      labels: activePeriod === 8 ? allDays : allDates,\n      datasets: [\n        {\n          label: 1,\n          lineTension: 0.5,\n          backgroundColor: gradient,\n          borderColor: 'rgb(93,143,238)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowIncomes ? moneyIn : null,\n        },\n        {\n          label: 2,\n          lineTension: 0.5,\n          backgroundColor: 'rgb(254,132,2)',\n          borderColor: 'rgb(254,132,2)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          borderDash: [15, 5],\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowCharges ? moneyOut : null,\n          fill: false,\n        },\n      ],\n    };\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        // backgroundColor: ['rgb(197,218,3)', 'rgb(6,120,207)', 'rgb(253,40,36)', 'rgb(254,132,2)'],\n        // hoverBackgroundColor: [\n        //   'rgba(197,218,3,0.6)',\n        //   'rgba(6,120,207,0.6)',\n        //   'rgba(253,40,36,0.6)',\n        //   'rgba(254,132,2,0.6)',\n        // ],'#ecc22e'\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"btn-wrapper\">\n        <Button\n          variant=\"outlined\"\n          className={activePeriod === 31 ? 'btn-active' : null}\n          classes={{ root: classes.root, label: classes.label }}\n          onClick={getMonth}>\n          Month\n        </Button>\n        <Button\n          variant=\"outlined\"\n          className={activePeriod === 8 ? 'btn-active' : null}\n          classes={{ root: classes.root, label: classes.label }}\n          onClick={getWeek}>\n          Week\n        </Button>\n      </div>\n      <div className=\"charts\">\n        <div className=\"line-chart\">\n          <Line\n            data={startDataLine}\n            options={{\n              title: {\n                display: true,\n                text: 'Summary',\n                position: 'top',\n                fontSize: 20,\n              },\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    display: false,\n                    ticks: {\n                      suggestedMin: minSum,\n                      suggestedMax: maxSum,\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n                xAxes: [\n                  {\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n        <div className=\"checkboxes-wrapper\">\n          <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n          <label htmlFor=\"show-in\">Incomes</label>\n          <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n          <label htmlFor=\"show-out\">Charges</label>\n        </div>\n        <div className=\"bar-chart\">\n          <Bar\n            data={startDataBar}\n            options={{\n              title: {\n                display: true,\n                text: 'Income categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      suggestedMin: 0,\n                      suggestedMax: 500,\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n                xAxes: [\n                  {\n                    ticks: {\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut\n            data={startDataDoughnut}\n            options={{\n              title: {\n                display: true,\n                text: 'Charges categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: true,\n                position: 'right',\n                labels: {\n                  fontColor: 'white',\n                },\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: '350px',\n  },\n  iconSelect: {\n    color: 'grey',\n  },\n  iconPicker: {\n    color: 'grey',\n  },\n});\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  createCategory,\n  currentCategory = {\n    currentName: '',\n    currentDescription: '',\n    currentDate: '',\n    currentIcon: '',\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(currentCategory.currentDescription);\n  const [date, setDate] = useState(\n    currentCategory.currentDate ? currentCategory.currentDate : values.currentDate,\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName('');\n    setDescription('');\n    setDate(values.currentDate);\n    setIcon('');\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === 'ADD') {\n      console.log(icon);\n      if (name && icon !== 'object' && icon) {\n        updateCategory({\n          name: name,\n          description: description,\n          date: Date(date),\n          icon: icon,\n        });\n        handleClose();\n        resetInputs();\n      }\n    } else if (e.target.innerText === 'CANCEL') {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === 'nameInput') {\n      setName(event.target.value);\n    } else if (event.target.id === 'descriptionInput') {\n      setDescription(event.target.value);\n    } else if (event.target.id === 'datePicker') {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === 'object') {\n      setIcon(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\">\n        <DialogTitle id=\"add-category-title\">{'ADD NEW CATEGORY'}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name (required)\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon (required)\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth>\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\n\nconst useStyles = makeStyles({\n  categoryNameBlock: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  categoryIcon: {\n    display: 'flex',\n    marginRight: '10px',\n    color: 'grey',\n  },\n  categoryName: {\n    display: 'flex',\n  },\n});\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDay() + 1 < 10 ? `0${propsDate.getDay() + 1}` : propsDate.getDay() + 1,\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={props.createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={el.name}\n                  deleteCategory={() => {\n                    props.deleteChargeCategory(i);\n                  }}\n                  updateCategory={(category) => {\n                    props.updateChargeCategory(i, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={props.createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={el.name}\n                  deleteCategory={() => {\n                    props.deleteIncomeCategory(i);\n                  }}\n                  updateCategory={(category) => {\n                    props.updateIncomeCategory(i, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\nimport { db } from '../../redux/firebase/firebase';\n\nconst useStyles = makeStyles({\n  Categories: {\n    padding: '20px',\n  },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n  // headerBlock: {\n  //   display: 'flex',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'center',\n  //   marginBottom: '100px',\n  // },\n  // balanceTitle: {\n  //   textAlign: 'right',\n  //   fontSize: '1.2em',\n  //   marginBottom: '10px',\n  // },\n  // balanceAmount: {\n  //   fontSize: '1.7em',\n  //   fontWeight: 'bold',\n  // },\n});\n\nconst Categories = (props) => {\n  useEffect(() => {\n    db.collection('charge-categories').onSnapshot((ss) => {\n      ss.docs.map((el) => {\n        props.fetchChargeCategories(el.data());\n      });\n    });\n    // db.collection('income-categories').onSnapshot((ss) => {\n    //   ss.docs.map((el) => {\n    //     props.fetchIncomeCategories(el.data());\n    //   });\n    // });\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import Categories from './Categories';\nimport { connect } from 'react-redux';\nimport {\n  fetchIncomeCategoriesAC,\n  createIncomeCategoryAC,\n  updateIncomeCategoryAC,\n  deleteIncomeCategoryAC,\n} from '../../redux/incomeCategoriesReducer';\nimport {\n  fetchChargeCategoriesAC,\n  createChargeCategoryAC,\n  updateChargeCategoryAC,\n  deleteChargeCategoryAC,\n} from '../../redux/chargeCategoriesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    fetchChargeCategories: (category) => {\n      dispatch(fetchChargeCategoriesAC(category));\n    },\n    createIncomeCategory: (category) => {\n      dispatch(createIncomeCategoryAC(category));\n    },\n    updateIncomeCategory: (index, category) => {\n      dispatch(updateIncomeCategoryAC(index, category));\n    },\n    deleteIncomeCategory: (index) => {\n      dispatch(deleteIncomeCategoryAC(index));\n    },\n    fetchIncomeCategories: (category) => {\n      dispatch(fetchIncomeCategoriesAC(category));\n    },\n    createChargeCategory: (category) => {\n      dispatch(createChargeCategoryAC(category));\n    },\n    updateChargeCategory: (index, category) => {\n      dispatch(updateChargeCategoryAC(index, category));\n    },\n    deleteChargeCategory: (index) => {\n      dispatch(deleteChargeCategoryAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport { handleFireBaseUploadInfo, handleFireBaseUploadAvatar } from '../../redux/firebase/profile';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  // useEffect(() => {\n  //   // db.collection('user-info').onSnapshot((ss) => {\n  //   //   props.updateUser(ss.docs[0].data());\n  //   // });\n  //   props.settingsDidMountThunk();\n  // }, []);\n\n  const uploadNewData = () => {\n    avatarNew\n      ? handleFireBaseUploadAvatar(\n          setAvatarNew,\n          avatarNew,\n          name,\n          phone,\n          showWarning,\n          currentMoneyLimit,\n          currentPercentLimit,\n          setShowSaved,\n        )\n      : handleFireBaseUploadInfo(\n          avatar,\n          name,\n          phone,\n          showWarning,\n          currentMoneyLimit,\n          currentPercentLimit,\n          setShowSaved,\n        );\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          label=\"Name\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <PhoneInput\n          inputStyle={{ width: '100%' }}\n          id=\"phone\"\n          value={phone}\n          country=\"ua\"\n          onChange={(e) => setPhone(e)}\n        />\n        <div>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={showWarning}\n                onChange={() => {\n                  setWarning(!showWarning);\n                }}\n              />\n            }\n            label=\"Warn me when remains:\"\n          />\n        </div>\n        <Limits\n          title=\"amount\"\n          limit={currentMoneyLimit}\n          setLimit={setCurrentMoneyLimit}\n          step={100}\n          disabled={!showWarning}\n        />\n        <Limits\n          title=\"percent\"\n          limit={currentPercentLimit}\n          setLimit={setCurrentPercentLimit}\n          step={5}\n          disabled={!showWarning}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n          SAVE\n        </Button>\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport './App.css';\n\n//\n// Redux\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.setSettingsThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <main>\n        <Route exact path=\"/\">\n          <Redirect to=\"/homepage\" />\n        </Route>\n        <Route path=\"/homepage\" render={() => <HomePage />} />\n        <Route path=\"/charts\" render={() => <Charts />} />\n        <Route path=\"/categories\" render={() => <Categories />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n      </main>\n    </div>\n  );\n};\n\nconst AppContainer = connect(null, { setSettingsThunk })(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"temp\":\"Settings_temp__1tg-v\",\"avatar\":\"Settings_avatar__Y8NHF\",\"limit\":\"Settings_limit__3ky8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}