{"version":3,"sources":["assets/img/logo_white.png","redux/firebase/firebase.js","redux/settingsReducer.ts","redux/iconsReducer.js","redux/chargeCategoriesReducer.ts","redux/incomeCategoriesReducer.ts","redux/chargesReducer.ts","redux/incomesReducer.ts","redux/store.js","components/Navbar/Navbar.js","components/HomePage/AddCharges.js","components/HomePage/HomeTable.js","components/HomePage/sortTable.js","components/HomePage/Charges.js","components/HomePage/Incomes.js","components/Common/Functions.js","components/Common/Header/Header.js","components/Common/Header/HedaerContainer.js","components/HomePage/HomePage.js","components/HomePage/HomePageContainer.js","components/Charts/Charts.js","components/Charts/ChartsContainer.js","components/Categories/AddCategory.js","components/Categories/Category.js","redux/firebase/chargeCategoriesFB.js","components/Categories/Charges.js","redux/firebase/incomeCategoriesFB.js","components/Categories/Incomes.js","components/Categories/Categories.js","components/Categories/CategoriesContainer.js","components/Settings/components/AvatarUpload.js","components/Settings/components/Limits.js","components/Settings/Settings.js","redux/firebase/profileFB.js","components/Settings/SettingsContainer.js","App.js","serviceWorker.js","index.js","components/Settings/Settings.module.css","components/Common/Header/Header.module.css"],"names":["module","exports","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","initialState","avatar","userName","phoneNumber","showWarning","moneyLimit","percentLimit","settingsReducer","state","action","type","newUser","icons","AccountBalance","AccountBalanceWallet","AllInbox","ChildFriendly","Cake","DirectionsBike","DriveEta","EmojiSymbols","Fastfood","Favorite","FitnessCenter","Kitchen","LocalDining","MenuBook","Pets","PlayForWork","School","ShoppingCart","Waves","WorkOutline","docId","name","description","date","Date","parse","icon","chargeCategoriesReducer","categories","category","splice","index","incomeCategoriesReducer","money","chargesReducer","charge","incomesReducer","income","reducers","combineReducers","settings","incomes","charges","incomeCategories","chargeCategories","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","src","logo","alt","List","to","activeClassName","useStyles","makeStyles","dialogWindow","minWidth","nameSelect","color","namePicker","modal","display","alignItems","justifyContent","padding","AddCharges","open","handleClose","createCharge","currentTable","currentCategory","currentName","currentDescription","currentDate","currentMoney","currentIcon","updateCharge","classes","today","values","getFullYear","getMonth","getDate","useState","setName","setCategory","setDescription","setDate","setMoney","resetInputs","handleCloseDialog","e","target","innerText","handleChange","event","value","id","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","select","margin","label","selected","onChange","fullWidth","map","el","i","MenuItem","key","moneyInput","input","pickerBlock","datePicker","DialogActions","Button","onClick","autoFocus","categoryBlock","categoryName","HomeTable","deleteMoney","anchorEl","setAnchorEl","setOpen","propsDate","fullDate","year","month","day","setCurrentTable","handleActionClose","console","log","TableRow","TableCell","component","scope","categoryIcon","toLocaleDateString","aria-controls","aria-haspopup","currentTarget","closest","size","Menu","keepMounted","Boolean","useSortTableData","items","item","config","React","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sortedName","sort","a","b","direction","requestSort","theme","table","tableHead","backgroundColor","addButton","paper","palette","background","border","boxShadow","shadows","spacing","homeSelect","homeMenu","height","homeMenuTitle","marginRight","Charges","props","filtered","setFiltered","getClassNamesFor","undefined","selectVal","milliseconds","time","setTime","getTime","filter","arr","handlePeriodChange","defaultValue","variant","startIcon","TableContainer","Paper","Table","aria-label","TableHead","TableBody","fontWeight","Incomes","createIncome","updateIncome","totalIncomes","reduce","prev","curr","totalCharges","Header","setIncomes","total","setTotal","toWarn","setToWarn","useEffect","totalCounter","style","header","header__warning","header_category","title","header_balance","header_balance__title","header_balance__amount","toLocaleString","currency","connect","dispatch","sectionToggle","marginBottom","toggleButton","textDecoration","letterSpacing","toggleButtonActive","borderBottom","HomePage","home","exact","path","render","deleteCharge","deleteIncome","createIncomeAC","updateIncomeAC","deleteIncomeAC","createChargeAC","updateChargeAC","deleteChargeAC","root","marginLeft","width","textTransform","Charts","activePeriod","setActivePeriod","isShowIncomes","setIsShowIncomes","isShowCharges","setIsShowCharges","getWeek","allDates","allDatesForDay","allDays","categoriesBar","categoriesDoughnut","trueDataCharges","trueDataIncomes","trueMoneyChargesDoughnut","trueMoneyIncomesBar","trueMoneyIncomes","moneyIn","moneyOut","trueMoneyCharges","allMoney","push","now","slice","reverse","getDay","fullIncomes","fullCharges","forEach","sum","Math","ceil","abs","d","elIn","find","elOut","showIncomes","showCharges","maxSum","max","minSum","min","startDataBar","labels","datasets","hoverBackgroundColor","borderColor","borderWidth","barPercentage","data","startDataDoughnut","canvas","gradient","getContext","createLinearGradient","addColorStop","lineTension","hoverBorderColor","pointBackgroundColor","pointBorderColor","borderDash","fill","options","text","position","fontSize","legend","scales","yAxes","ticks","suggestedMin","suggestedMax","gridLines","xAxes","maintainAspectRatio","defaultChecked","htmlFor","fontColor","iconSelect","iconPicker","AddCategory","updateCategory","setIcon","indexOf","pickersBlock","categoryNameBlock","Category","deleteCategory","seconds","setCurrentCategory","createChargeCategory","collection","add","catch","error","addButtonWrapper","paddingBottom","doc","delete","ctegory","set","createIncomeCategory","Categories","AvatarUpload","img","updateInState","avatar_inner","files","Limits","limit","setLimit","step","disabled","ButtonGroup","Settings","avatarNew","setAvatarNew","setAvatar","phone","setPhone","setWarning","currentMoneyLimit","setCurrentMoneyLimit","currentPercentLimit","setCurrentPercentLimit","showSaved","setShowSaved","main","inputStyle","country","FormControlLabel","control","Switch","checked","setTimeout","uploadTask","ref","put","on","child","getDownloadURL","then","url","handleFireBaseUploadAvatar","handleFireBaseUploadInfo","Alert","marginTop","severity","AppContainer","setSettingsThunk","onSnapshot","ss","docs","setChargeCategoriesThunk","setIncomeCategoriesThunk","MainAppContainer","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e9c96647.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.6a46e223.png\";","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyA6iqq4vvKN0xir5OLsSr5ItDH4KDMlnU8',\n  authDomain: 'money-tr4cker.firebaseapp.com',\n  databaseURL: 'https://money-tr4cker.firebaseio.com',\n  projectId: 'money-tr4cker',\n  storageBucket: 'money-tr4cker.appspot.com',\n  messagingSenderId: '166713825950',\n  appId: '1:166713825950:web:f89759e0d5b9519714398f',\n  measurementId: 'G-CN13J7CNRP',\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage };\n","import { db } from './firebase/firebase';\n\nconst UPDATE_USER = 'UPDATE_USER';\nconst UPDATE_USER_NAME = 'UPDATE_USER_NAME';\nconst UPDATE_PHONE_NUMBER = 'UPDATE_PHONE_NUMBER';\nconst TOGGLE_WARNING = 'TOGGLE_WARNING';\nconst SET_MONEY_LIMIT = 'SET_LIMIT';\n\ntype stateType = {\n  avatar: any;\n  userName: string | null;\n  phoneNumber: any;\n  showWarning: boolean;\n  moneyLimit: number;\n  percentLimit?: number;\n};\n\ntype updateUserACType = {\n  type: typeof UPDATE_USER;\n  newUser: stateType;\n};\n\n// type updateUserNameACType = {\n//   type: typeof UPDATE_USER_NAME;\n//   newUserName: string;\n// };\n\n// type updatePhoneNumberACType = {\n//   type: typeof UPDATE_PHONE_NUMBER;\n//   newPhoneNumber: any;\n// };\n\n// type toggleWarningACType = {\n//   type: typeof TOGGLE_WARNING;\n//   showWarning: boolean;\n// };\n\n// type setLimitACType = {\n//   type: typeof SET_MONEY_LIMIT;\n//   newLimit: number;\n// };\n\n// type actionType =\n//   | updateUserACType\n//   | updateUserNameACType\n//   | updatePhoneNumberACType\n//   | toggleWarningACType\n//   | setLimitACType;\n\nconst initialState: stateType = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/527/527489.svg',\n  userName: 'Ivan',\n  phoneNumber: '+380991234567',\n  showWarning: true,\n  moneyLimit: 800,\n  percentLimit: 40,\n};\n\nconst settingsReducer = (state = initialState, action: updateUserACType): stateType => {\n  switch (action.type) {\n    case UPDATE_USER:\n      return { ...action.newUser };\n    default:\n      return state;\n  }\n};\n\nexport const updateUserAC = (newUser: stateType): updateUserACType => ({\n  type: UPDATE_USER,\n  newUser,\n});\n\nexport const setSettingsThunk = () => {\n  return (dispatch: any) => {\n    db.collection('user-info').onSnapshot((ss: any) => {\n      dispatch(updateUserAC(ss.docs[0].data()));\n    });\n  };\n};\n\nexport default settingsReducer;\n","import React from 'react';\nimport {\n  AccountBalance,\n  AccountBalanceWallet,\n  AllInbox,\n  ChildFriendly,\n  Cake,\n  DirectionsBike,\n  DriveEta,\n  EmojiSymbols,\n  Fastfood,\n  Favorite,\n  FitnessCenter,\n  Kitchen,\n  LocalDining,\n  MenuBook,\n  Pets,\n  PlayForWork,\n  School,\n  ShoppingCart,\n  Waves,\n  WorkOutline,\n} from '@material-ui/icons';\n\nexport const icons = [\n  <AccountBalance />,\n  <AccountBalanceWallet />,\n  <AllInbox />,\n  <ChildFriendly />,\n  <Cake />,\n  <DirectionsBike />,\n  <DriveEta />,\n  <EmojiSymbols />,\n  <Fastfood />,\n  <Favorite />,\n  <FitnessCenter />,\n  <Kitchen />,\n  <LocalDining />,\n  <MenuBook />,\n  <Pets />,\n  <PlayForWork />,\n  <School />,\n  <ShoppingCart />,\n  <Waves />,\n  <WorkOutline />,\n];\n\nexport default (state = icons, _) => state;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_CHARGE_CATEGORIES';\nconst SET_CATEGORY = 'SET_CHARGE_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_CHARGE_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_CHARGE_CATEGORY';\n\ntype chargeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<chargeCategoryType>;\n};\n\ntype createChargeCategoryACType = {\n  type: typeof SET_CATEGORY;\n  category: chargeCategoryType;\n};\n\ntype updateChargeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: chargeCategoryType;\n  index: number;\n};\n\ntype deleteChargeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createChargeCategoryACType\n  | updateChargeCategoryACType\n  | deleteChargeCategoryACType;\n\nlet initialState: Array<chargeCategoryType> = [\n  {\n    docId: '0',\n    name: 'Pets',\n    description: 'For smth else',\n    date: Date.parse('2020-7-21'),\n    icon: icons[14],\n  },\n];\n\nconst chargeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<chargeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case SET_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\n// ACs\n\nconst fetchChargeCategoriesAC = (categories: Array<chargeCategoryType>): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\n// export const createChargeCategoryAC = (\n//   category: chargeCategoryType,\n// ): createChargeCategoryACType => ({\n//   type: SET_CATEGORY,\n//   category,\n// });\n\n// export const updateChargeCategoryAC = (\n//   index: number,\n//   category: chargeCategoryType,\n// ): updateChargeCategoryACType => ({\n//   type: UPDATE_CATEGORY,\n//   index,\n//   category,\n// });\n\n// export const deleteChargeCategoryAC = (index: number): deleteChargeCategoryACType => ({\n//   type: DELETE_CATEGORY,\n//   index,\n// });\n\nexport const setChargeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('charge-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchChargeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default chargeCategoriesReducer;\n","import { db } from './firebase/firebase';\nimport { icons } from './iconsReducer';\n\nconst FETCH_CATEGORIES = 'FETCH_INCOME_CATEGORIES';\nconst CREATE_CATEGORY = 'CREATE_INCOME_CATEGORY';\nconst UPDATE_CATEGORY = 'UPDATE_INCOME_CATEGORY';\nconst DELETE_CATEGORY = 'DELETE_INCOME_CATEGORY';\n\ntype incomeCategoryType = {\n  docId: string;\n  name: string;\n  description: string;\n  date: Date | number;\n  icon: typeof icons[0];\n};\n\ntype fetchCategoriesACType = {\n  type: typeof FETCH_CATEGORIES;\n  categories: Array<incomeCategoryType>;\n};\n\ntype createIncomeCategoryACType = {\n  type: typeof CREATE_CATEGORY;\n  category: incomeCategoryType;\n};\n\ntype updateIncomeCategoryACType = {\n  type: typeof UPDATE_CATEGORY;\n  category: incomeCategoryType;\n  index: number;\n};\n\ntype deleteIncomeCategoryACType = {\n  type: typeof DELETE_CATEGORY;\n  index: number;\n};\n\ntype actionType =\n  | fetchCategoriesACType\n  | createIncomeCategoryACType\n  | updateIncomeCategoryACType\n  | deleteIncomeCategoryACType;\n\nlet initialState: Array<incomeCategoryType> = [];\n\nconst incomeCategoriesReducer = (\n  state = initialState,\n  action: actionType,\n): Array<incomeCategoryType> => {\n  switch (action.type) {\n    case FETCH_CATEGORIES:\n      return [...action.categories];\n    case CREATE_CATEGORY:\n      return [...state, action.category];\n    case UPDATE_CATEGORY:\n      state.splice(action.index, 1, action.category);\n      return [...state];\n    case DELETE_CATEGORY:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const fetchIncomeCategoriesAC = (\n  categories: Array<incomeCategoryType>,\n): fetchCategoriesACType => ({\n  type: FETCH_CATEGORIES,\n  categories,\n});\n\nexport const createIncomeCategoryAC = (\n  category: incomeCategoryType,\n): createIncomeCategoryACType => ({\n  type: CREATE_CATEGORY,\n  category,\n});\n\nexport const updateIncomeCategoryAC = (\n  index: number,\n  category: incomeCategoryType,\n): updateIncomeCategoryACType => ({\n  type: UPDATE_CATEGORY,\n  category,\n  index,\n});\n\nexport const deleteIncomeCategoryAC = (index: number): deleteIncomeCategoryACType => ({\n  type: DELETE_CATEGORY,\n  index,\n});\n\nexport const setIncomeCategoriesThunk = () => {\n  return (dispatch: any) => {\n    db.collection('income-categories').onSnapshot((ss: any) => {\n      dispatch(\n        fetchIncomeCategoriesAC(\n          ss.docs.map((el: any) => {\n            const category = el.data();\n            return { ...category, icon: icons[category.icon], docId: el.id };\n          }),\n        ),\n      );\n    });\n  };\n};\n\nexport default incomeCategoriesReducer;\n","const CREATE_CHARGE = 'CREATE_CHARGE';\nconst UPDATE_CHARGE = 'UPDATE_CHARGE';\nconst DELETE_CHARGE = 'DELETE_CHARGE';\n\ntype chargeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createChargeACType = {\n  type: typeof CREATE_CHARGE;\n  charge: chargeType;\n};\n\ntype updateChargeACType = {\n  type: typeof UPDATE_CHARGE;\n  charge: chargeType;\n  index: number;\n};\n\ntype deleteChargeACType = {\n  type: typeof DELETE_CHARGE;\n  index: number;\n};\n\ntype actionType = createChargeACType | updateChargeACType | deleteChargeACType;\n\nlet initialState: Array<chargeType> = [\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 17), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 8, 16), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 8, 14), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 13),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 8, 12), money: 150 },\n  { category: 0, description: 'Diner with John', date: new Date(2020, 8, 2), money: 300 },\n  { category: 1, description: 'For clothes', date: new Date(2020, 7, 28), money: 500 },\n  { category: 2, description: '', date: new Date(2020, 7, 26), money: 470 },\n  {\n    category: 3,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 24),\n    money: 390,\n  },\n  { category: 4, description: '', date: new Date(2020, 7, 22), money: 150 },\n];\n\nconst chargesReducer = (state = initialState, action: actionType): Array<chargeType> => {\n  switch (action.type) {\n    case CREATE_CHARGE:\n      return [...state, action.charge];\n    case UPDATE_CHARGE:\n      state.splice(action.index, 1, action.charge);\n      return [...state];\n    case DELETE_CHARGE:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createChargeAC = (charge: chargeType): createChargeACType => ({\n  type: CREATE_CHARGE,\n  charge,\n});\n\nexport const updateChargeAC = (index: number, charge: chargeType): updateChargeACType => ({\n  type: UPDATE_CHARGE,\n  charge,\n  index,\n});\n\nexport const deleteChargeAC = (index: number): deleteChargeACType => ({\n  type: DELETE_CHARGE,\n  index,\n});\n\nexport default chargesReducer;\n","const CREATE_INCOME = 'SET_INCOME';\nconst UPDATE_INCOME = 'UPDATE_INCOME';\nconst DELETE_INCOME = 'DELEE_INCOME';\n\ntype incomeType = {\n  category: number;\n  description: string;\n  date: Date | string;\n  money: number;\n};\n\ntype createIncomeACType = {\n  type: typeof CREATE_INCOME;\n  income: incomeType;\n};\n\ntype updateIncomeACType = {\n  type: typeof UPDATE_INCOME;\n  income: incomeType;\n  index: number;\n};\n\ntype deleteIncomeACType = {\n  type: typeof DELETE_INCOME;\n  index: number;\n};\n\ntype actionType = createIncomeACType | updateIncomeACType | deleteIncomeACType;\n\nlet initialState: Array<incomeType> = [\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 3), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 2), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 7, 29), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 7, 23),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 7, 21), money: 430 },\n  { category: 0, description: 'From mom', date: new Date(2020, 8, 14), money: 500.57 },\n  { category: 1, description: 'For selling a book', date: new Date(2020, 8, 15), money: 700 },\n  { category: 2, description: '', date: new Date(2020, 8, 16), money: 320 },\n  {\n    category: 0,\n    description: 'Its a looooooooooooooooooooooooooooooong description',\n    date: new Date(2020, 8, 18),\n    money: 740,\n  },\n  { category: 0, description: 'Mom again', date: new Date(2020, 8, 19), money: 430 },\n];\n\nconst incomesReducer = (state = initialState, action: actionType): Array<incomeType> => {\n  switch (action.type) {\n    case CREATE_INCOME:\n      return [...state, action.income];\n    case UPDATE_INCOME:\n      state.splice(action.index, 1, action.income);\n      return [...state];\n    case DELETE_INCOME:\n      state.splice(action.index, 1);\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport const createIncomeAC = (income: incomeType): createIncomeACType => ({\n  type: CREATE_INCOME,\n  income,\n});\n\nexport const updateIncomeAC = (index: number, income: incomeType): updateIncomeACType => ({\n  type: UPDATE_INCOME,\n  income,\n  index,\n});\n\nexport const deleteIncomeAC = (index: number): deleteIncomeACType => ({\n  type: DELETE_INCOME,\n  index,\n});\n\nexport default incomesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport incomeCategoriesReducer from './incomeCategoriesReducer';\nimport chargeCategoriesReducer from './chargeCategoriesReducer';\nimport chargesReducer from './chargesReducer';\nimport incomesReducer from './incomesReducer';\n\nimport iconsReducer from './iconsReducer';\nimport settingsReducer from './settingsReducer';\n\nlet reducers = combineReducers({\n  icons: iconsReducer,\n  settings: settingsReducer,\n  incomes: incomesReducer,\n  charges: chargesReducer,\n  incomeCategories: incomeCategoriesReducer,\n  chargeCategories: chargeCategoriesReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n//\n// Styles\nimport './Navbar.css';\nimport { List } from '@material-ui/core';\nimport logo from '../../assets/img/logo_white.png';\n\n//\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <div className=\"logo\">\n        <img src={logo} alt=\"logo\" />\n        <h2>Money Tracker</h2>\n      </div>\n      <List>\n        <NavLink to=\"/homepage\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <HomeIcon />\n            <p>Home</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/charts\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <ShowChartIcon />\n            <p>Charts</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/categories\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <CategoryIcon />\n            <p>Categories</p>\n          </div>\n        </NavLink>\n        <NavLink to=\"/settings\" activeClassName=\"active\">\n          <div className=\"link-container\">\n            <SettingsIcon />\n            <p>Settings</p>\n          </div>\n        </NavLink>\n      </List>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: \"350px\",\n  },\n  nameSelect: {\n    color: \"grey\",\n  },\n  namePicker: {\n    color: \"grey\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: \"400px\",\n    padding: \"50px\",\n  },\n});\n\n\nconst AddCharges = ({\n  open,\n  handleClose,\n  createCharge,\n  currentTable = {\n    currentCategory: \"\",\n    currentName: \"\",\n    currentDescription: \"\",\n    currentDate: \"\",\n    currentMoney: \"\",\n    currentIcon: \"\",\n  },\n  updateCharge,\n  charges,\n  chargeCategories,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10\n        ? `0${today.getMonth() + 1}`\n        : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n  // const values = { currentDate: today.toLocaleDateString()};\n\n  const [name, setName] = useState(`${currentTable.currentName}`);\n  const [category, setCategory] = useState(currentTable.currentCategory);\n  const [description, setDescription] = useState(currentTable.currentDescription);\n  const [date, setDate] = useState(\n    currentTable.currentDate ? currentTable.currentDate : values.currentDate\n  );\n  const [money, setMoney] = useState(currentTable.currentMoney);\n\n  const resetInputs = () => {\n\t\tsetName(\"\");\n    setCategory(\"\");\n    setDescription(\"\");\n    setDate(values.currentDate);\n    setMoney(\"\");\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === \"ADD\") {\n      // const gap = total - +money  ;\n      if (category >= 0 && money ) {\n        // if (gap <= 0) {\n        //   const isSure = window.confirm(\"Are you sure?\");\n        //   if (isSure) {\n            updateCharge({\n              name: chargeCategories[category].name,\n              icon: chargeCategories[category].icon,\n              category: category,\n              description: description,\n              date: new Date(date),\n              money: +money,\n            });\n            handleClose();\n            resetInputs();\n          // }\n          // return null;\n        // } else {\n        //   updateCharge({\n        //     name: chargeCategories[category].name,\n        //     icon: chargeCategories[category].icon,\n        //     category: category,\n        //     description: description,\n        //     date: new Date(date),\n        //     money: +money,\n        //   });\n        //   handleClose();\n        //   resetInputs();\n        // }\n      // }\n    } else if (e.target.innerText === \"CANCEL\") {\n      handleClose();\n      resetInputs();\n    }\n    }\n  };\n\n  const handleChange = (event) => {\n    if (typeof event.target.value === \"number\") {\n\t\t\tsetCategory(event.target.value);\n\t\t}else if (event.target.id === \"selectName\") {\n\t\t\t\tsetName(event.target.value);\n    } else if (event.target.id === \"descriptionInput\") {\n      setDescription(event.target.value);\n    } else if (event.target.id === \"datePicker\") {\n      setDate(event.target.value);\n    } else if (event.target.id === \"moneyInput\") {\n      setMoney(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-charge-title\"\n        aria-describedby=\"add-charge-description\"\n      >\n        <DialogTitle id=\"add-charge-title\">{\"ADD NEW ITEM\"}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              id=\"selectName\"\n              select\n              margin=\"dense\"\n              label=\"Category name (required)\"\n\t\t\t\t\t\t\tselected={name}\n              value={category}\n              onChange={handleChange}\n              fullWidth\n            >\n              {[\n                ...chargeCategories.map((el, i) => (\n                  <MenuItem key={i} value={i} className={classes.nameSelect}>\n                    {el.name}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n          </div>\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.moneyInput}\n              margin=\"dense\"\n              id=\"moneyInput\"\n              label=\"Current money (required)\"\n              input\n              value={money}\n              type=\"number\"\n              fullWidth\n              onChange={handleChange}\n            />\n          </div>\n          <div className={classes.pickerBlock}>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              // label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCharges;\n","import React, { useState } from \"react\";\n// import ReactDOM from 'react-dom'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AddCharges from \"./AddCharges\";\n\nconst useStyles = makeStyles({\n  categoryBlock: {\n    // display: 'flex',\n    alignItems: \"center\",\n  },\n  categoryName: {\n    display: \"flex\",\n  },\n});\n\nconst HomeTable = ({\n  icon,\n  name,\n  description,\n  date,\n  money,\n  deleteMoney,\n  updateCharge,\n  charges,\n  chargeCategories,\n  avatar,\n  category\n}) => {\n  // let propsDate = new Date(date)\n  // console.log(propsDate.getDay());\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10\n        ? `0${propsDate.getMonth() + 1}`\n        : propsDate.getMonth() + 1,\n    day:\n      propsDate.getDate() < 10\n        ? +`0${propsDate.getDate()}`\n        : propsDate.getDate(),\n  };\n\n  const [currentTable, setCurrentTable] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentMoney: money,\n    currentDate: null,\n    currentCategory: category,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    console.log(e.target.closest(\"th\"));\n  };\n\n  const handleActionClose = (e) => {\n    if (e.target.innerText === \"Delete\") {\n      deleteMoney();\n    } else if (e.target.innerText === \"Edit\") {\n      setOpen(true);\n      setCurrentTable({\n        currentName: name,\n        currentCategory: category ,\n        currentDescription: description,\n        currentIcon: icon,\n        currentMoney: money,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n      console.log(\n        name,\n        description,\n        icon,\n        `${fullDate.year}-${fullDate.month}-${fullDate.day}`\n      );\n    }\n    setAnchorEl(null);\n  };\n\n  // const handleClick = (e) => {\n  // \tsetAnchorEl(e.currentTarget);\n  // \tconsole.log(e.target.closest('th'))\n  // };\n\n  // const propsDate = new Date(date);\n  //\n  // const fullDate = {\n  // \tyear: propsDate.getFullYear(),\n  // \tmonth:\n  // \t\t\tpropsDate.getMonth() + 1 < 10\n  // \t\t\t\t\t? `0${propsDate.getMonth() + 1}`\n  // \t\t\t\t\t: propsDate.getMonth() + 1,\n  // \tday:\n  // \t\t\tpropsDate.getDay() + 1 < 10\n  // \t\t\t\t\t? `0${propsDate.getDay() + 1}`\n  // \t\t\t\t\t: propsDate.getDay() + 1,\n  // };\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryBlock}>\n          <div className={classes.categoryName}>{name}</div>\n          <div className={classes.categoryIcon}>{icon}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      {/*<TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>*/}\n\n      <TableCell>{date.toLocaleDateString()}</TableCell>\n      <TableCell>{money}</TableCell>\n      <TableCell>\n        <img src={`${avatar}`} alt=\"avatar\" className={\"avatar\"} />\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"home-menu\"\n          aria-haspopup=\"true\"\n          // onClick={handleClick}\n          onClick={handleActionClick}\n          size=\"small\"\n        >\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"home-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          // onClose={handleClose}>\n          onClose={handleActionClose}\n        >\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n         \n          {open && (\n            <AddCharges\n              open={open}\n              handleClose={handleClose}\n              currentTable={currentTable}\n              updateCharge={updateCharge}\n              charges={charges}\n              chargeCategories={chargeCategories}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HomeTable;\n","import React from \"react\";\n\n const useSortTableData = (items, item, config = null) => {\n\tconst [sortConfig, setSortConfig] = React.useState(config);\n\n\tconst sortedItems = React.useMemo(() => {\n\t\tlet sortableItems = [...items];\n\t\tlet sortedName = [...item];\n\n\t\tif (sortConfig !== null) {\n\t\t\tsortableItems.sort((a, b) => {\n\t\t\t\tif(sortConfig.key === \"category\" ){\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] < sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (sortedName[a[sortConfig.key]][\"name\"] > sortedName[b[sortConfig.key]][\"name\"]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (a[sortConfig.key] < b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a[sortConfig.key] > b[sortConfig.key]) {\n\t\t\t\t\t\treturn sortConfig.direction === 'ascending' ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn sortableItems;\n\t}, [items, item, sortConfig]);\n\n\tconst requestSort = (key) => {\n\t\tlet direction = 'ascending';\n\t\tif (\n\t\t\t\tsortConfig &&\n\t\t\t\tsortConfig.key === key &&\n\t\t\t\tsortConfig.direction === 'ascending'\n\t\t) {\n\t\t\tdirection = 'descending';\n\t\t}\n\t\tsetSortConfig({ key, direction });\n\t};\n\n\treturn { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortTableData;\n","import React from 'react';\nimport HomeTable from './HomeTable';\nimport useSortTableData from './sortTable';\n// import HomeModal from \"./HomeModal\";\nimport AddCharges from './AddCharges';\n// import HomeSelect from './HomeSelect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\n// import FilterDate from \"./FilterDate\";\n// import Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButton: {\n    display: 'flex',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 300,\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  homeMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px 0',\n    height: '40px',\n  },\n  homeMenuTitle: {\n    marginRight: '20px',\n  },\n}));\n\nconst Charges = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [filtered, setFiltered] = React.useState(props.charges); //items\n  const handlePeriodChange = (selectVal) => {\n    if (+selectVal === 7 || +selectVal === 30) {\n      let milliseconds = +selectVal * 24 * 60 * 60 * 1000;\n      let currentDate = new Date();\n      let time = currentDate.setTime(currentDate.getTime() - milliseconds);\n      return setFiltered([\n        ...props.charges.filter((arr) => {\n          // filtered:  ...items\n          console.log(arr.date.getTime() > time);\n          return arr.date.getTime() > time;\n        }),\n      ]);\n    } else if (selectVal === 'FULL_PERIOD') {\n      // console.log([...props.charges]);\n      // return([...props.charges]);\n      return setFiltered([...props.charges]); //items\n    }\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    filtered, //props.charges\n    props.categories,\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  // const { itemsFilter, setFilterConfig }  = React.useState([...items]);\n  // const [dateFilter, setFilterDate] = React.useState([...items]);\n\n  //     // handlePeriodChange(selectVal){\n  //     // this.handlePeriodChange(selectVal);\n  //     const setFiltered = filters( filtered);\n  //     function filters(anArray){\n  //       let newArr = []\n  //       for(let i =0; i< anArray.length; i++){\n  //         if(anArray[i]){\n  //           newArr.push(anArray[i].date.getTime());\n  //         }\n  //       }\n  //       return (newArr);\n  //     }\n  //     if (+selectVal === 7) {\n  //       // console.log(setFiltered.filter((fil) => {\n  //       //   return (parseInt(fil) / 2) > 10\n  //       // }));\n  //      let mili = +selectVal*24*60*60*1000;\n  //       let currentDate = new Date();\n  //       let time = currentDate.setTime(currentDate.getTime()- mili);\n  //       console.log(new Date(time));\n  //       // setFiltered.filter((fil) => {\n  //       //   return((fil) >=(time));\n  //       // });\n  //       console.log(setFiltered.filter((fil) => {\n  //         return((fil) >=(time))}));\n  //       // console.log(\n  //       //    (new Date(setFiltered.filter((fil) => ((fil) >=( time)) )).toLocaleDateString()));\n  //       // console.log(new Date(fil).toLocaleDateString());\n  //     }else if (+selectVal === 30) {\n  //       // console.log(setFiltered.filter((fil) => {\n  //       //   return (parseInt(fil) / 2) > 10\n  //       // }));\n  //       let mili = +selectVal*24*60*60*1000;\n  //       let currentDate = new Date();\n  //       let time = currentDate.setTime(currentDate.getTime() - mili);\n  //       // console.log(new Date(time).toLocaleDateString());\n  //       console.log(new Date(time));\n  //       console.log(setFiltered.filter((fil) => {\n  //         return((fil) >=(time))}));\n  //     }else{\n  //       console.log(setFiltered);\n  //       return (setFiltered);\n  //     }\n  //   };\n  // const day = new Date();\n  // const me = new Date(day);\n  // me;\n  // me.toLocaleDateString()\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Charges</h3>\n          {/*<HomeSelect updateCategory={props.createChargeCategory}/>*/}\n          <select\n            id=\"datePeriod\"\n            name=\"datePeriod\"\n            onChange={(event) => handlePeriodChange(event.target.value)}\n            className=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n            // selected={\"FULL_PERIOD\"}\n            defaultValue={'FULL_PERIOD'}\n            // value={filter ? filter.value : \"FULL_PERIOD\"}\n            // value={props.charges}\n          >\n            <option value=\"7\">This Week</option>\n            <option value=\"30\">This Month</option>\n            <option value=\"FULL_PERIOD\">Full period</option>\n          </select>\n          {/*<HomeSelect filtered={items}/>*/}\n          {/*<FilterDate filtered={items} />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}>\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createCharge}\n        charges={props.charges}\n        chargeCategories={props.categories}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Charges\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('category')}\n                  className={getClassNamesFor('category')}>\n                  {' '}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('description')}\n                  className={getClassNamesFor('description')}>\n                  {' '}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('date')}\n                  className={getClassNamesFor('date')}>\n                  {' '}\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={'table-direct'}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort('money')}\n                  className={getClassNamesFor('money')}>\n                  {' '}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell>Avatar</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((\n                el,\n                i, //items\n              ) => (\n                <HomeTable\n                  category={el.category}\n                  icon={props.categories[el.category]?.icon}\n                  name={props.categories[el.category]?.name}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i}\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(charge) => {\n                    props.updateCharge(i, charge);\n                  }}\n                  charges={props.charges}\n                  chargeCategories={props.categories}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import React from \"react\";\nimport HomeTable from \"./HomeTable\";\nimport AddCharges from \"./AddCharges\";\n//import HomeSelect from './HomeSelect';\nimport useSortTableData from \"./sortTable\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"lightcyan\",\n    fontWeight: \"700\",\n  },\n  addButton: {\n    display: \"flex\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  homeSelect: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeMenu: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0\",\n    height: \"40px\",\n  },\n  homeMenuTitle: {\n    marginRight: \"20px\",\n  },\n}));\n\nconst Incomes = (props) => {\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => {\n  //   setOpen(true);\n  // };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { items, requestSort, sortConfig } = useSortTableData(\n    props.incomes,\n    props.categories\n  );\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return (\n    <div>\n      <div className={classes.homeMenu}>\n        <div className={classes.homeSelect}>\n          <h3 className={classes.homeMenuTitle}>My Incomes</h3>\n          {/*  <HomeSelect />*/}\n        </div>\n        <Button\n          className={classes.addButton}\n          type=\"button\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n        >\n          Add more\n        </Button>\n      </div>\n      <AddCharges\n        open={open}\n        handleClose={handleClose}\n        updateCharge={props.createIncome}\n        charges={props.incomes}\n        chargeCategories={props.categories}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Table of Incomes\">\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"category\")}\n                  className={getClassNamesFor(\"category\")}\n                >\n                  {\" \"}\n                  Category\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"description\")}\n                  className={getClassNamesFor(\"description\")}\n                >\n                  {\" \"}\n                  Description\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"date\")}\n                  className={getClassNamesFor(\"date\")}\n                >\n                  Date\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"money\")}\n                  className={getClassNamesFor(\"money\")}\n                >\n                  {\" \"}\n                  Money\n                </button>\n              </TableCell>\n              <TableCell className={\"table-direct\"}>Avatar</TableCell>\n              <TableCell className={\"table-direct\"}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...items.map((el, i) => (\n                <HomeTable\n                  category={el.category}\n                  name={props.categories[el.category].name}\n                  icon={props.categories[el.category].icon}\n                  description={el.description}\n                  date={el.date}\n                  money={el.money}\n                  key={i} //el.name\n                  avatar={props.avatar}\n                  deleteMoney={() => {\n                    props.deleteMoney(i);\n                  }}\n                  updateCharge={(income) => {\n                    props.updateIncome(i, income);\n                  }}\n                  charges={props.incomes}\n                  chargeCategories={props.categories}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","export const totalCounter = (incomes, charges) => {\n  return totalIncomes(incomes) - totalCharges(charges);\n};\n\nexport const totalIncomes = (incomes) => {\n  return incomes.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n\nconst totalCharges = (charges) => {\n  return charges.reduce((prev, curr) => {\n    return prev + curr.money;\n  }, 0);\n};\n","import React, { useState, useEffect } from 'react';\nimport { totalCounter, totalIncomes } from '../Functions';\nimport style from './Header.module.css';\n\nconst Header = (props) => {\n  const [incomes, setIncomes] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [toWarn, setToWarn] = useState(false);\n\n  useEffect(() => {\n    setIncomes(totalIncomes(props.incomes));\n  }, [props.incomes]);\n\n  useEffect(() => {\n    setTotal(totalCounter(props.incomes, props.charges));\n  }, [props]);\n\n  useEffect(() => {\n    // prettier-ignore\n    if (props.settings.showWarning && (total < props.settings.moneyLimit || (total / incomes) * 100 < props.settings.percentLimit)) {\n      setToWarn(true);\n    } else {\n      setToWarn(false);\n    }\n  }, [total, incomes, props]);\n\n  return (\n    <div className={`${style.header} ${toWarn ? style.header__warning : ''}`}>\n      <div className={style.header_category}>\n        <h2>{props.title}</h2>\n      </div>\n      {toWarn && <p> BE aware of low budget</p>}\n      <div className={style.header_balance}>\n        <h2 className={style.header_balance__title}>Balance</h2>\n        <h1 className={style.header_balance__amount}>\n          {total.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    settings: state.settings,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { HashRouter, NavLink, Redirect, Route } from 'react-router-dom';\n\n//\n// Styles\nimport './HomePage.css';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//\n// Components\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Header from '../Common/Header/HedaerContainer';\n\n//\n//\n//\nimport { totalCounter } from '../Common/Functions';\n//\n// totalCounter(props.incomes, props.charges)\n//\n//\n\nconst useStyles = makeStyles({\n  // home: {\n  //   padding: '20px',\n  // },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n});\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.home}>\n        <Header title=\"Homepage\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/homepage/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/homepage/\">\n            <Redirect to=\"/homepage/charges\" />\n          </Route>\n\n          <Route\n            path=\"/homepage/charges\"\n            render={() => (\n              <Charges\n                charges={props.charges}\n                categories={props.chargeCategories}\n                deleteMoney={props.deleteCharge}\n                updateCharge={props.updateCharge}\n                createCharge={props.createCharge}\n                avatar={props.avatar}\n              />\n            )}\n          />\n          <Route\n            path=\"/homepage/incomes\"\n            render={() => (\n              <Incomes\n                incomes={props.incomes}\n                categories={props.incomeCategories}\n                deleteMoney={props.deleteIncome}\n                updateIncome={props.updateIncome}\n                createIncome={props.createIncome}\n                avatar={props.avatar}\n              />\n            )}\n          />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\nimport { connect } from 'react-redux';\nimport { createChargeAC, updateChargeAC, deleteChargeAC } from '../../redux/chargesReducer';\nimport { createIncomeAC, updateIncomeAC, deleteIncomeAC } from '../../redux/incomesReducer';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    avatar: state.settings.avatar,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n    incomes: state.incomes,\n    charges: state.charges,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    createIncome: (income) => {\n      dispatch(createIncomeAC(income));\n    },\n    updateIncome: (index, income) => {\n      dispatch(updateIncomeAC(index, income));\n    },\n    deleteIncome: (index) => {\n      dispatch(deleteIncomeAC(index));\n    },\n    createCharge: (charge) => {\n      dispatch(createChargeAC(charge));\n    },\n    updateCharge: (index, charge) => {\n      dispatch(updateChargeAC(index, charge));\n    },\n    deleteCharge: (index) => {\n      dispatch(deleteChargeAC(index));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { useState } from 'react';\n\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\nimport './Charts.css';\n\nconst useStyles = makeStyles({\n  root: {\n    marginLeft: '3%',\n    width: '150px',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n});\n\nconst Charts = ({ incomes, charges, incomeCategories, chargeCategories }) => {\n  const [activePeriod, setActivePeriod] = useState(8);\n  const [isShowIncomes, setIsShowIncomes] = useState(true);\n  const [isShowCharges, setIsShowCharges] = useState(true);\n\n  const getWeekDay = (day) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    return days[new Date(day).getDay()];\n  };\n\n  const getWeek = () => {\n    setActivePeriod(8);\n  };\n\n  const getMonth = () => {\n    setActivePeriod(31);\n  };\n\n  const allDates = [];\n  const allDatesForDay = [];\n  const allDays = [];\n  const categoriesBar = [];\n  const categoriesDoughnut = [];\n  const trueDataCharges = [];\n  const trueDataIncomes = [];\n  const trueMoneyChargesDoughnut = [];\n  const trueMoneyIncomesBar = [];\n  const trueMoneyIncomes = [];\n  const moneyIn = [];\n  const moneyOut = [];\n  const trueMoneyCharges = [];\n\n  const allMoney = [];\n\n  for (let i = 0; i < activePeriod - 1; i++) {\n    allDates.push(new Date(Date.now() - i * 1000 * 3600 * 24).toLocaleDateString().slice(0, 5));\n    allDatesForDay.push(Date.now() - i * 1000 * 3600 * 24);\n  }\n\n  allDates.reverse();\n  allDatesForDay.reverse();\n\n  allDatesForDay.map((el) => {\n    allDays.push(getWeekDay(el));\n    return allDays;\n  });\n\n  const fullIncomes = incomeCategories.slice();\n  const fullCharges = chargeCategories.slice();\n\n  fullIncomes.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  incomes.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullIncomes[el.category].sum += el.money;\n    }\n  });\n\n  fullCharges.forEach((el, i) => {\n    el.id = i;\n    el.sum = 0;\n  });\n\n  charges.forEach((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      fullCharges[el.category].sum += el.money;\n    }\n  });\n\n  incomes.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyIncomes.push(el.money);\n    }\n    return trueMoneyIncomes;\n  });\n\n  charges.map((el) => {\n    if (\n      Math.ceil(Math.abs(el.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueMoneyCharges.push(el.money);\n    }\n    return trueMoneyCharges;\n  });\n\n  charges.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataCharges.push(item);\n    }\n    return trueDataCharges;\n  });\n\n  incomes.map((item) => {\n    if (\n      Math.ceil(Math.abs(item.date.getTime() - new Date().getTime()) / (1000 * 3600 * 24)) <\n      activePeriod\n    ) {\n      trueDataIncomes.push(item);\n    }\n    return trueDataIncomes;\n  });\n\n  allDates.forEach((d) => {\n    let elIn = trueDataIncomes.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    let elOut = trueDataCharges.find((el) => el.date.toLocaleDateString().slice(0, 5) === d);\n    if (elIn) {\n      moneyIn.push(elIn.money);\n    } else {\n      moneyIn.push(0);\n    }\n    if (elOut) {\n      moneyOut.push(elOut.money);\n    } else {\n      moneyOut.push(0);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum !== 0) {\n      categoriesBar.push(el.name);\n    }\n    return categoriesBar;\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum !== 0) {\n      categoriesDoughnut.push(el.name);\n    }\n    return categoriesDoughnut;\n  });\n\n  fullCharges.map((el) => {\n    if (el.sum > 0) {\n      trueMoneyChargesDoughnut.push(el.sum);\n    }\n  });\n\n  fullIncomes.map((el) => {\n    if (el.sum > 0) {\n      trueMoneyIncomesBar.push(el.sum);\n    }\n  });\n\n  const showIncomes = () => setIsShowIncomes(!isShowIncomes);\n  const showCharges = () => setIsShowCharges(!isShowCharges);\n\n  incomes.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  charges.map((el) => {\n    allMoney.push(+el.money);\n    return allMoney;\n  });\n\n  const maxSum = Math.max(...allMoney);\n  const minSum = Math.min(...allMoney);\n\n  const startDataLine = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, '#F2DB51');\n    gradient.addColorStop(1, '#ECC32F');\n\n    return {\n      labels: activePeriod === 8 ? allDays : allDates,\n      datasets: [\n        {\n          label: 1,\n          lineTension: 0.5,\n          backgroundColor: gradient,\n          borderColor: 'rgb(93,143,238)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowIncomes ? moneyIn : null,\n        },\n        {\n          label: 2,\n          lineTension: 0.5,\n          backgroundColor: 'rgb(254,132,2)',\n          borderColor: 'rgb(254,132,2)',\n          hoverBorderColor: 'rgba(0,0,0,0)',\n          borderWidth: 4,\n          borderDash: [15, 5],\n          pointBackgroundColor: 'rgba(0,0,0,0)',\n          pointBorderColor: 'rgba(0,0,0,0)',\n          data: isShowCharges ? moneyOut : null,\n          fill: false,\n        },\n      ],\n    };\n  };\n\n  const startDataBar = {\n    labels: categoriesBar,\n    datasets: [\n      {\n        backgroundColor: 'white',\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 0,\n        barPercentage: 0.4,\n        data: trueMoneyIncomesBar,\n      },\n    ],\n  };\n\n  const startDataDoughnut = {\n    labels: categoriesDoughnut,\n    datasets: [\n      {\n        backgroundColor: ['#f6ea67', '#ef878d', '#38ef7d', '#94ecde', '#ffc7bb'],\n        hoverBackgroundColor: ['#ecc22e', '#fa9dbe', '#35bb61', '#06c0da', '#ef8270'],\n        borderWidth: 0,\n        data: trueMoneyChargesDoughnut,\n      },\n    ],\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* <div className=\"header_wrapper\">\n        <Header title=\"Charts\" />\n    </div> */}\n      <div className=\"charts\">\n        <div className=\"line-chart__container\">\n          <div className=\"line-chart\">\n            <Line\n              data={startDataLine}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Summary',\n                  position: 'top',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: false,\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      display: false,\n                      ticks: {\n                        suggestedMin: minSum,\n                        suggestedMax: maxSum,\n                      },\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false,\n                      },\n                    },\n                  ],\n                },\n                maintainAspectRatio: false,\n              }}\n            />\n          </div>\n          <div className=\"chart-buttons\">\n            <div className=\"chart-buttons__btn\">\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 31 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getMonth}>\n                Month\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={activePeriod === 8 ? 'btn-active' : null}\n                classes={{ root: classes.root, label: classes.label }}\n                onClick={getWeek}>\n                Week\n              </Button>\n            </div>\n            <div className=\"chart-buttons__checkbox\">\n              <span>\n                <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n                <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                  Incomes\n                </label>\n              </span>\n              <span>\n                <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n                <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                  Charges\n                </label>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons_separated\">\n          <div className=\"buttons_btn__separated\">\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 31 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getMonth}>\n              Month\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={activePeriod === 8 ? 'btn-active' : null}\n              classes={{ root: classes.root, label: classes.label }}\n              onClick={getWeek}>\n              Week\n            </Button>\n          </div>\n          <div className=\"buttons_checkbox__separated\">\n            <span>\n              <input type=\"checkbox\" id=\"show-in\" onChange={showIncomes} defaultChecked />\n              <label className={!isShowIncomes ? 'non-active' : ''} htmlFor=\"show-in\">\n                Incomes\n              </label>\n            </span>\n            <span>\n              <input type=\"checkbox\" id=\"show-out\" onChange={showCharges} defaultChecked />\n              <label className={!isShowCharges ? 'non-active' : ''} htmlFor=\"show-out\">\n                Charges\n              </label>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"bar-chart\">\n          <Bar\n            data={startDataBar}\n            options={{\n              title: {\n                display: true,\n                text: 'Income categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      suggestedMin: 0,\n                      suggestedMax: 500,\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n                xAxes: [\n                  {\n                    ticks: {\n                      fontColor: 'white',\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n        <div className=\"doughnut-chart\">\n          <Doughnut\n            data={startDataDoughnut}\n            options={{\n              title: {\n                display: true,\n                text: 'Charges categories',\n                fontSize: 20,\n                fontColor: 'white',\n              },\n              legend: {\n                display: true,\n                position: 'right',\n                labels: {\n                  fontColor: 'white',\n                },\n              },\n              maintainAspectRatio: false,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Charts;\n","import Charts from './Charts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    incomes: state.incomes,\n    charges: state.charges,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Charts);\n","import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  dialogWindow: {\n    minWidth: '350px',\n  },\n  iconSelect: {\n    color: 'grey',\n  },\n  iconPicker: {\n    color: 'grey',\n  },\n});\n\nconst AddCategory = ({\n  open,\n  handleClose,\n  currentCategory = {\n    currentName: '',\n    currentDescription: '',\n    currentDate: '',\n    currentIcon: '',\n  },\n  updateCategory,\n  icons,\n}) => {\n  const classes = useStyles();\n  const today = new Date();\n\n  const values = {\n    currentDate: `${today.getFullYear()}-${\n      today.getMonth() + 1 < 10 ? `0${today.getMonth() + 1}` : today.getMonth() + 1\n    }-${today.getDate()}`,\n  };\n\n  const [name, setName] = useState(`${currentCategory.currentName}`);\n  const [description, setDescription] = useState(currentCategory.currentDescription);\n  const [date, setDate] = useState(\n    currentCategory.currentDate ? currentCategory.currentDate : values.currentDate,\n  );\n  const [icon, setIcon] = useState(currentCategory.currentIcon);\n\n  const resetInputs = () => {\n    setName('');\n    setDescription('');\n    setDate(values.currentDate);\n    setIcon('');\n  };\n\n  const handleCloseDialog = (e) => {\n    if (e.target.innerText === 'ADD') {\n      // console.log(date);\n      // console.log(new Date(date));\n      if (name && icon !== 'object' && icon) {\n        updateCategory({\n          name: name,\n          description: description,\n          date: new Date(date),\n          icon: icons.indexOf(icon),\n        });\n        handleClose();\n        resetInputs();\n      }\n    } else if (e.target.innerText === 'CANCEL') {\n      handleClose();\n      resetInputs();\n    }\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === 'nameInput') {\n      setName(event.target.value);\n    } else if (event.target.id === 'descriptionInput') {\n      setDescription(event.target.value);\n    } else if (event.target.id === 'datePicker') {\n      setDate(event.target.value);\n    } else if (typeof event.target.value === 'object') {\n      setIcon(event.target.value);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"add-category-title\"\n        aria-describedby=\"add-category-description\">\n        <DialogTitle id=\"add-category-title\">{'ADD NEW CATEGORY'}</DialogTitle>\n        <DialogContent className={classes.dialogWindow}>\n          <div>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"nameInput\"\n              label=\"Category name (required)\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={name}\n            />\n          </div>\n\n          <div>\n            <TextField\n              margin=\"dense\"\n              id=\"descriptionInput\"\n              label=\"Category description\"\n              type=\"text\"\n              fullWidth\n              onChange={handleChange}\n              value={description}\n            />\n          </div>\n          <div className={classes.pickersBlock}>\n            <TextField\n              className={classes.iconPicker}\n              id=\"selectIcon\"\n              select\n              margin=\"dense\"\n              label=\"Select category icon (required)\"\n              value={icon}\n              onChange={handleChange}\n              //   helperText=\"Select category icon\"\n              fullWidth>\n              {[\n                ...icons.map((el, i) => (\n                  <MenuItem key={i} value={el} className={classes.iconSelect}>\n                    {el}\n                  </MenuItem>\n                )),\n              ]}\n            </TextField>\n            <TextField\n              className={classes.datePicker}\n              margin=\"dense\"\n              id=\"datePicker\"\n              label=\"Current date\"\n              type=\"date\"\n              fullWidth\n              onChange={handleChange}\n              value={date}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from 'react';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem, TableCell, TableRow } from '@material-ui/core/';\nimport AddCategory from './AddCategory';\n\nconst useStyles = makeStyles({\n  categoryNameBlock: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  categoryIcon: {\n    display: 'flex',\n    marginRight: '10px',\n    color: 'grey',\n  },\n  categoryName: {\n    display: 'flex',\n  },\n});\n\nconst Category = ({ name, description, date, icon, deleteCategory, updateCategory, icons }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const propsDate = new Date(date?.seconds * 1000);\n\n  const fullDate = {\n    year: propsDate.getFullYear(),\n    month:\n      propsDate.getMonth() + 1 < 10 ? `0${propsDate.getMonth() + 1}` : propsDate.getMonth() + 1,\n    day: propsDate.getDate() < 10 ? `0${propsDate.getDate()}` : propsDate.getDate(),\n  };\n\n  const [currentCategory, setCurrentCategory] = useState({\n    currentName: name,\n    currentDescription: description,\n    currentIcon: icon,\n    currentDate: null,\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleActionClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  console.log(`${fullDate.year}-${fullDate.month}-${fullDate.day}`);\n  const handleActionClose = (e) => {\n    if (e.target.innerText === 'Delete') {\n      deleteCategory();\n    } else if (e.target.innerText === 'Edit') {\n      setOpen(true);\n      setCurrentCategory({\n        currentName: name,\n        currentDescription: description,\n        currentIcon: icon,\n        currentDate: `${fullDate.year}-${fullDate.month}-${fullDate.day}`,\n      });\n    }\n    setAnchorEl(null);\n  };\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <div className={classes.categoryNameBlock}>\n          <div className={classes.categoryIcon}>{icon}</div>\n          <div className={classes.categoryName}>{name}</div>\n        </div>\n      </TableCell>\n      <TableCell>{description}</TableCell>\n      <TableCell>{`${fullDate.year}-${fullDate.month}-${fullDate.day}`}</TableCell>\n      <TableCell>\n        <Button\n          aria-controls=\"category-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleActionClick}\n          size=\"small\">\n          <MoreVertIcon color=\"action\" />\n        </Button>\n        <Menu\n          id=\"category-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleActionClose}>\n          <MenuItem onClick={handleActionClose}>Edit</MenuItem>\n          <MenuItem onClick={handleActionClose}>Delete</MenuItem>\n          {open && (\n            <AddCategory\n              open={open}\n              handleClose={handleClose}\n              icons={icons}\n              currentCategory={currentCategory}\n              updateCategory={updateCategory}\n            />\n          )}\n        </Menu>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Category;\n","import { db } from './firebase';\n\nexport const createChargeCategory = (category) => {\n  db.collection('charge-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateChargeCategory = (docId, ctegory) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteChargeCategory = (docId) => {\n  db.collection('charge-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createChargeCategory,\n  updateChargeCategory,\n  deleteChargeCategory,\n} from '../../redux/firebase/chargeCategoriesFB';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Charges = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createChargeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.chargeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteChargeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateChargeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Charges;\n","import { db } from './firebase';\n\nexport const createIncomeCategory = (category) => {\n  db.collection('income-categories')\n    .add(category)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const updateIncomeCategory = (docId, ctegory) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .set(ctegory)\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const deleteIncomeCategory = (docId) => {\n  db.collection('income-categories')\n    .doc(docId)\n    .delete()\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n","import React, { useState } from 'react';\n\nimport AddCategory from './AddCategory';\nimport Category from './Category';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {\n  createIncomeCategory,\n  updateIncomeCategory,\n  deleteIncomeCategory,\n} from '../../redux/firebase/incomeCategoriesFB';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n  tableHead: {\n    backgroundColor: 'lightcyan',\n  },\n  addButtonWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingBottom: '20px',\n  },\n});\n\nconst Incomes = ({ props }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.addButtonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}>\n          Add more\n        </Button>\n      </div>\n      <AddCategory\n        open={open}\n        handleClose={handleClose}\n        updateCategory={createIncomeCategory}\n        icons={props.icons}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead className={classes.tableHead}>\n            <TableRow>\n              <TableCell>Category</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[\n              ...props.incomeCategories.map((el, i, arr) => (\n                <Category\n                  name={el.name}\n                  description={el.description}\n                  date={el.date}\n                  icon={el.icon}\n                  key={`${el.name}${i}`}\n                  deleteCategory={() => {\n                    deleteIncomeCategory(el.docId);\n                  }}\n                  updateCategory={(category) => {\n                    updateIncomeCategory(el.docId, category);\n                  }}\n                  icons={props.icons}\n                />\n              )),\n            ]}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default Incomes;\n","import React from 'react';\nimport { NavLink, Route, HashRouter, Redirect } from 'react-router-dom';\n\nimport Charges from './Charges';\nimport Incomes from './Incomes';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../Common/Header/HedaerContainer';\n\nconst useStyles = makeStyles({\n  // Categories: {\n  //   padding: '20px',\n  // },\n  sectionToggle: {\n    display: 'flex',\n    marginBottom: '20px',\n  },\n  toggleButton: {\n    textDecoration: 'none',\n    color: 'inherit',\n    letterSpacing: '1px',\n  },\n  toggleButtonActive: {\n    borderBottom: '1px solid cornflowerblue',\n  },\n});\n\nconst Categories = (props) => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <div className={classes.Categories}>\n        {/* <div className={classes.headerBlock}>\n          <div>\n            <h2>Categories</h2>\n          </div>\n          <div className={classes.balanceBlock}>\n            <div className={classes.balanceTitle}>Balance</div>\n            <div className={classes.balanceAmount}>$2,652.07</div>\n          </div>\n        </div> */}\n        <Header title=\"Categories\" />\n        <div className={classes.sectionToggle}>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/charges\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Charges\n            </NavLink>\n          </Button>\n          <Button color=\"primary\">\n            <NavLink\n              to=\"/categories/incomes\"\n              className={classes.toggleButton}\n              activeClassName={classes.toggleButtonActive}>\n              Incomes\n            </NavLink>\n          </Button>\n        </div>\n        <div>\n          <Route exact path=\"/categories/\">\n            <Redirect to=\"/categories/charges\" />\n          </Route>\n          <Route path=\"/categories/charges\" render={() => <Charges props={props} />} />\n          <Route path=\"/categories/incomes\" render={() => <Incomes props={props} />} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport Categories from './Categories';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    icons: state.icons,\n    incomeCategories: state.incomeCategories,\n    chargeCategories: state.chargeCategories,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);\n","import React from 'react';\nimport style from '../Settings.module.css';\n\nconst AvatarUpload = ({ img, updateInState }) => {\n  const updateImage = (e) => {\n    e.target.files[0] && updateInState(e.target.files[0]);\n  };\n\n  return (\n    <div className={style.avatar}>\n      <label htmlFor=\"file-input\" className={style.avatar_inner}>\n        <img src={img} alt=\"avatar\" />\n      </label>\n      <input id=\"file-input\" type=\"file\" style={{ display: 'none' }} onChange={updateImage} />\n    </div>\n  );\n};\n\nexport default AvatarUpload;\n\n// // Add a new document in collection \"cities\"\n// const littleUpdate = () => {\n//   db.collection('user-info')\n//     .doc('NEW')\n//     .set({\n//       userName: 'Avocado',\n//       moneyLimit: 2500,\n//       avatar: imageAsFile,\n//     })\n//     .then(function () {\n//       console.log('Document successfully written!');\n//     })\n//     .catch(function (error) {\n//       console.error('Error writing document: ', error);\n//     });\n// };\n\n// const handleFireBaseUpload = (e) => {\n//   e.preventDefault();\n//   console.log('start of upload');\n//   // async magic goes here...\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n// };\n\n// const updateUpload = () => {\n//   const uploadTask = storage.ref(`images/${imageAsFile.name}`).put(imageAsFile);\n\n//   uploadTask.on(\n//     'state_changed',\n//     (snapshot) => {},\n//     (error) => {\n//       console.log(error);\n//     },\n//     () => {\n//       storage\n//         .ref('images')\n//         .child(imageAsFile.name)\n//         .getDownloadURL()\n//         .then((url) => {\n//           db.collection('user-info')\n//             .add({\n//               userName: 'Ivan',\n//               moneyLimit: 2300,\n//               avatar: url,\n//             })\n//             .then(function () {\n//               console.log('Document successfully written!');\n//             });\n//           // db.collection('user-info')\n//           //   .doc('NEW')\n//           //   .set({\n//           //     userName: 'Ivan',\n//           //     moneyLimit: 2500,\n//           //   })\n//           //   .then(function () {\n//           //     console.log('Document successfully written!');\n//           //   })\n//           //   .catch(function (error) {\n//           //     console.error('Error writing document: ', error);\n//           //   });\n//           setImage(null);\n//         });\n//     },\n//   );\n// };\n","import React from 'react';\nimport style from '../Settings.module.css';\nimport { ButtonGroup, Button } from '@material-ui/core/';\n\nconst Limits = ({ title, limit, setLimit, step, disabled }) => {\n  const handleDecreaseLimit = () => {\n    if (title === 'amount') {\n      setLimit(limit > 100 ? limit - step : 100);\n    } else {\n      setLimit(limit > 10 ? limit - step : 10);\n    }\n  };\n  const handleIncreaseLimit = () => {\n    if (title === 'percent') {\n      setLimit(limit < 90 ? limit + step : 90);\n    } else {\n      setLimit(limit + step);\n    }\n  };\n  return (\n    <div>\n      <h3>Remain {title}</h3>\n      <span className={style.limit}>{limit}</span>\n      <ButtonGroup disabled={disabled} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={handleDecreaseLimit}>-</Button>\n        <Button onClick={handleIncreaseLimit}>+</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default Limits;\n","import React, { useState, useEffect } from 'react';\nimport {\n  handleFireBaseUploadInfo,\n  handleFireBaseUploadAvatar,\n} from '../../redux/firebase/profileFB';\n\n// components\nimport Avatar from './components/AvatarUpload';\nimport Limits from './components/Limits';\nimport TextField from '@material-ui/core/TextField';\nimport PhoneInput from 'react-phone-input-2';\nimport { Button, FormControlLabel, Switch } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n// styles\nimport 'react-phone-input-2/lib/material.css';\nimport style from './Settings.module.css';\n\nconst Settings = (props) => {\n  const [avatarNew, setAvatarNew] = useState(null);\n  const [avatar, setAvatar] = useState(props.avatar);\n  const [name, setName] = useState(props.userName);\n  const [phone, setPhone] = useState(props.phoneNumber);\n  const [showWarning, setWarning] = useState(props.showWarning);\n  const [currentMoneyLimit, setCurrentMoneyLimit] = useState(props.moneyLimit);\n  const [currentPercentLimit, setCurrentPercentLimit] = useState(props.percentLimit);\n  const [showSaved, setShowSaved] = useState(false);\n\n  useEffect(() => {\n    setAvatar(props.avatar);\n    setName(props.userName);\n    setPhone(props.phoneNumber);\n    setWarning(props.showWarning);\n    setCurrentMoneyLimit(props.moneyLimit);\n    setCurrentPercentLimit(props.percentLimit);\n  }, [props]);\n\n  const uploadNewData = () => {\n    if (avatarNew) {\n      handleFireBaseUploadAvatar(\n        setAvatarNew,\n        avatarNew,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    } else {\n      handleFireBaseUploadInfo(\n        avatar,\n        name,\n        phone,\n        showWarning,\n        currentMoneyLimit,\n        currentPercentLimit,\n        setShowSaved,\n      );\n    }\n  };\n\n  return (\n    <>\n      <Avatar img={avatar} updateInState={setAvatarNew} />\n      <div className={style.main}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          label=\"Name\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <PhoneInput\n          inputStyle={{ width: '100%' }}\n          id=\"phone\"\n          value={phone}\n          country=\"ua\"\n          onChange={(e) => setPhone(e)}\n        />\n        <div>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={showWarning}\n                onChange={() => {\n                  setWarning(!showWarning);\n                }}\n              />\n            }\n            label=\"Warn me when remains:\"\n          />\n        </div>\n        <Limits\n          title=\"amount\"\n          limit={currentMoneyLimit}\n          setLimit={setCurrentMoneyLimit}\n          step={100}\n          disabled={!showWarning}\n        />\n        <Limits\n          title=\"percent\"\n          limit={currentPercentLimit}\n          setLimit={setCurrentPercentLimit}\n          step={5}\n          disabled={!showWarning}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={uploadNewData}>\n          SAVE\n        </Button>\n        {showSaved && (\n          <Alert style={{ marginTop: '50px' }} variant=\"outlined\" severity=\"success\">\n            Your profile has been updated\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n","import { db, storage } from './firebase';\n\nexport const handleFireBaseUploadInfo = (\n  avatar,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  db.collection('user-info')\n    .doc('INFO')\n    .set({\n      avatar: avatar,\n      userName: name,\n      phoneNumber: phone,\n      showWarning: showWarning,\n      moneyLimit: currentMoneyLimit,\n      percentLimit: currentPercentLimit,\n    })\n    .then(() => {\n      console.log('Document successfully written without avatar!');\n    })\n    .catch((error) => {\n      console.error('Error: ', error);\n    });\n};\n\nexport const handleFireBaseUploadAvatar = (\n  setAvatarNew,\n  avatarNew,\n  name,\n  phone,\n  showWarning,\n  currentMoneyLimit,\n  currentPercentLimit,\n  setShowSaved,\n) => {\n  setShowSaved(true);\n  setTimeout(() => setShowSaved(false), 2000);\n  const uploadTask = storage.ref(`images/avatar.jpg`).put(avatarNew);\n  console.log('start of upload');\n  uploadTask.on('state_changed', () => {\n    storage\n      .ref('images')\n      .child(`avatar.jpg`)\n      .getDownloadURL()\n      .then((url) => {\n        db.collection('user-info')\n          .doc('INFO')\n          .set({\n            avatar: url,\n            userName: name,\n            phoneNumber: phone,\n            showWarning: showWarning,\n            moneyLimit: currentMoneyLimit,\n            percentLimit: currentPercentLimit,\n          })\n          .then(() => {\n            console.log('Document successfully written with avatar!');\n          })\n          .catch((error) => {\n            console.error('Error: ', error);\n          });\n        setAvatarNew(null);\n      });\n  });\n};\n","import Settings from './Settings';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    ...state.settings,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Settings);\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n//\n// Redux\nimport { connect, Provider } from 'react-redux';\nimport { setSettingsThunk } from '../src/redux/settingsReducer';\nimport { setChargeCategoriesThunk } from '../src/redux/chargeCategoriesReducer';\nimport { setIncomeCategoriesThunk } from '../src/redux/incomeCategoriesReducer';\n\nimport store from './redux/store';\n\n//\n// Components\nimport Sidebar from './components/Navbar/Navbar';\nimport HomePage from './components/HomePage/HomePageContainer';\nimport Charts from './components/Charts/ChartsContainer';\nimport Categories from './components/Categories/CategoriesContainer';\nimport Settings from './components/Settings/SettingsContainer';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.setSettingsThunk();\n    props.setChargeCategoriesThunk();\n    props.setIncomeCategoriesThunk();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <main>\n        <Route exact path=\"/\">\n          <Redirect to=\"/homepage\" />\n        </Route>\n        <Route path=\"/homepage\" render={() => <HomePage />} />\n        <Route path=\"/charts\" render={() => <Charts />} />\n        <Route path=\"/categories\" render={() => <Categories />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n      </main>\n    </div>\n  );\n};\n\nconst AppContainer = connect(null, {\n  setSettingsThunk,\n  setChargeCategoriesThunk,\n  setIncomeCategoriesThunk,\n})(App);\n\nconst MainAppContainer = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default MainAppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__l6zml\",\"temp\":\"Settings_temp__1tg-v\",\"avatar\":\"Settings_avatar__Y8NHF\",\"limit\":\"Settings_limit__3ky8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UQ3XW\",\"header__warning\":\"Header_header__warning__22kUm\",\"header_category\":\"Header_header_category__3yjTU\",\"header_balance\":\"Header_header_balance__3BGlO\",\"header_balance__title\":\"Header_header_balance__title__256QS\",\"header_balance__amount\":\"Header_header_balance__amount__2ePhU\",\"header_balance__red\":\"Header_header_balance__red__1Bueu\"};"],"sourceRoot":""}